[{"data":1,"prerenderedAt":759},["Reactive",2],{"content-query-Fa11pXtLy8":3,"content-navigation-8C37fagqQL":177},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":171,"_id":172,"_source":173,"_file":174,"_extension":175,"date":176},"/unity/2019-09-01-spriteatlas","unity",false,"","关于spriteAtlas打包那些事","UGUI的合图是在什么时候发生的？Unity合大图的时机是根据设置来的。Edit->ProjectSetting->Editor如上图，可以在打包的时候合，也可以编辑器运行的时候就合。Editor中合成的大图是放在缓存目录里：Library/AtlasCache。Enabled For Builds  （Unity将精灵打包到Sprite Atlas中，仅用于已发布的版本。Editor和Play模式引用原始源纹理而不是Sprite Atlas中的纹理。）。Always Enabled   （默认情况下启用此选项。Unity将选定的纹理打包到Sprite Atlases中，Sprite在运行时引",{"type":11,"children":12,"toc":163},"root",[13,22,34,43,57,72,77,90,96,101,107,126,131,144,149],{"type":14,"tag":15,"props":16,"children":18},"element","h3",{"id":17},"ugui的合图是在什么时候发生的",[19],{"type":20,"value":21},"text","UGUI的合图是在什么时候发生的？",{"type":14,"tag":23,"props":24,"children":25},"p",{},[26,28],{"type":20,"value":27},"Unity合大图的时机是根据设置来的。",{"type":14,"tag":29,"props":30,"children":31},"em",{},[32],{"type":20,"value":33},"Edit->ProjectSetting->Editor",{"type":14,"tag":23,"props":35,"children":36},{},[37],{"type":14,"tag":38,"props":39,"children":42},"img",{"alt":40,"src":41},"1567211125212","/images/2019-09-01-spriteAtlas/1567211125212.png",[],{"type":14,"tag":23,"props":44,"children":45},{},[46,48,55],{"type":20,"value":47},"如上图，可以在打包的时候合，也可以编辑器运行的时候就合。Editor中合成的大图是放在缓存目录里：",{"type":14,"tag":49,"props":50,"children":52},"code",{"className":51},[],[53],{"type":20,"value":54},"Library/AtlasCache",{"type":20,"value":56},"。",{"type":14,"tag":58,"props":59,"children":60},"ul",{},[61,67],{"type":14,"tag":62,"props":63,"children":64},"li",{},[65],{"type":20,"value":66},"Enabled For Builds  （Unity将精灵打包到Sprite Atlas中，仅用于已发布的版本。Editor和Play模式引用原始源纹理而不是Sprite Atlas中的纹理。）。",{"type":14,"tag":62,"props":68,"children":69},{},[70],{"type":20,"value":71},"Always Enabled   （默认情况下启用此选项。Unity将选定的纹理打包到Sprite Atlases中，Sprite在运行时引用打包的Textures。但是，Sprites将在Editor模式期间引用原始未压缩的纹理。）。",{"type":14,"tag":23,"props":73,"children":74},{},[75],{"type":20,"value":76},"简单的说:",{"type":14,"tag":58,"props":78,"children":79},{},[80,85],{"type":14,"tag":62,"props":81,"children":82},{},[83],{"type":20,"value":84},"如果想测试spritepacker是否生效以及代码相关..这时候选择Always Enabled..可以理解为生产模式",{"type":14,"tag":62,"props":86,"children":87},{},[88],{"type":20,"value":89},"如果平时开发Enabled For Builds,只有打包的时候才构建..可以理解为开发模式",{"type":14,"tag":15,"props":91,"children":93},{"id":92},"include-in-build到底干了什么",[94],{"type":20,"value":95},"Include in Build到底干了什么？",{"type":14,"tag":23,"props":97,"children":98},{},[99],{"type":20,"value":100},"勾选了Include in Build后，图集资源会被打进App包体里（不是AssetBundle包）。如果图集是AssetBundle包管理的，最好不要勾选它，会造成资源双份。至于哪些资源会双份，需要实验下看看。",{"type":14,"tag":15,"props":102,"children":104},{"id":103},"禁用include-in-build使用late-binding",[105],{"type":20,"value":106},"禁用Include in Build,使用Late Binding",{"type":14,"tag":108,"props":109,"children":110},"ol",{},[111,116,121],{"type":14,"tag":62,"props":112,"children":113},{},[114],{"type":20,"value":115},"只要精灵打包到任何精灵图集内，但精灵图集未绑定为默认图集（例如未选中“Include in build”选项），精灵便会在场景中不可见。",{"type":14,"tag":62,"props":117,"children":118},{},[119],{"type":20,"value":120},"用户可以监听回调 SpriteAtlas.atlasRequested。",{"type":14,"tag":62,"props":122,"children":123},{},[124],{"type":20,"value":125},"此委托方法将提供一个要绑定的图集标签和一个接受 SpriteAtlas 资源的 System.Action。用户应按任意方式（脚本引用、Resources.load、资源包）加载该资源，并将该资源提供给 System.Action。",{"type":14,"tag":23,"props":127,"children":128},{},[129],{"type":20,"value":130},"注意:",{"type":14,"tag":58,"props":132,"children":133},{},[134,139],{"type":14,"tag":62,"props":135,"children":136},{},[137],{"type":20,"value":138},"SpriteAtlas.atlasRequested只会请求一次无论成功还是失败,所以要确保你的atlasRequested回调一定能返回正确的值",{"type":14,"tag":62,"props":140,"children":141},{},[142],{"type":20,"value":143},"当使用addressable异步加载spriteatlas的时候,也会触发SpriteAtlas.atlasRequested,这个时候内存中可能会存在两份资源的引用..记得释放其中的一份",{"type":14,"tag":15,"props":145,"children":147},{"id":146},"相关链接",[148],{"type":20,"value":146},{"type":14,"tag":58,"props":150,"children":151},{},[152],{"type":14,"tag":62,"props":153,"children":154},{},[155],{"type":14,"tag":156,"props":157,"children":161},"a",{"href":158,"rel":159},"https://connect.unity.com/doc/Manual/SpriteAtlas",[160],"nofollow",[162],{"type":20,"value":158},{"title":7,"searchDepth":164,"depth":164,"links":165},2,[166,168,169,170],{"id":17,"depth":167,"text":21},3,{"id":92,"depth":167,"text":95},{"id":103,"depth":167,"text":106},{"id":146,"depth":167,"text":146},"markdown","content:unity:2019-09-01-spriteAtlas.md","content","unity/2019-09-01-spriteAtlas.md","md","2019-09-01",[178,188,315,364,416,429,541],{"title":179,"_path":180,"children":181},"Art","/art",[182,185],{"title":183,"_path":184},"如何用蒙版将两个图过渡融合","/art/2020-09-03-ps-ronghe-pics",{"title":186,"_path":187},"像素画入门","/art/2022-02-02-xiangsuhuarumen",{"title":189,"_path":190,"children":191},"Dotnet","/dotnet",[192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312],{"title":193,"_path":194},"Linux部署dotnetcore记录","/dotnet/2019-06-05-linux-dotnet-daemon",{"title":196,"_path":197},"时间轮的引入","/dotnet/2019-10-29-time-wheel",{"title":199,"_path":200},"帧同步的相关问题","/dotnet/2019-11-01-lock-step",{"title":202,"_path":203},"状态同步的相关问题","/dotnet/2019-11-01-state-sync-npc",{"title":205,"_path":206},"状态同步--技能系统的同步机制分析","/dotnet/2019-11-02-state-sync-skill",{"title":208,"_path":209},"Creating a Quartz.NET hosted service with ASP.NET Core","/dotnet/2019-11-05-quartz",{"title":211,"_path":212},"DatetimeOffset和Datetime的区别","/dotnet/2019-12-01-datetimeoffset",{"title":214,"_path":215},"大小端字节序(Big Endian和Little Endian)","/dotnet/2020-01-05-big-little-endian",{"title":217,"_path":218},"dll文件的加载","/dotnet/2020-01-06-dll-load",{"title":220,"_path":221},"延迟补偿在C/S架构游戏协议设计和优化中的应用","/dotnet/2020-02-02-latency_compensating_methods_in_clientserver_in-game_protocol_design_and_optimization",{"title":223,"_path":224},"延迟补偿和对时的相关总结","/dotnet/2020-02-02-latency_compensating-rtt",{"title":226,"_path":227},"快节奏多人游戏同步(1)-ClientServer架构","/dotnet/2020-02-02-net-sync-client-server-game-architecture",{"title":229,"_path":230},"快节奏多人游戏同步(2)-客户端预测与服务器校对","/dotnet/2020-02-02-net-sync-client-side-prediction-and-server-reconciliation",{"title":232,"_path":233},"快节奏多人游戏同步(3)-Entity插值","/dotnet/2020-02-02-net-sync-entity-interpolation",{"title":235,"_path":236},"快节奏多人游戏同步(4)-延时补偿","/dotnet/2020-02-02-net-sync-lag-compensation",{"title":238,"_path":239},"守望先锋等FPS游戏的网络同步","/dotnet/2020-02-02-overwatch-a-guide-to-understanding-netcode",{"title":241,"_path":242},"起源引擎网络同步模型","/dotnet/2020-02-02-source_multiplayer_networking",{"title":244,"_path":245},"orleans的部署模式","/dotnet/2020-02-03-orleans-deployment",{"title":247,"_path":248},"一致性hash算法","/dotnet/2020-02-06-consistent_hash",{"title":250,"_path":251},"地图的aoi","/dotnet/2020-02-07-aoi",{"title":253,"_path":254},"游戏的匹配机制ELO","/dotnet/2020-02-09-room-elo",{"title":256,"_path":257},"C# 深浅复制","/dotnet/2020-02-10-icloneable",{"title":259,"_path":260},"C#引用类型对象在循环引用时会不会内存泄漏","/dotnet/2020-02-11-gc",{"title":262,"_path":263},"扒一扒.net、.net framework、mono和Unity","/dotnet/2020-02-12-netcore-mono-netframework",{"title":265,"_path":266},"c#编译和运行启动原理","/dotnet/2020-02-13-csharp-run",{"title":268,"_path":269},"abp新建项目指南","/dotnet/2020-05-29-abp-start",{"title":271,"_path":272},"2020 06 11 IdentityServer Use","/dotnet/2020-06-11-identityserver-use",{"title":274,"_path":275},"关于abp的用户的一些问题","/dotnet/2020-07-05-abp-database-user",{"title":277,"_path":278},"abp的dOC模块使用","/dotnet/2020-07-10-abp-doc",{"title":280,"_path":281},"abp默认语言规则","/dotnet/2020-07-15-abp-default-language",{"title":283,"_path":284},"Orleans 最佳实践","/dotnet/2020-08-09-orleans-best-practices",{"title":286,"_path":287},"c#特性参数","/dotnet/2020-08-10-param-attribute",{"title":289,"_path":290},".NET Core 获取 HttpContext.Current 以及 AsyncLocal 与 ThreadLocal","/dotnet/2020-08-11-httpcontextaccessor-asynclocal",{"title":292,"_path":293},"Kestrel源码分析","/dotnet/2020-08-15-kestrel-source-code",{"title":295,"_path":296},"ConcurrentDictionary并发字典","/dotnet/2020-08-16-concurrentdictionary",{"title":298,"_path":299},"IOptions、IOptionsMonitor以及IOptionsSnapshot","/dotnet/2020-08-17-netcore-options",{"title":301,"_path":302},".NET Core/Framework 创建委托以大幅度提高反射调用的性能","/dotnet/2020-11-13-reflection-method",{"title":304,"_path":305},"C＃枚举中使用Flags特性","/dotnet/2020-11-24-flags",{"title":307,"_path":308},"谷歌浏览器下netcore登录失败问题","/dotnet/2020-12-11-chrome-login-fail",{"title":310,"_path":311},"Converting between Structs and Byte Arrays","/dotnet/2021-05-01-converting-between-structs-and-byte-arrays",{"title":313,"_path":314},"c#在重写object中的Equal方法时需要对GetHashCode进行重写（Dictionary引用）","/dotnet/2022-08-15-equal-hashcode",{"title":316,"_path":317,"children":318},"Game","/game",[319,322,325,328,331,334,337,340,343,346,349,352,355,358,361],{"title":320,"_path":321},"使用柏林噪声算法生成地图","/game/2021-01-20-perlin-map",{"title":323,"_path":324},"波函数坍塌算法生成地图","/game/2021-01-21-wave-collapse-function",{"title":326,"_path":327},"文明6地图生成算法","/game/2021-01-22-civ-map",{"title":329,"_path":330},"roguelike地牢生成算法","/game/2021-01-23-roguelike-map",{"title":332,"_path":333},"Spelunky关卡生成","/game/2021-01-23-spelunky-map",{"title":335,"_path":336},"Edgar源代码解读","/game/2021-06-12-edgar-code-read",{"title":338,"_path":339},"rpgbuild的一些备注","/game/2021-06-15-rpgbuilder",{"title":341,"_path":342},"游戏人物设计","/game/2021-08-05-game-task-design",{"title":344,"_path":345},"unity gameplay ability源代码解析","/game/2021-12-14-untiy-gameplay-ablility-sourcecode",{"title":347,"_path":348},"苟与剑游戏技能分析","/game/2021-12-21-gyj-skill",{"title":350,"_path":351},"quest machine 使用相关","/game/2022-02-19-quest-machine",{"title":353,"_path":354},"苟与剑中的单位生成方式","/game/2022-03-16-gyj-map",{"title":356,"_path":357},"ecs中实体创建方法","/game/2022-08-03-ecs",{"title":359,"_path":360},"暗黑2怪物等级和掉落规则","/game/2022-08-05-dia2",{"title":362,"_path":363},"行为树源代码解析","/game/2022-08-21-behavior-tree-source-code",{"title":365,"_path":366,"children":367},"Gyj","/gyj",[368,371,374,377,380,383,386,389,392,395,398,401,404,407,410,413],{"title":369,"_path":370},"美术要求","/gyj/2022-06-11-meishuyaoqiu",{"title":372,"_path":373},"游戏基础知识","/gyj/2022-06-12-jichuzhishi",{"title":375,"_path":376},"2022 08 22 地图房间的种类","/gyj/2022-08-22-detufangjiandezhonglei",{"title":378,"_path":379},"2022 08 22 奇遇事件","/gyj/2022-08-22-qiyushijian",{"title":381,"_path":382},"游戏流程","/gyj/2022-08-22-youxiliucheng",{"title":384,"_path":385},"物品产出表","/gyj/2022-08-22-wupinchanchubiao",{"title":387,"_path":388},"玩法","/gyj/2022-08-22-wanfa",{"title":390,"_path":391},"初入江湖","/gyj/2022-08-22-diyizhang",{"title":393,"_path":394},"2022 08 22 职业与工作","/gyj/2022-08-22-zhiyeyugongzuo",{"title":396,"_path":397},"天下霸图研究","/gyj/2022-11-01-tianxiabatu",{"title":399,"_path":400},"流放之路关于伤害公式和技能的分析","/gyj/2022-11-17-liufangzhilu",{"title":402,"_path":403},"门派内容相关","/gyj/2022-11-17-sect",{"title":405,"_path":406},"2022 12 01 养殖","/gyj/2022-12-01-yangzhi",{"title":408,"_path":409},"种植","/gyj/2022-12-01-zhongzhi",{"title":411,"_path":412},"人物属性设计","/gyj/2022-12-15-renwushuxing",{"title":414,"_path":415},"跑商","/gyj/2023-11-01-paoshang",{"title":417,"_path":418,"children":419},"Js","/js",[420,423,426],{"title":421,"_path":422},"如何在TypeScript中使用JS类库","/js/2022-02-12-typescript-use-js",{"title":424,"_path":425},"nuxt3项目初始化失败","/js/2023-05-16-nuxt3-init-fail",{"title":427,"_path":428},"Flex 布局使用","/js/2024-03-17-flex-use",{"title":430,"_path":431,"children":432},"Tool","/tool",[433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508,511,514,517,520,523,526,529,532,535,538],{"title":434,"_path":435},"windows发送到手机Ftp","/tool/2019-06-20-windows-send-to-ftp",{"title":437,"_path":438},"windows特殊目录修复","/tool/2019-06-24-shell-folders-are-displayed-with-the-standard-folder-icon-in-windows",{"title":440,"_path":441},"scourcetree  总是需要输入密码","/tool/2019-08-07-sourcetree-git-password",{"title":443,"_path":444},"powershell 常用命令","/tool/2019-08-10-powershell-command",{"title":446,"_path":447},"scoop的使用","/tool/2019-08-20-scoop-use",{"title":449,"_path":450},"使用配置文件来管理NuGet包版本F","/tool/2019-09-02-nuget-manager",{"title":452,"_path":453},"Redis的两种持久化RDB和AOF","/tool/2019-09-02-redis-aof-rdb",{"title":455,"_path":456},"使用 SSH 登陆谷歌云 root 或者 普通账户的方法","/tool/2020-01-02-google-clound-local-login",{"title":458,"_path":459},"CentOS 下安装Shadowsocks 搭建ss","/tool/2020-01-12-centosn-ss-install",{"title":461,"_path":462},"mac下brew 使用","/tool/2020-01-13-brew",{"title":464,"_path":465},"术语中英文对照","/tool/2020-02-05-game_en_zh",{"title":467,"_path":468},"Excel中以文本形式存储的数字","/tool/2020-02-06-excel-text-number",{"title":470,"_path":471},"protobuf序列化的一些问题","/tool/2020-03-25-protobuf-empty-collections",{"title":473,"_path":474},"为博客将 RSS 转为邮件订阅","/tool/2020-06-26-blog-mail-sub",{"title":476,"_path":477},"github下载代码的速度太慢","/tool/2020-06-27-linux-github-slow",{"title":479,"_path":480},"win10开始菜单添加软件以及备份和恢复","/tool/2020-07-02-win10-start-menu",{"title":482,"_path":483},"gitbook的使用","/tool/2020-07-06-gitbook-use",{"title":485,"_path":486},"github actions 简单使用","/tool/2020-07-11-github-actions",{"title":488,"_path":489},"使用hexo建立博客并部署到github","/tool/2020-07-12-hexo-github",{"title":491,"_path":492},"终端下设置代理","/tool/2020-07-13-terminal-proxy",{"title":494,"_path":495},"发现nuget包太占用C盘，怎么办？","/tool/2020-08-30-nuget-is-big",{"title":497,"_path":498},"unity商店下载资源迁移","/tool/2020-11-15-unity-is-big",{"title":500,"_path":501},"关于coding的pages介绍","/tool/2020-11-16-coding-pages",{"title":503,"_path":504},"一些常用的dns服务器","/tool/2021-05-06-dns",{"title":506,"_path":507},"UE4素材破解","/tool/2021-11-06-ue4-view",{"title":509,"_path":510},"安装cockpit通过nginx代理访问","/tool/2021-11-07-cockpit-linux",{"title":512,"_path":513},"Windows LTSC、LTSB、Server 安装 Windows Store 应用商店 ","/tool/2021-11-15-install-windowsstore",{"title":515,"_path":516},"我是如何把 VS Code 插件启动速度从 8 秒减少到 1 秒 ","/tool/2021-12-02-vscode-plugins-big",{"title":518,"_path":519},"云效部署hexo到自己的主机 ","/tool/2021-12-11-yunxiao-liushuixian-hexo",{"title":521,"_path":522},"github 怎么合并原始分支？ ","/tool/2021-12-12-github-sync",{"title":524,"_path":525},"code server安装制作online ide","/tool/2022-01-30-code-server",{"title":527,"_path":528},"rider的使用","/tool/2022-08-02-rider-use",{"title":530,"_path":531},"2022 08 09 Amd Over","/tool/2022-08-09-amd-over",{"title":533,"_path":534},"rider破解","/tool/2022-11-19-rider-po-jie",{"title":536,"_path":537},"stable diffusion install","/tool/2023-01-20-stable-diffusion-install",{"title":539,"_path":540},"CGI, FastCGI, WSGI, uWSGI, uwsgi一文搞懂","/tool/2023-02-15-cgi-fastcgi-wsgi-uswgi",{"title":542,"_path":543,"children":544},"Unity","/unity",[545,548,551,554,557,560,563,566,569,572,573,576,579,582,585,588,591,594,597,600,603,606,609,612,615,618,621,624,627,630,633,636,639,642,645,648,651,654,657,660,663,666,669,672,675,678,681,684,687,690,693,696,699,702,705,708,711,714,717,720,723,726,729,732,735,738,741,744,747,750,753,756],{"title":546,"_path":547},"Unity 导出 Android 64-bit 版本","/unity/2019-06-20-unity-android-x64",{"title":549,"_path":550},"Unity的il2cpp","/unity/2019-06-20-unity-il2cpp-debugger",{"title":552,"_path":553},"googlePlay 发布问题","/unity/2019-06-23-googlplay-pulish",{"title":555,"_path":556},"关于unity的适配问题","/unity/2019-08-09-unity2d-shipei",{"title":558,"_path":559},"一次精通 RectTransform","/unity/2019-08-10-ugui-recttransform",{"title":561,"_path":562},"一次精通 eventmanager","/unity/2019-08-11-ugui-eventmanager",{"title":564,"_path":565},"ugui的eventsystem源码解读","/unity/2019-08-12-ugui-eventsystem-sourcecode",{"title":567,"_path":568},"Unity Raycasters 剖析","/unity/2019-08-12-ugui-raycasters",{"title":570,"_path":571},"关于addressable那些事","/unity/2019-09-01-addressable",{"title":8,"_path":4},{"title":574,"_path":575},"ilruntime的研究","/unity/2019-09-02-ilruntime",{"title":577,"_path":578},"unity的宏以及添加net框架中未引用的dll","/unity/2019-09-02-unity-reference-dll",{"title":580,"_path":581},"xlua注入源码解读","/unity/2019-09-03-xlua-inject",{"title":583,"_path":584},"如何快速的注入汇编","/unity/2019-09-04-mono.cecil-inject",{"title":586,"_path":587},"2D游戏视差背景的实现","/unity/2019-09-13-parallax-2d",{"title":589,"_path":590},"unity使用代理","/unity/2019-11-15-unity-proxy",{"title":592,"_path":593},"一篇文章搞定Entitas","/unity/2020-01-01-unity-entitas",{"title":595,"_path":596},"unity攻击范围检测的方式区别","/unity/2020-01-11-unity-attack-range-detection-type",{"title":598,"_path":599},"常见的2D碰撞检测","/unity/2020-01-12-collision-detection",{"title":601,"_path":602},"unity攻击范围检测","/unity/2020-01-13-unity-attack-detection",{"title":604,"_path":605},"技能系统","/unity/2020-02-15-skill-system",{"title":607,"_path":608},"游戏buff系统设计","/unity/2020-02-16-buff-system",{"title":610,"_path":611},"角色状态设计","/unity/2020-02-17-character-states",{"title":613,"_path":614},"理解托管堆","/unity/2020-02-18-bestpracticeunderstandingperformanceinunity",{"title":616,"_path":617},"理解自动内存管理","/unity/2020-02-19-understandingautomaticmemorymanagement",{"title":619,"_path":620},"unity 移动平台打包丢失shader的问题","/unity/2020-02-20-shader-lost",{"title":622,"_path":623},"Unity的调试相关","/unity/2020-03-01-unity-debug",{"title":625,"_path":626},"unity启动运行脚本流程","/unity/2020-03-04-unity-startup",{"title":628,"_path":629},"unity的坐标体系","/unity/2020-07-01-unity-coordinate",{"title":631,"_path":632},"2020 07 03 Unity Mesh","/unity/2020-07-03-unity-mesh",{"title":634,"_path":635},"unity Render Pipeline","/unity/2020-07-04-unity-render-pipeline",{"title":637,"_path":638},"Notch Solution","/unity/2020-08-29-notch-solution",{"title":640,"_path":641},"unity 项目dll检查","/unity/2020-08-30-unity-dll-check",{"title":643,"_path":644},"UNITY的垂直同步和帧率","/unity/2020-09-05-unity-vsynccount",{"title":646,"_path":647},"UNITY性能优化流程","/unity/2020-09-10-optimizing-for-performance",{"title":649,"_path":650},"堆栈内存Stack和堆内存Heap","/unity/2020-09-11-stack-heap",{"title":652,"_path":653},"unity的addressables","/unity/2020-09-12-addressables",{"title":655,"_path":656},"游戏中的向量使用","/unity/2020-09-13-vector",{"title":658,"_path":659},"UNITY ECS 详解","/unity/2020-10-15-unity-ecs",{"title":661,"_path":662},"UNITY JOB SYSTEM详解","/unity/2020-10-16-unity-job",{"title":664,"_path":665},"运行时打包图集","/unity/2020-10-17-runtime-spriteatlas",{"title":667,"_path":668},"unity ecs component","/unity/2020-10-18-unity-ecs-component",{"title":670,"_path":671},"基于 Game Object Conversion 和 SubScene 的 DOTS 开发工作流","/unity/2020-10-19-game-object-conversion-and-subscene",{"title":673,"_path":674},"源代码分析world的创建","/unity/2020-10-20-ecs-world",{"title":676,"_path":677},"unity使用platforms构建","/unity/2020-10-21-platform",{"title":679,"_path":680},"Unity rendering order渲染顺序","/unity/2020-10-22-unity-render-order",{"title":682,"_path":683},"关于静态批处理/动态批处理/GPU Instancing /SRP Batcher的详细剖析","/unity/2020-10-23-unity-optimizing-gpu",{"title":685,"_path":686},"unity的ScreenToWorldPoint","/unity/2020-10-24-screentoworldpoint",{"title":688,"_path":689},"URP性能测试","/unity/2020-10-24-unity-urp-performance",{"title":691,"_path":692},"如何使用Unity ECS打造Reactive System？","/unity/2020-11-11-how-to-build-reactive-systems-with-unity-ecs",{"title":694,"_path":695},"Unity中Sprite和UI Image的区别","/unity/2020-11-12-sprite-image-diff",{"title":697,"_path":698},"简单保存工具","/unity/2020-11-13-simple-save",{"title":700,"_path":701},"2020 11 14 Netcode","/unity/2020-11-14-netcode",{"title":703,"_path":704},"ecs中的parent","/unity/2020-11-15-ecs-parent",{"title":706,"_path":707},"ability","/unity/2020-11-16-dotssample",{"title":709,"_path":710},"unity world time system","/unity/2020-11-17-unity-ecs-worldtime",{"title":712,"_path":713},"netcode源代码解读","/unity/2020-11-18-netcode-sourcecode",{"title":715,"_path":716},"pitch yaw roll是什么","/unity/2020-11-29-pitch-yaw-roll",{"title":718,"_path":719},"A Native Collection has not been disposed, resulting in a memory leak. Allocated from:","/unity/2020-12-20-collection-has-not-been-disposed",{"title":721,"_path":722},"解决Unity鼠标坐标点转成世界坐标系坐标点","/unity/2021-01-24-screentoworld",{"title":724,"_path":725},"2021 01 25 Tilemap","/unity/2021-01-25-tilemap",{"title":727,"_path":728},"Unity RenderTexture的应用","/unity/2021-04-11-render-texture",{"title":730,"_path":731},"commandbuff的一些问题","/unity/2021-05-20-ecs-commandbuff-question",{"title":733,"_path":734},"How to Make One Way Platform in unity","/unity/2021-06-13-how-to-make-one-way-platform",{"title":736,"_path":737},"UNITY的渲染顺序","/unity/2021-06-14-unity-render-order",{"title":739,"_path":740},"防止变量引用丢失 FormerlySerializedAs","/unity/2021-07-20-formerlyserializedas",{"title":742,"_path":743},"AI-PLANNER使用","/unity/2021-08-01-ai-planner",{"title":745,"_path":746},"Increased script assembly reload time","/unity/2021-10-01-increased-script-assembly-reload-time",{"title":748,"_path":749},"关于unity的热重载的研究","/unity/2022-01-02-unity-hot-reload",{"title":751,"_path":752},"Editor Iteration Profiler的使用","/unity/2022-01-28-unity-editor-iteration-profiler",{"title":754,"_path":755},"CircleCast和Overlapple的区别是什么","/unity/2022-04-02-circlecast-overlapple-diff",{"title":757,"_path":758},"unity ecs的备忘录","/unity/2022-09-10-ecs-beiwang",1710779041897]