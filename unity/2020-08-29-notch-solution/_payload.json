[{"data":1,"prerenderedAt":837},["Reactive",2],{"content-query-TCYecv8dAV":3,"content-navigation-8C37fagqQL":255},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":249,"_id":250,"_source":251,"_file":252,"_extension":253,"date":254},"/unity/2020-08-29-notch-solution","unity",false,"","Notch Solution","Screen.safeArea会返回移动平台安全区的Rect。例如，iPhoneX（2436x1125px）横屏时，Screen.safeArea返回的值为Rect（132，63，2172，1062）。如图：",{"type":11,"children":12,"toc":244},"root",[13,20,28,33,38,45,50,55,62,67,72,79,86,91,103,110,115,193,199,208,213,221,226,231,239],{"type":14,"tag":15,"props":16,"children":17},"element","p",{},[18],{"type":19,"value":9},"text",{"type":14,"tag":15,"props":21,"children":22},{},[23],{"type":14,"tag":24,"props":25,"children":27},"img",{"alt":24,"src":26},"/images/2020-08-29-Notch-Solution/v2-2381f8819f70e7cd357662188e2616b6_720w.jpg",[],{"type":14,"tag":15,"props":29,"children":30},{},[31],{"type":19,"value":32},"适配思路：以界面为单位，打开界面时，获取当前设备的safeArea，调整界面的锚点，进行适配。以下利用SafeArea.cs脚本，对当前window进行适配。主要考虑三种情况：",{"type":14,"tag":15,"props":34,"children":35},{},[36],{"type":19,"value":37},"情况1：UI中没有全屏背景",{"type":14,"tag":15,"props":39,"children":40},{},[41],{"type":14,"tag":24,"props":42,"children":44},{"alt":24,"src":43},"/images/2020-08-29-Notch-Solution/v2-b472160ce00e02f830c3e09dd2bc5747_720w.jpg",[],{"type":14,"tag":15,"props":46,"children":47},{},[48],{"type":19,"value":49},"解决思路：直接调整当前window的锚点，进行适配。",{"type":14,"tag":15,"props":51,"children":52},{},[53],{"type":19,"value":54},"情况2：UI中有全屏背景",{"type":14,"tag":15,"props":56,"children":57},{},[58],{"type":14,"tag":24,"props":59,"children":61},{"alt":24,"src":60},"/images/2020-08-29-Notch-Solution/v2-baffbbebb247c6466fcf5f0b9ddd1a95_720w.jpg",[],{"type":14,"tag":15,"props":63,"children":64},{},[65],{"type":19,"value":66},"解决思路：把背景分离到window之外，只对当前window进行适配，对背景不做处理。为了方便适配，我们可以把背景单独做成window，在UI框架中对window和背景进行分开管理。上图中，蓝色为背景图片，红色为适配的window。",{"type":14,"tag":15,"props":68,"children":69},{},[70],{"type":19,"value":71},"情况3：适配需要靠边的UI(例如侧边的聊天弹窗等)",{"type":14,"tag":15,"props":73,"children":74},{},[75],{"type":14,"tag":24,"props":76,"children":78},{"alt":24,"src":77},"/images/2020-08-29-Notch-Solution/v2-bb8467626340c8dac46c81adf176b1c3_720w.jpg",[],{"type":14,"tag":15,"props":80,"children":81},{},[82],{"type":14,"tag":24,"props":83,"children":85},{"alt":24,"src":84},"/images/2020-08-29-Notch-Solution/v2-615a71b2dfd94b07e4bed4d0fbcea2db_720w.jpg",[],{"type":14,"tag":15,"props":87,"children":88},{},[89],{"type":19,"value":90},"解决思路：把需要靠边的按钮拉伸到屏幕之外，达到适配效果。",{"type":14,"tag":15,"props":92,"children":93},{},[94],{"type":14,"tag":95,"props":96,"children":100},"a",{"href":97,"rel":98},"https://github.com/jirowang0409/Garena",[99],"nofollow",[101],{"type":19,"value":102},"jirowang0409/Garena: Projects in Garena (github.com)",{"type":14,"tag":104,"props":105,"children":107},"h1",{"id":106},"notch-solution",[108],{"type":19,"value":109},"notch solution",{"type":14,"tag":15,"props":111,"children":112},{},[113],{"type":19,"value":114},"首先分为两个component.",{"type":14,"tag":116,"props":117,"children":118},"ul",{},[119,141],{"type":14,"tag":120,"props":121,"children":122},"li",{},[123,130,132,139],{"type":14,"tag":95,"props":124,"children":127},{"href":125,"rel":126},"https://exceed7.com/notch-solution/components/ui-behaviour/safe-padding.html",[99],[128],{"type":19,"value":129},"SafePadding",{"type":19,"value":131},"Works with ",{"type":14,"tag":133,"props":134,"children":136},"code",{"className":135},[],[137],{"type":19,"value":138},"RectTransform",{"type":19,"value":140}," tree of the uGUI component system.",{"type":14,"tag":120,"props":142,"children":143},{},[144,151,153,160,162,168,170,176,178,184,186,191],{"type":14,"tag":95,"props":145,"children":148},{"href":146,"rel":147},"https://exceed7.com/notch-solution/components/adaptation/safe-adaptation.html",[99],[149],{"type":19,"value":150},"SafeAdaptation",{"type":19,"value":152},"They are based on using ",{"type":14,"tag":95,"props":154,"children":157},{"href":155,"rel":156},"https://docs.unity3d.com/ScriptReference/Playables.Playable.html",[99],[158],{"type":19,"value":159},"Playables API",{"type":19,"value":161}," to control ",{"type":14,"tag":133,"props":163,"children":165},{"className":164},[],[166],{"type":19,"value":167},"GameObject",{"type":19,"value":169}," with animation playables, therefore utilizing ",{"type":14,"tag":133,"props":171,"children":173},{"className":172},[],[174],{"type":19,"value":175},"Animator",{"type":19,"value":177}," and ",{"type":14,"tag":133,"props":179,"children":181},{"className":180},[],[182],{"type":19,"value":183},"AnimationClip",{"type":19,"value":185}," instead of ",{"type":14,"tag":133,"props":187,"children":189},{"className":188},[],[190],{"type":19,"value":138},{"type":19,"value":192},".",{"type":14,"tag":194,"props":195,"children":197},"h2",{"id":196},"原理",[198],{"type":19,"value":196},{"type":14,"tag":200,"props":201,"children":203},"pre",{"code":202},"        protected Rect SafeAreaRelative\n            => NotchSolutionUtility.ShouldUseNotchSimulatorValue ? storedSimulatedSafeAreaRelative : NotchSolutionUtility.ScreenSafeAreaRelative;\n",[204],{"type":14,"tag":133,"props":205,"children":206},{"__ignoreMap":7},[207],{"type":19,"value":202},{"type":14,"tag":15,"props":209,"children":210},{},[211],{"type":19,"value":212},"我们看这句,如果是使用了模拟器,则使用simulatedSafeAreaRelative",{"type":14,"tag":200,"props":214,"children":216},{"code":215},"        void INotchSimulatorTarget.SimulatorUpdate(Rect simulatedSafeAreaRelative, Rect[] simulatedCutoutsRelative)\n        {\n            this.storedSimulatedSafeAreaRelative = simulatedSafeAreaRelative;\n            this.storedSimulatedCutoutsRelative = simulatedCutoutsRelative;\n            UpdateRectBase();\n        }\n",[217],{"type":14,"tag":133,"props":218,"children":219},{"__ignoreMap":7},[220],{"type":19,"value":215},{"type":14,"tag":15,"props":222,"children":223},{},[224],{"type":19,"value":225},"在Editor代码中如果改变了模拟器的环境.则会更改该值",{"type":14,"tag":15,"props":227,"children":228},{},[229],{"type":19,"value":230},"而生产环境中则会使用NotchSolutionUtility.ScreenSafeAreaRelative,他也是通过Screen.safeArea进行判断的",{"type":14,"tag":200,"props":232,"children":234},{"code":233},"        internal static Rect ScreenSafeAreaRelative\n        {\n            get\n            {\n                Rect absolutePaddings = Screen.safeArea;\n                cachedScreenSafeAreaRelative = ToScreenRelativeRect(absolutePaddings);\n                cachedScreenSafeArea = absolutePaddings;\n                safeAreaRelativeCached = true;\n                return cachedScreenSafeAreaRelative;\n            }\n        }\n",[235],{"type":14,"tag":133,"props":236,"children":237},{"__ignoreMap":7},[238],{"type":19,"value":233},{"type":14,"tag":194,"props":240,"children":242},{"id":241},"safepadding",[243],{"type":19,"value":241},{"title":7,"searchDepth":245,"depth":245,"links":246},2,[247,248],{"id":196,"depth":245,"text":196},{"id":241,"depth":245,"text":241},"markdown","content:unity:2020-08-29-Notch-Solution.md","content","unity/2020-08-29-Notch-Solution.md","md","2020-08-29",[256,266,393,442,494,507,619],{"title":257,"_path":258,"children":259},"Art","/art",[260,263],{"title":261,"_path":262},"如何用蒙版将两个图过渡融合","/art/2020-09-03-ps-ronghe-pics",{"title":264,"_path":265},"像素画入门","/art/2022-02-02-xiangsuhuarumen",{"title":267,"_path":268,"children":269},"Dotnet","/dotnet",[270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390],{"title":271,"_path":272},"Linux部署dotnetcore记录","/dotnet/2019-06-05-linux-dotnet-daemon",{"title":274,"_path":275},"时间轮的引入","/dotnet/2019-10-29-time-wheel",{"title":277,"_path":278},"帧同步的相关问题","/dotnet/2019-11-01-lock-step",{"title":280,"_path":281},"状态同步的相关问题","/dotnet/2019-11-01-state-sync-npc",{"title":283,"_path":284},"状态同步--技能系统的同步机制分析","/dotnet/2019-11-02-state-sync-skill",{"title":286,"_path":287},"Creating a Quartz.NET hosted service with ASP.NET Core","/dotnet/2019-11-05-quartz",{"title":289,"_path":290},"DatetimeOffset和Datetime的区别","/dotnet/2019-12-01-datetimeoffset",{"title":292,"_path":293},"大小端字节序(Big Endian和Little Endian)","/dotnet/2020-01-05-big-little-endian",{"title":295,"_path":296},"dll文件的加载","/dotnet/2020-01-06-dll-load",{"title":298,"_path":299},"延迟补偿在C/S架构游戏协议设计和优化中的应用","/dotnet/2020-02-02-latency_compensating_methods_in_clientserver_in-game_protocol_design_and_optimization",{"title":301,"_path":302},"延迟补偿和对时的相关总结","/dotnet/2020-02-02-latency_compensating-rtt",{"title":304,"_path":305},"快节奏多人游戏同步(1)-ClientServer架构","/dotnet/2020-02-02-net-sync-client-server-game-architecture",{"title":307,"_path":308},"快节奏多人游戏同步(2)-客户端预测与服务器校对","/dotnet/2020-02-02-net-sync-client-side-prediction-and-server-reconciliation",{"title":310,"_path":311},"快节奏多人游戏同步(3)-Entity插值","/dotnet/2020-02-02-net-sync-entity-interpolation",{"title":313,"_path":314},"快节奏多人游戏同步(4)-延时补偿","/dotnet/2020-02-02-net-sync-lag-compensation",{"title":316,"_path":317},"守望先锋等FPS游戏的网络同步","/dotnet/2020-02-02-overwatch-a-guide-to-understanding-netcode",{"title":319,"_path":320},"起源引擎网络同步模型","/dotnet/2020-02-02-source_multiplayer_networking",{"title":322,"_path":323},"orleans的部署模式","/dotnet/2020-02-03-orleans-deployment",{"title":325,"_path":326},"一致性hash算法","/dotnet/2020-02-06-consistent_hash",{"title":328,"_path":329},"地图的aoi","/dotnet/2020-02-07-aoi",{"title":331,"_path":332},"游戏的匹配机制ELO","/dotnet/2020-02-09-room-elo",{"title":334,"_path":335},"C# 深浅复制","/dotnet/2020-02-10-icloneable",{"title":337,"_path":338},"C#引用类型对象在循环引用时会不会内存泄漏","/dotnet/2020-02-11-gc",{"title":340,"_path":341},"扒一扒.net、.net framework、mono和Unity","/dotnet/2020-02-12-netcore-mono-netframework",{"title":343,"_path":344},"c#编译和运行启动原理","/dotnet/2020-02-13-csharp-run",{"title":346,"_path":347},"abp新建项目指南","/dotnet/2020-05-29-abp-start",{"title":349,"_path":350},"2020 06 11 IdentityServer Use","/dotnet/2020-06-11-identityserver-use",{"title":352,"_path":353},"关于abp的用户的一些问题","/dotnet/2020-07-05-abp-database-user",{"title":355,"_path":356},"abp的dOC模块使用","/dotnet/2020-07-10-abp-doc",{"title":358,"_path":359},"abp默认语言规则","/dotnet/2020-07-15-abp-default-language",{"title":361,"_path":362},"Orleans 最佳实践","/dotnet/2020-08-09-orleans-best-practices",{"title":364,"_path":365},"c#特性参数","/dotnet/2020-08-10-param-attribute",{"title":367,"_path":368},".NET Core 获取 HttpContext.Current 以及 AsyncLocal 与 ThreadLocal","/dotnet/2020-08-11-httpcontextaccessor-asynclocal",{"title":370,"_path":371},"Kestrel源码分析","/dotnet/2020-08-15-kestrel-source-code",{"title":373,"_path":374},"ConcurrentDictionary并发字典","/dotnet/2020-08-16-concurrentdictionary",{"title":376,"_path":377},"IOptions、IOptionsMonitor以及IOptionsSnapshot","/dotnet/2020-08-17-netcore-options",{"title":379,"_path":380},".NET Core/Framework 创建委托以大幅度提高反射调用的性能","/dotnet/2020-11-13-reflection-method",{"title":382,"_path":383},"C＃枚举中使用Flags特性","/dotnet/2020-11-24-flags",{"title":385,"_path":386},"谷歌浏览器下netcore登录失败问题","/dotnet/2020-12-11-chrome-login-fail",{"title":388,"_path":389},"Converting between Structs and Byte Arrays","/dotnet/2021-05-01-converting-between-structs-and-byte-arrays",{"title":391,"_path":392},"c#在重写object中的Equal方法时需要对GetHashCode进行重写（Dictionary引用）","/dotnet/2022-08-15-equal-hashcode",{"title":394,"_path":395,"children":396},"Game","/game",[397,400,403,406,409,412,415,418,421,424,427,430,433,436,439],{"title":398,"_path":399},"使用柏林噪声算法生成地图","/game/2021-01-20-perlin-map",{"title":401,"_path":402},"波函数坍塌算法生成地图","/game/2021-01-21-wave-collapse-function",{"title":404,"_path":405},"文明6地图生成算法","/game/2021-01-22-civ-map",{"title":407,"_path":408},"roguelike地牢生成算法","/game/2021-01-23-roguelike-map",{"title":410,"_path":411},"Spelunky关卡生成","/game/2021-01-23-spelunky-map",{"title":413,"_path":414},"Edgar源代码解读","/game/2021-06-12-edgar-code-read",{"title":416,"_path":417},"rpgbuild的一些备注","/game/2021-06-15-rpgbuilder",{"title":419,"_path":420},"游戏人物设计","/game/2021-08-05-game-task-design",{"title":422,"_path":423},"unity gameplay ability源代码解析","/game/2021-12-14-untiy-gameplay-ablility-sourcecode",{"title":425,"_path":426},"苟与剑游戏技能分析","/game/2021-12-21-gyj-skill",{"title":428,"_path":429},"quest machine 使用相关","/game/2022-02-19-quest-machine",{"title":431,"_path":432},"苟与剑中的单位生成方式","/game/2022-03-16-gyj-map",{"title":434,"_path":435},"ecs中实体创建方法","/game/2022-08-03-ecs",{"title":437,"_path":438},"暗黑2怪物等级和掉落规则","/game/2022-08-05-dia2",{"title":440,"_path":441},"行为树源代码解析","/game/2022-08-21-behavior-tree-source-code",{"title":443,"_path":444,"children":445},"Gyj","/gyj",[446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491],{"title":447,"_path":448},"美术要求","/gyj/2022-06-11-meishuyaoqiu",{"title":450,"_path":451},"游戏基础知识","/gyj/2022-06-12-jichuzhishi",{"title":453,"_path":454},"2022 08 22 地图房间的种类","/gyj/2022-08-22-detufangjiandezhonglei",{"title":456,"_path":457},"2022 08 22 奇遇事件","/gyj/2022-08-22-qiyushijian",{"title":459,"_path":460},"游戏流程","/gyj/2022-08-22-youxiliucheng",{"title":462,"_path":463},"物品产出表","/gyj/2022-08-22-wupinchanchubiao",{"title":465,"_path":466},"玩法","/gyj/2022-08-22-wanfa",{"title":468,"_path":469},"初入江湖","/gyj/2022-08-22-diyizhang",{"title":471,"_path":472},"2022 08 22 职业与工作","/gyj/2022-08-22-zhiyeyugongzuo",{"title":474,"_path":475},"天下霸图研究","/gyj/2022-11-01-tianxiabatu",{"title":477,"_path":478},"流放之路关于伤害公式和技能的分析","/gyj/2022-11-17-liufangzhilu",{"title":480,"_path":481},"门派内容相关","/gyj/2022-11-17-sect",{"title":483,"_path":484},"2022 12 01 养殖","/gyj/2022-12-01-yangzhi",{"title":486,"_path":487},"种植","/gyj/2022-12-01-zhongzhi",{"title":489,"_path":490},"人物属性设计","/gyj/2022-12-15-renwushuxing",{"title":492,"_path":493},"跑商","/gyj/2023-11-01-paoshang",{"title":495,"_path":496,"children":497},"Js","/js",[498,501,504],{"title":499,"_path":500},"如何在TypeScript中使用JS类库","/js/2022-02-12-typescript-use-js",{"title":502,"_path":503},"nuxt3项目初始化失败","/js/2023-05-16-nuxt3-init-fail",{"title":505,"_path":506},"Flex 布局使用","/js/2024-03-17-flex-use",{"title":508,"_path":509,"children":510},"Tool","/tool",[511,514,517,520,523,526,529,532,535,538,541,544,547,550,553,556,559,562,565,568,571,574,577,580,583,586,589,592,595,598,601,604,607,610,613,616],{"title":512,"_path":513},"windows发送到手机Ftp","/tool/2019-06-20-windows-send-to-ftp",{"title":515,"_path":516},"windows特殊目录修复","/tool/2019-06-24-shell-folders-are-displayed-with-the-standard-folder-icon-in-windows",{"title":518,"_path":519},"scourcetree  总是需要输入密码","/tool/2019-08-07-sourcetree-git-password",{"title":521,"_path":522},"powershell 常用命令","/tool/2019-08-10-powershell-command",{"title":524,"_path":525},"scoop的使用","/tool/2019-08-20-scoop-use",{"title":527,"_path":528},"使用配置文件来管理NuGet包版本F","/tool/2019-09-02-nuget-manager",{"title":530,"_path":531},"Redis的两种持久化RDB和AOF","/tool/2019-09-02-redis-aof-rdb",{"title":533,"_path":534},"使用 SSH 登陆谷歌云 root 或者 普通账户的方法","/tool/2020-01-02-google-clound-local-login",{"title":536,"_path":537},"CentOS 下安装Shadowsocks 搭建ss","/tool/2020-01-12-centosn-ss-install",{"title":539,"_path":540},"mac下brew 使用","/tool/2020-01-13-brew",{"title":542,"_path":543},"术语中英文对照","/tool/2020-02-05-game_en_zh",{"title":545,"_path":546},"Excel中以文本形式存储的数字","/tool/2020-02-06-excel-text-number",{"title":548,"_path":549},"protobuf序列化的一些问题","/tool/2020-03-25-protobuf-empty-collections",{"title":551,"_path":552},"为博客将 RSS 转为邮件订阅","/tool/2020-06-26-blog-mail-sub",{"title":554,"_path":555},"github下载代码的速度太慢","/tool/2020-06-27-linux-github-slow",{"title":557,"_path":558},"win10开始菜单添加软件以及备份和恢复","/tool/2020-07-02-win10-start-menu",{"title":560,"_path":561},"gitbook的使用","/tool/2020-07-06-gitbook-use",{"title":563,"_path":564},"github actions 简单使用","/tool/2020-07-11-github-actions",{"title":566,"_path":567},"使用hexo建立博客并部署到github","/tool/2020-07-12-hexo-github",{"title":569,"_path":570},"终端下设置代理","/tool/2020-07-13-terminal-proxy",{"title":572,"_path":573},"发现nuget包太占用C盘，怎么办？","/tool/2020-08-30-nuget-is-big",{"title":575,"_path":576},"unity商店下载资源迁移","/tool/2020-11-15-unity-is-big",{"title":578,"_path":579},"关于coding的pages介绍","/tool/2020-11-16-coding-pages",{"title":581,"_path":582},"一些常用的dns服务器","/tool/2021-05-06-dns",{"title":584,"_path":585},"UE4素材破解","/tool/2021-11-06-ue4-view",{"title":587,"_path":588},"安装cockpit通过nginx代理访问","/tool/2021-11-07-cockpit-linux",{"title":590,"_path":591},"Windows LTSC、LTSB、Server 安装 Windows Store 应用商店 ","/tool/2021-11-15-install-windowsstore",{"title":593,"_path":594},"我是如何把 VS Code 插件启动速度从 8 秒减少到 1 秒 ","/tool/2021-12-02-vscode-plugins-big",{"title":596,"_path":597},"云效部署hexo到自己的主机 ","/tool/2021-12-11-yunxiao-liushuixian-hexo",{"title":599,"_path":600},"github 怎么合并原始分支？ ","/tool/2021-12-12-github-sync",{"title":602,"_path":603},"code server安装制作online ide","/tool/2022-01-30-code-server",{"title":605,"_path":606},"rider的使用","/tool/2022-08-02-rider-use",{"title":608,"_path":609},"2022 08 09 Amd Over","/tool/2022-08-09-amd-over",{"title":611,"_path":612},"rider破解","/tool/2022-11-19-rider-po-jie",{"title":614,"_path":615},"stable diffusion install","/tool/2023-01-20-stable-diffusion-install",{"title":617,"_path":618},"CGI, FastCGI, WSGI, uWSGI, uwsgi一文搞懂","/tool/2023-02-15-cgi-fastcgi-wsgi-uswgi",{"title":620,"_path":621,"children":622},"Unity","/unity",[623,626,629,632,635,638,641,644,647,650,653,656,659,662,665,668,671,674,677,680,683,686,689,692,695,698,701,704,707,710,713,716,717,720,723,726,729,732,735,738,741,744,747,750,753,756,759,762,765,768,771,774,777,780,783,786,789,792,795,798,801,804,807,810,813,816,819,822,825,828,831,834],{"title":624,"_path":625},"Unity 导出 Android 64-bit 版本","/unity/2019-06-20-unity-android-x64",{"title":627,"_path":628},"Unity的il2cpp","/unity/2019-06-20-unity-il2cpp-debugger",{"title":630,"_path":631},"googlePlay 发布问题","/unity/2019-06-23-googlplay-pulish",{"title":633,"_path":634},"关于unity的适配问题","/unity/2019-08-09-unity2d-shipei",{"title":636,"_path":637},"一次精通 RectTransform","/unity/2019-08-10-ugui-recttransform",{"title":639,"_path":640},"一次精通 eventmanager","/unity/2019-08-11-ugui-eventmanager",{"title":642,"_path":643},"ugui的eventsystem源码解读","/unity/2019-08-12-ugui-eventsystem-sourcecode",{"title":645,"_path":646},"Unity Raycasters 剖析","/unity/2019-08-12-ugui-raycasters",{"title":648,"_path":649},"关于addressable那些事","/unity/2019-09-01-addressable",{"title":651,"_path":652},"关于spriteAtlas打包那些事","/unity/2019-09-01-spriteatlas",{"title":654,"_path":655},"ilruntime的研究","/unity/2019-09-02-ilruntime",{"title":657,"_path":658},"unity的宏以及添加net框架中未引用的dll","/unity/2019-09-02-unity-reference-dll",{"title":660,"_path":661},"xlua注入源码解读","/unity/2019-09-03-xlua-inject",{"title":663,"_path":664},"如何快速的注入汇编","/unity/2019-09-04-mono.cecil-inject",{"title":666,"_path":667},"2D游戏视差背景的实现","/unity/2019-09-13-parallax-2d",{"title":669,"_path":670},"unity使用代理","/unity/2019-11-15-unity-proxy",{"title":672,"_path":673},"一篇文章搞定Entitas","/unity/2020-01-01-unity-entitas",{"title":675,"_path":676},"unity攻击范围检测的方式区别","/unity/2020-01-11-unity-attack-range-detection-type",{"title":678,"_path":679},"常见的2D碰撞检测","/unity/2020-01-12-collision-detection",{"title":681,"_path":682},"unity攻击范围检测","/unity/2020-01-13-unity-attack-detection",{"title":684,"_path":685},"技能系统","/unity/2020-02-15-skill-system",{"title":687,"_path":688},"游戏buff系统设计","/unity/2020-02-16-buff-system",{"title":690,"_path":691},"角色状态设计","/unity/2020-02-17-character-states",{"title":693,"_path":694},"理解托管堆","/unity/2020-02-18-bestpracticeunderstandingperformanceinunity",{"title":696,"_path":697},"理解自动内存管理","/unity/2020-02-19-understandingautomaticmemorymanagement",{"title":699,"_path":700},"unity 移动平台打包丢失shader的问题","/unity/2020-02-20-shader-lost",{"title":702,"_path":703},"Unity的调试相关","/unity/2020-03-01-unity-debug",{"title":705,"_path":706},"unity启动运行脚本流程","/unity/2020-03-04-unity-startup",{"title":708,"_path":709},"unity的坐标体系","/unity/2020-07-01-unity-coordinate",{"title":711,"_path":712},"2020 07 03 Unity Mesh","/unity/2020-07-03-unity-mesh",{"title":714,"_path":715},"unity Render Pipeline","/unity/2020-07-04-unity-render-pipeline",{"title":8,"_path":4},{"title":718,"_path":719},"unity 项目dll检查","/unity/2020-08-30-unity-dll-check",{"title":721,"_path":722},"UNITY的垂直同步和帧率","/unity/2020-09-05-unity-vsynccount",{"title":724,"_path":725},"UNITY性能优化流程","/unity/2020-09-10-optimizing-for-performance",{"title":727,"_path":728},"堆栈内存Stack和堆内存Heap","/unity/2020-09-11-stack-heap",{"title":730,"_path":731},"unity的addressables","/unity/2020-09-12-addressables",{"title":733,"_path":734},"游戏中的向量使用","/unity/2020-09-13-vector",{"title":736,"_path":737},"UNITY ECS 详解","/unity/2020-10-15-unity-ecs",{"title":739,"_path":740},"UNITY JOB SYSTEM详解","/unity/2020-10-16-unity-job",{"title":742,"_path":743},"运行时打包图集","/unity/2020-10-17-runtime-spriteatlas",{"title":745,"_path":746},"unity ecs component","/unity/2020-10-18-unity-ecs-component",{"title":748,"_path":749},"基于 Game Object Conversion 和 SubScene 的 DOTS 开发工作流","/unity/2020-10-19-game-object-conversion-and-subscene",{"title":751,"_path":752},"源代码分析world的创建","/unity/2020-10-20-ecs-world",{"title":754,"_path":755},"unity使用platforms构建","/unity/2020-10-21-platform",{"title":757,"_path":758},"Unity rendering order渲染顺序","/unity/2020-10-22-unity-render-order",{"title":760,"_path":761},"关于静态批处理/动态批处理/GPU Instancing /SRP Batcher的详细剖析","/unity/2020-10-23-unity-optimizing-gpu",{"title":763,"_path":764},"unity的ScreenToWorldPoint","/unity/2020-10-24-screentoworldpoint",{"title":766,"_path":767},"URP性能测试","/unity/2020-10-24-unity-urp-performance",{"title":769,"_path":770},"如何使用Unity ECS打造Reactive System？","/unity/2020-11-11-how-to-build-reactive-systems-with-unity-ecs",{"title":772,"_path":773},"Unity中Sprite和UI Image的区别","/unity/2020-11-12-sprite-image-diff",{"title":775,"_path":776},"简单保存工具","/unity/2020-11-13-simple-save",{"title":778,"_path":779},"2020 11 14 Netcode","/unity/2020-11-14-netcode",{"title":781,"_path":782},"ecs中的parent","/unity/2020-11-15-ecs-parent",{"title":784,"_path":785},"ability","/unity/2020-11-16-dotssample",{"title":787,"_path":788},"unity world time system","/unity/2020-11-17-unity-ecs-worldtime",{"title":790,"_path":791},"netcode源代码解读","/unity/2020-11-18-netcode-sourcecode",{"title":793,"_path":794},"pitch yaw roll是什么","/unity/2020-11-29-pitch-yaw-roll",{"title":796,"_path":797},"A Native Collection has not been disposed, resulting in a memory leak. Allocated from:","/unity/2020-12-20-collection-has-not-been-disposed",{"title":799,"_path":800},"解决Unity鼠标坐标点转成世界坐标系坐标点","/unity/2021-01-24-screentoworld",{"title":802,"_path":803},"2021 01 25 Tilemap","/unity/2021-01-25-tilemap",{"title":805,"_path":806},"Unity RenderTexture的应用","/unity/2021-04-11-render-texture",{"title":808,"_path":809},"commandbuff的一些问题","/unity/2021-05-20-ecs-commandbuff-question",{"title":811,"_path":812},"How to Make One Way Platform in unity","/unity/2021-06-13-how-to-make-one-way-platform",{"title":814,"_path":815},"UNITY的渲染顺序","/unity/2021-06-14-unity-render-order",{"title":817,"_path":818},"防止变量引用丢失 FormerlySerializedAs","/unity/2021-07-20-formerlyserializedas",{"title":820,"_path":821},"AI-PLANNER使用","/unity/2021-08-01-ai-planner",{"title":823,"_path":824},"Increased script assembly reload time","/unity/2021-10-01-increased-script-assembly-reload-time",{"title":826,"_path":827},"关于unity的热重载的研究","/unity/2022-01-02-unity-hot-reload",{"title":829,"_path":830},"Editor Iteration Profiler的使用","/unity/2022-01-28-unity-editor-iteration-profiler",{"title":832,"_path":833},"CircleCast和Overlapple的区别是什么","/unity/2022-04-02-circlecast-overlapple-diff",{"title":835,"_path":836},"unity ecs的备忘录","/unity/2022-09-10-ecs-beiwang",1710779039956]