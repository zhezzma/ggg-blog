[{"data":1,"prerenderedAt":796},["Reactive",2],{"content-query-fA2wChzBHd":3,"content-navigation-8C37fagqQL":214},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":208,"_id":209,"_source":210,"_file":211,"_extension":212,"date":213},"/unity/2021-04-11-render-texture","unity",false,"","Unity RenderTexture的应用","1. UGUI上显示模型UGUI上显示模型.png创建拍摄用的摄像机创建RenderTexture并绑定到摄像机camera.targetTexture上RenderTexture绑定到rawImage.texture上（rawImage见上图）创建显示的模型，相机可见注意Destroy销毁 创建出来的RenderTexture 和相机注意模型上的粒子特效由于Alpha透明通道，显示会有一点问题，可以通过Shader Blend混合处理，挂载在rawImage上。public void CreateCamera(Vector3 pos, Vector3 rot, int width, int ",{"type":11,"children":12,"toc":205},"root",[13,22,31,36,71,84,90,99,120,126,133,138,145,150,157,162,169,174,181,186,193,198],{"type":14,"tag":15,"props":16,"children":18},"element","h4",{"id":17},"_1-ugui上显示模型",[19],{"type":20,"value":21},"text","1. UGUI上显示模型",{"type":14,"tag":23,"props":24,"children":25},"p",{},[26],{"type":14,"tag":27,"props":28,"children":30},"img",{"alt":27,"src":29},"/images/2021-04-11-render-texture/4276633-05b67353425f7248.png",[],{"type":14,"tag":23,"props":32,"children":33},{},[34],{"type":20,"value":35},"UGUI上显示模型.png",{"type":14,"tag":37,"props":38,"children":39},"ol",{},[40,46,51,56,61,66],{"type":14,"tag":41,"props":42,"children":43},"li",{},[44],{"type":20,"value":45},"创建拍摄用的摄像机",{"type":14,"tag":41,"props":47,"children":48},{},[49],{"type":20,"value":50},"创建RenderTexture并绑定到摄像机camera.targetTexture上",{"type":14,"tag":41,"props":52,"children":53},{},[54],{"type":20,"value":55},"RenderTexture绑定到rawImage.texture上（rawImage见上图）",{"type":14,"tag":41,"props":57,"children":58},{},[59],{"type":20,"value":60},"创建显示的模型，相机可见",{"type":14,"tag":41,"props":62,"children":63},{},[64],{"type":20,"value":65},"注意Destroy销毁 创建出来的RenderTexture 和相机",{"type":14,"tag":41,"props":67,"children":68},{},[69],{"type":20,"value":70},"注意模型上的粒子特效由于Alpha透明通道，显示会有一点问题，可以通过Shader Blend混合处理，挂载在rawImage上。",{"type":14,"tag":72,"props":73,"children":78},"pre",{"className":74,"code":76,"language":77,"meta":7},[75],"language-csharp","public void CreateCamera(Vector3 pos, Vector3 rot, int width, int height, string layerName, float size)\n{\n    // 创建拍摄用的摄像机\n    GameObject go = new GameObject(\"ModelCamera\");\n    _camera = go.AddComponent\u003CCamera>();\n    _camera.clearFlags = CameraClearFlags.SolidColor;\n    _camera.transform.position = pos;\n    _camera.transform.rotation = Quaternion.Euler(rot);\n    _camera.cullingMask = LayerMask.GetMask(layerName);\n    _camera.orthographic = true;\n    _camera.orthographicSize = size;\n    _camera.backgroundColor = new Color(0,0,0,0);\n\n    // 创建RenderTexture并绑定到摄像机上\n    _renderTexture = new RenderTexture(width, height, 8);\n    _camera.targetTexture = _renderTexture;\n\n    if (_rawImage != null)\n    {\n        _rawImage.texture = _renderTexture;\n    }\n}\n","csharp",[79],{"type":14,"tag":80,"props":81,"children":82},"code",{"__ignoreMap":7},[83],{"type":20,"value":76},{"type":14,"tag":15,"props":85,"children":87},{"id":86},"_2-camera相机拍照分享保存为jpg",[88],{"type":20,"value":89},"2. Camera相机拍照分享，保存为jpg",{"type":14,"tag":72,"props":91,"children":94},{"className":92,"code":93,"language":77,"meta":7},[75],"private IEnumerator CameraPhoto(Camera cam, Rect rect, string name) {\n    if (rt == null) {\n        rt = RenderTexture.GetTemporary(renderTextureDesc);\n    }\n    cam.targetTexture = rt;\n    cam.Render();\n\n    RenderTexture currentActiveRT = RenderTexture.active;\n    RenderTexture.active = rt;\n    Texture2D screenShot = new Texture2D((int)rect.width, (int)rect.height, TextureFormat.RGB24, false);\n    screenShot.ReadPixels(rect, 0, 0);\n    screenShot.Apply();\n    yield return new WaitForEndOfFrame();\n\n    cam.targetTexture = null;\n    RenderTexture.active = currentActiveRT;\n\n    byte[] bytes = screenShot.EncodeToJPG();\n    string file = Application.dataPath + \"/Texture/\" + name;\n    System.IO.File.WriteAllBytes(file, bytes);\n}\n",[95],{"type":14,"tag":80,"props":96,"children":97},{"__ignoreMap":7},[98],{"type":20,"value":93},{"type":14,"tag":37,"props":100,"children":101},{},[102,107,112,117],{"type":14,"tag":41,"props":103,"children":104},{},[105],{"type":20,"value":106},"Rendertexture的分配和销毁上有一个地方需要注意：\n如果频繁的要new一个rt出来，那么不要直接new，而是使用RenderTexture提供的GetTemporary和ReleaseTemporary，它将在内部维护一个池，反复重用一些大小格式一样的rt资源，因为让GPU为你分配一个新的texture其实是要耗时间的。",{"type":14,"tag":41,"props":108,"children":109},{},[110],{"type":20,"value":111},"EncodeToJPG 生成的图片体积更小",{"type":14,"tag":41,"props":113,"children":114},{},[115],{"type":20,"value":116},"有的时候我们想人为的控制每一次渲染，你可以将这个摄像机disable掉，然后手动的调用一次render。",{"type":14,"tag":41,"props":118,"children":119},{},[],{"type":14,"tag":15,"props":121,"children":123},{"id":122},"_3-制作小地图",[124],{"type":20,"value":125},"3. 制作小地图",{"type":14,"tag":23,"props":127,"children":128},{},[129],{"type":14,"tag":27,"props":130,"children":132},{"alt":27,"src":131},"/images/2021-04-11-render-texture/17266280-153a6a121210c7f7.png",[],{"type":14,"tag":23,"props":134,"children":135},{},[136],{"type":20,"value":137},"这里需要新建一个Layer。依次点击菜单项Edit -> Project Settings -> Tags and Layers新建Layer命名为Minimap。",{"type":14,"tag":23,"props":139,"children":140},{},[141],{"type":14,"tag":27,"props":142,"children":144},{"alt":27,"src":143},"/images/2021-04-11-render-texture/17266280-f96f6a1a4c01bae2.png",[],{"type":14,"tag":23,"props":146,"children":147},{},[148],{"type":20,"value":149},"然后新建三个球体。一个设为蓝色代表Unity Chan。将该球体设为Unity Chan的子对象，并将其Layer设为Minimap。",{"type":14,"tag":23,"props":151,"children":152},{},[153],{"type":14,"tag":27,"props":154,"children":156},{"alt":27,"src":155},"/images/2021-04-11-render-texture/17266280-dfdc8f16823fbf32.png",[],{"type":14,"tag":23,"props":158,"children":159},{},[160],{"type":20,"value":161},"对两个机器人进行同样的操作，将球体改为红色。",{"type":14,"tag":23,"props":163,"children":164},{},[165],{"type":14,"tag":27,"props":166,"children":168},{"alt":27,"src":167},"/images/2021-04-11-render-texture/17266280-4b34ec3b3279e6aa.png",[],{"type":14,"tag":23,"props":170,"children":171},{},[172],{"type":20,"value":173},"现在最关键的一步来了！选中Main Camera并确保其Culling Mask中不包括Minimap这一层。",{"type":14,"tag":23,"props":175,"children":176},{},[177],{"type":14,"tag":27,"props":178,"children":180},{"alt":27,"src":179},"/images/2021-04-11-render-texture/17266280-1eb8533ebe757f7d.png",[],{"type":14,"tag":23,"props":182,"children":183},{},[184],{"type":20,"value":185},"然后选中Minimap Camera让其Culling Mask只包括Minimap这一层。",{"type":14,"tag":23,"props":187,"children":188},{},[189],{"type":14,"tag":27,"props":190,"children":192},{"alt":27,"src":191},"/images/2021-04-11-render-texture/17266280-e16613658b088db8.png",[],{"type":14,"tag":23,"props":194,"children":195},{},[196],{"type":20,"value":197},"现在这个小地图看起来就比较完善了！",{"type":14,"tag":23,"props":199,"children":200},{},[201],{"type":14,"tag":27,"props":202,"children":204},{"alt":27,"src":203},"/images/2021-04-11-render-texture/17266280-694ef4f538aae2e1.png",[],{"title":7,"searchDepth":206,"depth":206,"links":207},2,[],"markdown","content:unity:2021-04-11-render-texture.md","content","unity/2021-04-11-render-texture.md","md","2021-04-11",[215,225,352,401,453,466,578],{"title":216,"_path":217,"children":218},"Art","/art",[219,222],{"title":220,"_path":221},"如何用蒙版将两个图过渡融合","/art/2020-09-03-ps-ronghe-pics",{"title":223,"_path":224},"像素画入门","/art/2022-02-02-xiangsuhuarumen",{"title":226,"_path":227,"children":228},"Dotnet","/dotnet",[229,232,235,238,241,244,247,250,253,256,259,262,265,268,271,274,277,280,283,286,289,292,295,298,301,304,307,310,313,316,319,322,325,328,331,334,337,340,343,346,349],{"title":230,"_path":231},"Linux部署dotnetcore记录","/dotnet/2019-06-05-linux-dotnet-daemon",{"title":233,"_path":234},"时间轮的引入","/dotnet/2019-10-29-time-wheel",{"title":236,"_path":237},"帧同步的相关问题","/dotnet/2019-11-01-lock-step",{"title":239,"_path":240},"状态同步的相关问题","/dotnet/2019-11-01-state-sync-npc",{"title":242,"_path":243},"状态同步--技能系统的同步机制分析","/dotnet/2019-11-02-state-sync-skill",{"title":245,"_path":246},"Creating a Quartz.NET hosted service with ASP.NET Core","/dotnet/2019-11-05-quartz",{"title":248,"_path":249},"DatetimeOffset和Datetime的区别","/dotnet/2019-12-01-datetimeoffset",{"title":251,"_path":252},"大小端字节序(Big Endian和Little Endian)","/dotnet/2020-01-05-big-little-endian",{"title":254,"_path":255},"dll文件的加载","/dotnet/2020-01-06-dll-load",{"title":257,"_path":258},"延迟补偿在C/S架构游戏协议设计和优化中的应用","/dotnet/2020-02-02-latency_compensating_methods_in_clientserver_in-game_protocol_design_and_optimization",{"title":260,"_path":261},"延迟补偿和对时的相关总结","/dotnet/2020-02-02-latency_compensating-rtt",{"title":263,"_path":264},"快节奏多人游戏同步(1)-ClientServer架构","/dotnet/2020-02-02-net-sync-client-server-game-architecture",{"title":266,"_path":267},"快节奏多人游戏同步(2)-客户端预测与服务器校对","/dotnet/2020-02-02-net-sync-client-side-prediction-and-server-reconciliation",{"title":269,"_path":270},"快节奏多人游戏同步(3)-Entity插值","/dotnet/2020-02-02-net-sync-entity-interpolation",{"title":272,"_path":273},"快节奏多人游戏同步(4)-延时补偿","/dotnet/2020-02-02-net-sync-lag-compensation",{"title":275,"_path":276},"守望先锋等FPS游戏的网络同步","/dotnet/2020-02-02-overwatch-a-guide-to-understanding-netcode",{"title":278,"_path":279},"起源引擎网络同步模型","/dotnet/2020-02-02-source_multiplayer_networking",{"title":281,"_path":282},"orleans的部署模式","/dotnet/2020-02-03-orleans-deployment",{"title":284,"_path":285},"一致性hash算法","/dotnet/2020-02-06-consistent_hash",{"title":287,"_path":288},"地图的aoi","/dotnet/2020-02-07-aoi",{"title":290,"_path":291},"游戏的匹配机制ELO","/dotnet/2020-02-09-room-elo",{"title":293,"_path":294},"C# 深浅复制","/dotnet/2020-02-10-icloneable",{"title":296,"_path":297},"C#引用类型对象在循环引用时会不会内存泄漏","/dotnet/2020-02-11-gc",{"title":299,"_path":300},"扒一扒.net、.net framework、mono和Unity","/dotnet/2020-02-12-netcore-mono-netframework",{"title":302,"_path":303},"c#编译和运行启动原理","/dotnet/2020-02-13-csharp-run",{"title":305,"_path":306},"abp新建项目指南","/dotnet/2020-05-29-abp-start",{"title":308,"_path":309},"2020 06 11 IdentityServer Use","/dotnet/2020-06-11-identityserver-use",{"title":311,"_path":312},"关于abp的用户的一些问题","/dotnet/2020-07-05-abp-database-user",{"title":314,"_path":315},"abp的dOC模块使用","/dotnet/2020-07-10-abp-doc",{"title":317,"_path":318},"abp默认语言规则","/dotnet/2020-07-15-abp-default-language",{"title":320,"_path":321},"Orleans 最佳实践","/dotnet/2020-08-09-orleans-best-practices",{"title":323,"_path":324},"c#特性参数","/dotnet/2020-08-10-param-attribute",{"title":326,"_path":327},".NET Core 获取 HttpContext.Current 以及 AsyncLocal 与 ThreadLocal","/dotnet/2020-08-11-httpcontextaccessor-asynclocal",{"title":329,"_path":330},"Kestrel源码分析","/dotnet/2020-08-15-kestrel-source-code",{"title":332,"_path":333},"ConcurrentDictionary并发字典","/dotnet/2020-08-16-concurrentdictionary",{"title":335,"_path":336},"IOptions、IOptionsMonitor以及IOptionsSnapshot","/dotnet/2020-08-17-netcore-options",{"title":338,"_path":339},".NET Core/Framework 创建委托以大幅度提高反射调用的性能","/dotnet/2020-11-13-reflection-method",{"title":341,"_path":342},"C＃枚举中使用Flags特性","/dotnet/2020-11-24-flags",{"title":344,"_path":345},"谷歌浏览器下netcore登录失败问题","/dotnet/2020-12-11-chrome-login-fail",{"title":347,"_path":348},"Converting between Structs and Byte Arrays","/dotnet/2021-05-01-converting-between-structs-and-byte-arrays",{"title":350,"_path":351},"c#在重写object中的Equal方法时需要对GetHashCode进行重写（Dictionary引用）","/dotnet/2022-08-15-equal-hashcode",{"title":353,"_path":354,"children":355},"Game","/game",[356,359,362,365,368,371,374,377,380,383,386,389,392,395,398],{"title":357,"_path":358},"使用柏林噪声算法生成地图","/game/2021-01-20-perlin-map",{"title":360,"_path":361},"波函数坍塌算法生成地图","/game/2021-01-21-wave-collapse-function",{"title":363,"_path":364},"文明6地图生成算法","/game/2021-01-22-civ-map",{"title":366,"_path":367},"roguelike地牢生成算法","/game/2021-01-23-roguelike-map",{"title":369,"_path":370},"Spelunky关卡生成","/game/2021-01-23-spelunky-map",{"title":372,"_path":373},"Edgar源代码解读","/game/2021-06-12-edgar-code-read",{"title":375,"_path":376},"rpgbuild的一些备注","/game/2021-06-15-rpgbuilder",{"title":378,"_path":379},"游戏人物设计","/game/2021-08-05-game-task-design",{"title":381,"_path":382},"unity gameplay ability源代码解析","/game/2021-12-14-untiy-gameplay-ablility-sourcecode",{"title":384,"_path":385},"苟与剑游戏技能分析","/game/2021-12-21-gyj-skill",{"title":387,"_path":388},"quest machine 使用相关","/game/2022-02-19-quest-machine",{"title":390,"_path":391},"苟与剑中的单位生成方式","/game/2022-03-16-gyj-map",{"title":393,"_path":394},"ecs中实体创建方法","/game/2022-08-03-ecs",{"title":396,"_path":397},"暗黑2怪物等级和掉落规则","/game/2022-08-05-dia2",{"title":399,"_path":400},"行为树源代码解析","/game/2022-08-21-behavior-tree-source-code",{"title":402,"_path":403,"children":404},"Gyj","/gyj",[405,408,411,414,417,420,423,426,429,432,435,438,441,444,447,450],{"title":406,"_path":407},"美术要求","/gyj/2022-06-11-meishuyaoqiu",{"title":409,"_path":410},"游戏基础知识","/gyj/2022-06-12-jichuzhishi",{"title":412,"_path":413},"2022 08 22 地图房间的种类","/gyj/2022-08-22-detufangjiandezhonglei",{"title":415,"_path":416},"2022 08 22 奇遇事件","/gyj/2022-08-22-qiyushijian",{"title":418,"_path":419},"游戏流程","/gyj/2022-08-22-youxiliucheng",{"title":421,"_path":422},"物品产出表","/gyj/2022-08-22-wupinchanchubiao",{"title":424,"_path":425},"玩法","/gyj/2022-08-22-wanfa",{"title":427,"_path":428},"初入江湖","/gyj/2022-08-22-diyizhang",{"title":430,"_path":431},"2022 08 22 职业与工作","/gyj/2022-08-22-zhiyeyugongzuo",{"title":433,"_path":434},"天下霸图研究","/gyj/2022-11-01-tianxiabatu",{"title":436,"_path":437},"流放之路关于伤害公式和技能的分析","/gyj/2022-11-17-liufangzhilu",{"title":439,"_path":440},"门派内容相关","/gyj/2022-11-17-sect",{"title":442,"_path":443},"2022 12 01 养殖","/gyj/2022-12-01-yangzhi",{"title":445,"_path":446},"种植","/gyj/2022-12-01-zhongzhi",{"title":448,"_path":449},"人物属性设计","/gyj/2022-12-15-renwushuxing",{"title":451,"_path":452},"跑商","/gyj/2023-11-01-paoshang",{"title":454,"_path":455,"children":456},"Js","/js",[457,460,463],{"title":458,"_path":459},"如何在TypeScript中使用JS类库","/js/2022-02-12-typescript-use-js",{"title":461,"_path":462},"nuxt3项目初始化失败","/js/2023-05-16-nuxt3-init-fail",{"title":464,"_path":465},"Flex 布局使用","/js/2024-03-17-flex-use",{"title":467,"_path":468,"children":469},"Tool","/tool",[470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518,521,524,527,530,533,536,539,542,545,548,551,554,557,560,563,566,569,572,575],{"title":471,"_path":472},"windows发送到手机Ftp","/tool/2019-06-20-windows-send-to-ftp",{"title":474,"_path":475},"windows特殊目录修复","/tool/2019-06-24-shell-folders-are-displayed-with-the-standard-folder-icon-in-windows",{"title":477,"_path":478},"scourcetree  总是需要输入密码","/tool/2019-08-07-sourcetree-git-password",{"title":480,"_path":481},"powershell 常用命令","/tool/2019-08-10-powershell-command",{"title":483,"_path":484},"scoop的使用","/tool/2019-08-20-scoop-use",{"title":486,"_path":487},"使用配置文件来管理NuGet包版本F","/tool/2019-09-02-nuget-manager",{"title":489,"_path":490},"Redis的两种持久化RDB和AOF","/tool/2019-09-02-redis-aof-rdb",{"title":492,"_path":493},"使用 SSH 登陆谷歌云 root 或者 普通账户的方法","/tool/2020-01-02-google-clound-local-login",{"title":495,"_path":496},"CentOS 下安装Shadowsocks 搭建ss","/tool/2020-01-12-centosn-ss-install",{"title":498,"_path":499},"mac下brew 使用","/tool/2020-01-13-brew",{"title":501,"_path":502},"术语中英文对照","/tool/2020-02-05-game_en_zh",{"title":504,"_path":505},"Excel中以文本形式存储的数字","/tool/2020-02-06-excel-text-number",{"title":507,"_path":508},"protobuf序列化的一些问题","/tool/2020-03-25-protobuf-empty-collections",{"title":510,"_path":511},"为博客将 RSS 转为邮件订阅","/tool/2020-06-26-blog-mail-sub",{"title":513,"_path":514},"github下载代码的速度太慢","/tool/2020-06-27-linux-github-slow",{"title":516,"_path":517},"win10开始菜单添加软件以及备份和恢复","/tool/2020-07-02-win10-start-menu",{"title":519,"_path":520},"gitbook的使用","/tool/2020-07-06-gitbook-use",{"title":522,"_path":523},"github actions 简单使用","/tool/2020-07-11-github-actions",{"title":525,"_path":526},"使用hexo建立博客并部署到github","/tool/2020-07-12-hexo-github",{"title":528,"_path":529},"终端下设置代理","/tool/2020-07-13-terminal-proxy",{"title":531,"_path":532},"发现nuget包太占用C盘，怎么办？","/tool/2020-08-30-nuget-is-big",{"title":534,"_path":535},"unity商店下载资源迁移","/tool/2020-11-15-unity-is-big",{"title":537,"_path":538},"关于coding的pages介绍","/tool/2020-11-16-coding-pages",{"title":540,"_path":541},"一些常用的dns服务器","/tool/2021-05-06-dns",{"title":543,"_path":544},"UE4素材破解","/tool/2021-11-06-ue4-view",{"title":546,"_path":547},"安装cockpit通过nginx代理访问","/tool/2021-11-07-cockpit-linux",{"title":549,"_path":550},"Windows LTSC、LTSB、Server 安装 Windows Store 应用商店 ","/tool/2021-11-15-install-windowsstore",{"title":552,"_path":553},"我是如何把 VS Code 插件启动速度从 8 秒减少到 1 秒 ","/tool/2021-12-02-vscode-plugins-big",{"title":555,"_path":556},"云效部署hexo到自己的主机 ","/tool/2021-12-11-yunxiao-liushuixian-hexo",{"title":558,"_path":559},"github 怎么合并原始分支？ ","/tool/2021-12-12-github-sync",{"title":561,"_path":562},"code server安装制作online ide","/tool/2022-01-30-code-server",{"title":564,"_path":565},"rider的使用","/tool/2022-08-02-rider-use",{"title":567,"_path":568},"2022 08 09 Amd Over","/tool/2022-08-09-amd-over",{"title":570,"_path":571},"rider破解","/tool/2022-11-19-rider-po-jie",{"title":573,"_path":574},"stable diffusion install","/tool/2023-01-20-stable-diffusion-install",{"title":576,"_path":577},"CGI, FastCGI, WSGI, uWSGI, uwsgi一文搞懂","/tool/2023-02-15-cgi-fastcgi-wsgi-uswgi",{"title":579,"_path":580,"children":581},"Unity","/unity",[582,585,588,591,594,597,600,603,606,609,612,615,618,621,624,627,630,633,636,639,642,645,648,651,654,657,660,663,666,669,672,675,678,681,684,687,690,693,696,699,702,705,708,711,714,717,720,723,726,729,732,735,738,741,744,747,750,753,756,759,762,765,766,769,772,775,778,781,784,787,790,793],{"title":583,"_path":584},"Unity 导出 Android 64-bit 版本","/unity/2019-06-20-unity-android-x64",{"title":586,"_path":587},"Unity的il2cpp","/unity/2019-06-20-unity-il2cpp-debugger",{"title":589,"_path":590},"googlePlay 发布问题","/unity/2019-06-23-googlplay-pulish",{"title":592,"_path":593},"关于unity的适配问题","/unity/2019-08-09-unity2d-shipei",{"title":595,"_path":596},"一次精通 RectTransform","/unity/2019-08-10-ugui-recttransform",{"title":598,"_path":599},"一次精通 eventmanager","/unity/2019-08-11-ugui-eventmanager",{"title":601,"_path":602},"ugui的eventsystem源码解读","/unity/2019-08-12-ugui-eventsystem-sourcecode",{"title":604,"_path":605},"Unity Raycasters 剖析","/unity/2019-08-12-ugui-raycasters",{"title":607,"_path":608},"关于addressable那些事","/unity/2019-09-01-addressable",{"title":610,"_path":611},"关于spriteAtlas打包那些事","/unity/2019-09-01-spriteatlas",{"title":613,"_path":614},"ilruntime的研究","/unity/2019-09-02-ilruntime",{"title":616,"_path":617},"unity的宏以及添加net框架中未引用的dll","/unity/2019-09-02-unity-reference-dll",{"title":619,"_path":620},"xlua注入源码解读","/unity/2019-09-03-xlua-inject",{"title":622,"_path":623},"如何快速的注入汇编","/unity/2019-09-04-mono.cecil-inject",{"title":625,"_path":626},"2D游戏视差背景的实现","/unity/2019-09-13-parallax-2d",{"title":628,"_path":629},"unity使用代理","/unity/2019-11-15-unity-proxy",{"title":631,"_path":632},"一篇文章搞定Entitas","/unity/2020-01-01-unity-entitas",{"title":634,"_path":635},"unity攻击范围检测的方式区别","/unity/2020-01-11-unity-attack-range-detection-type",{"title":637,"_path":638},"常见的2D碰撞检测","/unity/2020-01-12-collision-detection",{"title":640,"_path":641},"unity攻击范围检测","/unity/2020-01-13-unity-attack-detection",{"title":643,"_path":644},"技能系统","/unity/2020-02-15-skill-system",{"title":646,"_path":647},"游戏buff系统设计","/unity/2020-02-16-buff-system",{"title":649,"_path":650},"角色状态设计","/unity/2020-02-17-character-states",{"title":652,"_path":653},"理解托管堆","/unity/2020-02-18-bestpracticeunderstandingperformanceinunity",{"title":655,"_path":656},"理解自动内存管理","/unity/2020-02-19-understandingautomaticmemorymanagement",{"title":658,"_path":659},"unity 移动平台打包丢失shader的问题","/unity/2020-02-20-shader-lost",{"title":661,"_path":662},"Unity的调试相关","/unity/2020-03-01-unity-debug",{"title":664,"_path":665},"unity启动运行脚本流程","/unity/2020-03-04-unity-startup",{"title":667,"_path":668},"unity的坐标体系","/unity/2020-07-01-unity-coordinate",{"title":670,"_path":671},"2020 07 03 Unity Mesh","/unity/2020-07-03-unity-mesh",{"title":673,"_path":674},"unity Render Pipeline","/unity/2020-07-04-unity-render-pipeline",{"title":676,"_path":677},"Notch Solution","/unity/2020-08-29-notch-solution",{"title":679,"_path":680},"unity 项目dll检查","/unity/2020-08-30-unity-dll-check",{"title":682,"_path":683},"UNITY的垂直同步和帧率","/unity/2020-09-05-unity-vsynccount",{"title":685,"_path":686},"UNITY性能优化流程","/unity/2020-09-10-optimizing-for-performance",{"title":688,"_path":689},"堆栈内存Stack和堆内存Heap","/unity/2020-09-11-stack-heap",{"title":691,"_path":692},"unity的addressables","/unity/2020-09-12-addressables",{"title":694,"_path":695},"游戏中的向量使用","/unity/2020-09-13-vector",{"title":697,"_path":698},"UNITY ECS 详解","/unity/2020-10-15-unity-ecs",{"title":700,"_path":701},"UNITY JOB SYSTEM详解","/unity/2020-10-16-unity-job",{"title":703,"_path":704},"运行时打包图集","/unity/2020-10-17-runtime-spriteatlas",{"title":706,"_path":707},"unity ecs component","/unity/2020-10-18-unity-ecs-component",{"title":709,"_path":710},"基于 Game Object Conversion 和 SubScene 的 DOTS 开发工作流","/unity/2020-10-19-game-object-conversion-and-subscene",{"title":712,"_path":713},"源代码分析world的创建","/unity/2020-10-20-ecs-world",{"title":715,"_path":716},"unity使用platforms构建","/unity/2020-10-21-platform",{"title":718,"_path":719},"Unity rendering order渲染顺序","/unity/2020-10-22-unity-render-order",{"title":721,"_path":722},"关于静态批处理/动态批处理/GPU Instancing /SRP Batcher的详细剖析","/unity/2020-10-23-unity-optimizing-gpu",{"title":724,"_path":725},"unity的ScreenToWorldPoint","/unity/2020-10-24-screentoworldpoint",{"title":727,"_path":728},"URP性能测试","/unity/2020-10-24-unity-urp-performance",{"title":730,"_path":731},"如何使用Unity ECS打造Reactive System？","/unity/2020-11-11-how-to-build-reactive-systems-with-unity-ecs",{"title":733,"_path":734},"Unity中Sprite和UI Image的区别","/unity/2020-11-12-sprite-image-diff",{"title":736,"_path":737},"简单保存工具","/unity/2020-11-13-simple-save",{"title":739,"_path":740},"2020 11 14 Netcode","/unity/2020-11-14-netcode",{"title":742,"_path":743},"ecs中的parent","/unity/2020-11-15-ecs-parent",{"title":745,"_path":746},"ability","/unity/2020-11-16-dotssample",{"title":748,"_path":749},"unity world time system","/unity/2020-11-17-unity-ecs-worldtime",{"title":751,"_path":752},"netcode源代码解读","/unity/2020-11-18-netcode-sourcecode",{"title":754,"_path":755},"pitch yaw roll是什么","/unity/2020-11-29-pitch-yaw-roll",{"title":757,"_path":758},"A Native Collection has not been disposed, resulting in a memory leak. Allocated from:","/unity/2020-12-20-collection-has-not-been-disposed",{"title":760,"_path":761},"解决Unity鼠标坐标点转成世界坐标系坐标点","/unity/2021-01-24-screentoworld",{"title":763,"_path":764},"2021 01 25 Tilemap","/unity/2021-01-25-tilemap",{"title":8,"_path":4},{"title":767,"_path":768},"commandbuff的一些问题","/unity/2021-05-20-ecs-commandbuff-question",{"title":770,"_path":771},"How to Make One Way Platform in unity","/unity/2021-06-13-how-to-make-one-way-platform",{"title":773,"_path":774},"UNITY的渲染顺序","/unity/2021-06-14-unity-render-order",{"title":776,"_path":777},"防止变量引用丢失 FormerlySerializedAs","/unity/2021-07-20-formerlyserializedas",{"title":779,"_path":780},"AI-PLANNER使用","/unity/2021-08-01-ai-planner",{"title":782,"_path":783},"Increased script assembly reload time","/unity/2021-10-01-increased-script-assembly-reload-time",{"title":785,"_path":786},"关于unity的热重载的研究","/unity/2022-01-02-unity-hot-reload",{"title":788,"_path":789},"Editor Iteration Profiler的使用","/unity/2022-01-28-unity-editor-iteration-profiler",{"title":791,"_path":792},"CircleCast和Overlapple的区别是什么","/unity/2022-04-02-circlecast-overlapple-diff",{"title":794,"_path":795},"unity ecs的备忘录","/unity/2022-09-10-ecs-beiwang",1710779038938]