[{"data":1,"prerenderedAt":835},["Reactive",2],{"content-query-3kZRCoj4Dv":3,"content-navigation-8C37fagqQL":253},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":247,"_id":248,"_source":249,"_file":250,"_extension":251,"date":252},"/unity/2020-09-05-unity-vsynccount","unity",false,"","UNITY的垂直同步和帧率","在显示一帧画面时，显卡先从显示缓冲取数据刷新到显示器存储器上，然后，显示器从左上到右下，逐行显示到屏幕上。",{"type":11,"children":12,"toc":244},"root",[13,21,26,31,36,41,46,51,56,61,66,71,76,81,86,88,119,124,129,134,135,160,165,170,175,180,190,195,211,216],{"type":14,"tag":15,"props":16,"children":18},"element","h1",{"id":17},"垂直同步",[19],{"type":20,"value":17},"text",{"type":14,"tag":22,"props":23,"children":24},"p",{},[25],{"type":20,"value":9},{"type":14,"tag":22,"props":27,"children":28},{},[29],{"type":20,"value":30},"显示器每画完一行发出一个水平同步信号，画完所有行发出一个垂直同步信号。",{"type":14,"tag":22,"props":32,"children":33},{},[34],{"type":20,"value":35},"若显示器刷新率是75，那么发出一个垂直同步信号后会等待1/75秒，然后重新执行上述步骤。",{"type":14,"tag":22,"props":37,"children":38},{},[39],{"type":20,"value":40},"游戏中的开启垂直同步，意思是指显卡等待到一个垂直同步信号后才开始工作，向显示缓冲绘制数据。",{"type":14,"tag":22,"props":42,"children":43},{},[44],{"type":20,"value":45},"如果我们选择等待垂直同步信号（也就是我们平时所说的垂直同步打开），那么在游戏中或许强劲的显卡迅速的绘制完一屏的图像，但是没有垂直同步信号的到达，显卡无法绘制下一屏，只有等75单位的信号到达，才可以绘制。这样FPS自然要受到操作系统刷新率运行值的制约。",{"type":14,"tag":22,"props":47,"children":48},{},[49],{"type":20,"value":50},"而如果我们选择不等待垂直同步信号（也就是我们平时所说的关闭垂直同步），那么游戏中作完一屏画面，显卡和显示器无需等待垂直同步信号就可以开始下一屏图像的绘制，自然可以完全发挥显卡的实力。但是不要忘记，正是因为垂直同步的存在，才能使得游戏进程和显示器刷新率同步，使得画面更加平滑和稳定。取消了垂直同步信号，固然可以换来更快的速度，但是在图像的连续性上势必打折扣。这也正是很多朋友抱怨关闭垂直后发现画面不连续的理论原因。",{"type":14,"tag":22,"props":52,"children":53},{},[54],{"type":20,"value":55},"开启垂直同步时",{"type":14,"tag":22,"props":57,"children":58},{},[59],{"type":20,"value":60},"若游戏的实际显示帧速大于60，显卡就可以在显示器等待的1/60内完成绘制，显示一个无撕裂的画面。此时，游戏的帧速被限制为60。",{"type":14,"tag":22,"props":62,"children":63},{},[64],{"type":20,"value":65},"若游戏的实际显示帧速小于60，显卡无法在在显示器等待的1/60内完成绘制，假如游戏帧速50，那么显卡每2个显示器帧才向显示器刷新一次数据，此时，游戏帧速掉为30。",{"type":14,"tag":22,"props":67,"children":68},{},[69],{"type":20,"value":70},"关闭垂直同步时",{"type":14,"tag":22,"props":72,"children":73},{},[74],{"type":20,"value":75},"若游戏的实际显示帧速大于60，显卡刷新显示缓冲的速度比显示器快，出现跳帧以及撕裂。",{"type":14,"tag":22,"props":77,"children":78},{},[79],{"type":20,"value":80},"（1）画面撕裂",{"type":14,"tag":22,"props":82,"children":83},{},[84],{"type":20,"value":85},"假设游戏中有一面黑白相间的栅栏墙高速向左运动，显示器设定的刷新率是100Hz，游戏运行速度为200FPS，则显示器扫描第1帧图像至屏幕垂直方向中点时，显卡已经将第2帧图像送了过来，由于栅栏墙高速向左运动，第2帧图像已经左移了一段距离，最终显示的图像如图（图01）。",{"type":20,"value":87},"\n\n\n\n\n\n\n\n\n\n\n\n",{"type":14,"tag":89,"props":90,"children":91},"table",{},[92,106],{"type":14,"tag":93,"props":94,"children":95},"thead",{},[96],{"type":14,"tag":97,"props":98,"children":99},"tr",{},[100],{"type":14,"tag":101,"props":102,"children":103},"th",{},[104],{"type":20,"value":105},"![获得完美游戏效果解析显卡垂直同步设置(/images/2020-09-05-unity-vSyncCount/1520729748.JPG)",{"type":14,"tag":107,"props":108,"children":109},"tbody",{},[110],{"type":14,"tag":97,"props":111,"children":112},{},[113],{"type":14,"tag":114,"props":115,"children":116},"td",{},[117],{"type":20,"value":118},"图1",{"type":14,"tag":22,"props":120,"children":121},{},[122],{"type":20,"value":123},"CS 1.5、Quake等大多数PC游戏在关闭垂直同步后都会有这种现象产生。如果你的电脑上装有CS 1.5游戏，不妨自己证实一下：关闭垂直同步后进入游戏，按下键盘上的左箭头\"←\"让视角匀速转动，是不是看到了\"画面撕裂\"的现象？打开垂直同步后做相同的测试，画面是不是清爽了许多？",{"type":14,"tag":22,"props":125,"children":126},{},[127],{"type":20,"value":128},"（2）跳帧",{"type":14,"tag":22,"props":130,"children":131},{},[132],{"type":20,"value":133},"假如显示器设定的刷新率是80Hz，显卡以100FPS循环显示0-9数字，那么，在开始的0.1秒内，显卡显示了10个数字而显示器只刷新了8次，最终你看到的图像很可能是这样的：（表格如图02）\n可见，由于显示器刷新率跟不上游戏的FPS，只能舍弃一部分画面，这种现象表现在游戏里就是跳帧。鬼武者3等一些移植到PC上的游戏在关闭垂直同步时通常会出现这种问题。",{"type":20,"value":87},{"type":14,"tag":89,"props":136,"children":137},{},[138,149],{"type":14,"tag":93,"props":139,"children":140},{},[141],{"type":14,"tag":97,"props":142,"children":143},{},[144],{"type":14,"tag":101,"props":145,"children":146},{},[147],{"type":20,"value":148},"![获得完美游戏效果解析显卡垂直同步设置(/images/2020-09-05-unity-vSyncCount/1536901270.JPG)",{"type":14,"tag":107,"props":150,"children":151},{},[152],{"type":14,"tag":97,"props":153,"children":154},{},[155],{"type":14,"tag":114,"props":156,"children":157},{},[158],{"type":20,"value":159},"图2",{"type":14,"tag":22,"props":161,"children":162},{},[163],{"type":20,"value":164},"通过以上的了解，我们认识到，要想在游戏中获得更好的画质，垂直同步一定要开！正是由于垂直同步的存在，游戏才会有完整、稳速、不跳帧的画面。套用一句广告语来说：\"自从开了垂直同步后，画不破了，帧不跳了，头也不眩晕了。\"",{"type":14,"tag":15,"props":166,"children":168},{"id":167},"省电发热优化",[169],{"type":20,"value":167},{"type":14,"tag":22,"props":171,"children":172},{},[173],{"type":20,"value":174},"如果你的游戏跑到60帧,手机很热..这个时候首先想到的是降低帧率,",{"type":14,"tag":22,"props":176,"children":177},{},[178],{"type":20,"value":179},"安卓上:",{"type":14,"tag":181,"props":182,"children":184},"pre",{"code":183},"1. [QualitySettings](https://docs.unity3d.com/2020.2/Documentation/ScriptReference/QualitySettings.html).vSyncCount = 0 关闭垂直同步..手动设置帧率..    Application.targetFrameRate = 30;  注意这样可能出现跳帧\n2. [QualitySettings](https://docs.unity3d.com/2020.2/Documentation/ScriptReference/QualitySettings.html).vSyncCount = 1 这个时候 Application.targetFrameRate无效...每帧等待垂直同步\n3. [QualitySettings](https://docs.unity3d.com/2020.2/Documentation/ScriptReference/QualitySettings.html).vSyncCount = 2 这个时候 Application.targetFrameRate无效...每一秒内等待垂直同步??不好翻译..大概意思是如果平台的默认渲染速率是每秒60帧，而vSyncCount设置为2，则游戏将以每秒30帧为目标。\n",[185],{"type":14,"tag":186,"props":187,"children":188},"code",{"__ignoreMap":7},[189],{"type":20,"value":183},{"type":14,"tag":22,"props":191,"children":192},{},[193],{"type":20,"value":194},"iOS:",{"type":14,"tag":22,"props":196,"children":197},{},[198,200,209],{"type":20,"value":199},"iOS忽略",{"type":14,"tag":201,"props":202,"children":206},"a",{"href":203,"rel":204},"https://docs.unity3d.com/2020.2/Documentation/ScriptReference/QualitySettings.html",[205],"nofollow",[207],{"type":20,"value":208},"QualitySettings",{"type":20,"value":210},".vSyncCount,ios是根据vblank(垂直同步)显示帧(如果有的话)..他的意思就是如果ios的垂直同步是每秒60帧...在刷新垂直同步的时候,如果存在显卡的帧的时候则会显示帧..不存在.则不显示...所以 Application.targetFrameRate是起作用的",{"type":14,"tag":22,"props":212,"children":213},{},[214],{"type":20,"value":215},"以上仅参考文档推测...未进行验证....如有意外概不负责",{"type":14,"tag":217,"props":218,"children":219},"ul",{},[220,231,241],{"type":14,"tag":221,"props":222,"children":223},"li",{},[224],{"type":14,"tag":201,"props":225,"children":228},{"href":226,"rel":227},"https://docs.unity3d.com/2020.2/Documentation/ScriptReference/Application-targetFrameRate.html",[205],[229],{"type":20,"value":230},"Unity - Scripting API: Application.targetFrameRate (unity3d.com)",{"type":14,"tag":221,"props":232,"children":233},{},[234],{"type":14,"tag":201,"props":235,"children":238},{"href":236,"rel":237},"https://docs.unity3d.com/2020.2/Documentation/ScriptReference/QualitySettings-vSyncCount.html",[205],[239],{"type":20,"value":240},"Unity - Scripting API: QualitySettings.vSyncCount (unity3d.com)",{"type":14,"tag":221,"props":242,"children":243},{},[],{"title":7,"searchDepth":245,"depth":245,"links":246},2,[],"markdown","content:unity:2020-09-05-unity-vSyncCount.md","content","unity/2020-09-05-unity-vSyncCount.md","md","2020-09-05",[254,264,391,440,492,505,617],{"title":255,"_path":256,"children":257},"Art","/art",[258,261],{"title":259,"_path":260},"如何用蒙版将两个图过渡融合","/art/2020-09-03-ps-ronghe-pics",{"title":262,"_path":263},"像素画入门","/art/2022-02-02-xiangsuhuarumen",{"title":265,"_path":266,"children":267},"Dotnet","/dotnet",[268,271,274,277,280,283,286,289,292,295,298,301,304,307,310,313,316,319,322,325,328,331,334,337,340,343,346,349,352,355,358,361,364,367,370,373,376,379,382,385,388],{"title":269,"_path":270},"Linux部署dotnetcore记录","/dotnet/2019-06-05-linux-dotnet-daemon",{"title":272,"_path":273},"时间轮的引入","/dotnet/2019-10-29-time-wheel",{"title":275,"_path":276},"帧同步的相关问题","/dotnet/2019-11-01-lock-step",{"title":278,"_path":279},"状态同步的相关问题","/dotnet/2019-11-01-state-sync-npc",{"title":281,"_path":282},"状态同步--技能系统的同步机制分析","/dotnet/2019-11-02-state-sync-skill",{"title":284,"_path":285},"Creating a Quartz.NET hosted service with ASP.NET Core","/dotnet/2019-11-05-quartz",{"title":287,"_path":288},"DatetimeOffset和Datetime的区别","/dotnet/2019-12-01-datetimeoffset",{"title":290,"_path":291},"大小端字节序(Big Endian和Little Endian)","/dotnet/2020-01-05-big-little-endian",{"title":293,"_path":294},"dll文件的加载","/dotnet/2020-01-06-dll-load",{"title":296,"_path":297},"延迟补偿在C/S架构游戏协议设计和优化中的应用","/dotnet/2020-02-02-latency_compensating_methods_in_clientserver_in-game_protocol_design_and_optimization",{"title":299,"_path":300},"延迟补偿和对时的相关总结","/dotnet/2020-02-02-latency_compensating-rtt",{"title":302,"_path":303},"快节奏多人游戏同步(1)-ClientServer架构","/dotnet/2020-02-02-net-sync-client-server-game-architecture",{"title":305,"_path":306},"快节奏多人游戏同步(2)-客户端预测与服务器校对","/dotnet/2020-02-02-net-sync-client-side-prediction-and-server-reconciliation",{"title":308,"_path":309},"快节奏多人游戏同步(3)-Entity插值","/dotnet/2020-02-02-net-sync-entity-interpolation",{"title":311,"_path":312},"快节奏多人游戏同步(4)-延时补偿","/dotnet/2020-02-02-net-sync-lag-compensation",{"title":314,"_path":315},"守望先锋等FPS游戏的网络同步","/dotnet/2020-02-02-overwatch-a-guide-to-understanding-netcode",{"title":317,"_path":318},"起源引擎网络同步模型","/dotnet/2020-02-02-source_multiplayer_networking",{"title":320,"_path":321},"orleans的部署模式","/dotnet/2020-02-03-orleans-deployment",{"title":323,"_path":324},"一致性hash算法","/dotnet/2020-02-06-consistent_hash",{"title":326,"_path":327},"地图的aoi","/dotnet/2020-02-07-aoi",{"title":329,"_path":330},"游戏的匹配机制ELO","/dotnet/2020-02-09-room-elo",{"title":332,"_path":333},"C# 深浅复制","/dotnet/2020-02-10-icloneable",{"title":335,"_path":336},"C#引用类型对象在循环引用时会不会内存泄漏","/dotnet/2020-02-11-gc",{"title":338,"_path":339},"扒一扒.net、.net framework、mono和Unity","/dotnet/2020-02-12-netcore-mono-netframework",{"title":341,"_path":342},"c#编译和运行启动原理","/dotnet/2020-02-13-csharp-run",{"title":344,"_path":345},"abp新建项目指南","/dotnet/2020-05-29-abp-start",{"title":347,"_path":348},"2020 06 11 IdentityServer Use","/dotnet/2020-06-11-identityserver-use",{"title":350,"_path":351},"关于abp的用户的一些问题","/dotnet/2020-07-05-abp-database-user",{"title":353,"_path":354},"abp的dOC模块使用","/dotnet/2020-07-10-abp-doc",{"title":356,"_path":357},"abp默认语言规则","/dotnet/2020-07-15-abp-default-language",{"title":359,"_path":360},"Orleans 最佳实践","/dotnet/2020-08-09-orleans-best-practices",{"title":362,"_path":363},"c#特性参数","/dotnet/2020-08-10-param-attribute",{"title":365,"_path":366},".NET Core 获取 HttpContext.Current 以及 AsyncLocal 与 ThreadLocal","/dotnet/2020-08-11-httpcontextaccessor-asynclocal",{"title":368,"_path":369},"Kestrel源码分析","/dotnet/2020-08-15-kestrel-source-code",{"title":371,"_path":372},"ConcurrentDictionary并发字典","/dotnet/2020-08-16-concurrentdictionary",{"title":374,"_path":375},"IOptions、IOptionsMonitor以及IOptionsSnapshot","/dotnet/2020-08-17-netcore-options",{"title":377,"_path":378},".NET Core/Framework 创建委托以大幅度提高反射调用的性能","/dotnet/2020-11-13-reflection-method",{"title":380,"_path":381},"C＃枚举中使用Flags特性","/dotnet/2020-11-24-flags",{"title":383,"_path":384},"谷歌浏览器下netcore登录失败问题","/dotnet/2020-12-11-chrome-login-fail",{"title":386,"_path":387},"Converting between Structs and Byte Arrays","/dotnet/2021-05-01-converting-between-structs-and-byte-arrays",{"title":389,"_path":390},"c#在重写object中的Equal方法时需要对GetHashCode进行重写（Dictionary引用）","/dotnet/2022-08-15-equal-hashcode",{"title":392,"_path":393,"children":394},"Game","/game",[395,398,401,404,407,410,413,416,419,422,425,428,431,434,437],{"title":396,"_path":397},"使用柏林噪声算法生成地图","/game/2021-01-20-perlin-map",{"title":399,"_path":400},"波函数坍塌算法生成地图","/game/2021-01-21-wave-collapse-function",{"title":402,"_path":403},"文明6地图生成算法","/game/2021-01-22-civ-map",{"title":405,"_path":406},"roguelike地牢生成算法","/game/2021-01-23-roguelike-map",{"title":408,"_path":409},"Spelunky关卡生成","/game/2021-01-23-spelunky-map",{"title":411,"_path":412},"Edgar源代码解读","/game/2021-06-12-edgar-code-read",{"title":414,"_path":415},"rpgbuild的一些备注","/game/2021-06-15-rpgbuilder",{"title":417,"_path":418},"游戏人物设计","/game/2021-08-05-game-task-design",{"title":420,"_path":421},"unity gameplay ability源代码解析","/game/2021-12-14-untiy-gameplay-ablility-sourcecode",{"title":423,"_path":424},"苟与剑游戏技能分析","/game/2021-12-21-gyj-skill",{"title":426,"_path":427},"quest machine 使用相关","/game/2022-02-19-quest-machine",{"title":429,"_path":430},"苟与剑中的单位生成方式","/game/2022-03-16-gyj-map",{"title":432,"_path":433},"ecs中实体创建方法","/game/2022-08-03-ecs",{"title":435,"_path":436},"暗黑2怪物等级和掉落规则","/game/2022-08-05-dia2",{"title":438,"_path":439},"行为树源代码解析","/game/2022-08-21-behavior-tree-source-code",{"title":441,"_path":442,"children":443},"Gyj","/gyj",[444,447,450,453,456,459,462,465,468,471,474,477,480,483,486,489],{"title":445,"_path":446},"美术要求","/gyj/2022-06-11-meishuyaoqiu",{"title":448,"_path":449},"游戏基础知识","/gyj/2022-06-12-jichuzhishi",{"title":451,"_path":452},"2022 08 22 地图房间的种类","/gyj/2022-08-22-detufangjiandezhonglei",{"title":454,"_path":455},"2022 08 22 奇遇事件","/gyj/2022-08-22-qiyushijian",{"title":457,"_path":458},"游戏流程","/gyj/2022-08-22-youxiliucheng",{"title":460,"_path":461},"物品产出表","/gyj/2022-08-22-wupinchanchubiao",{"title":463,"_path":464},"玩法","/gyj/2022-08-22-wanfa",{"title":466,"_path":467},"初入江湖","/gyj/2022-08-22-diyizhang",{"title":469,"_path":470},"2022 08 22 职业与工作","/gyj/2022-08-22-zhiyeyugongzuo",{"title":472,"_path":473},"天下霸图研究","/gyj/2022-11-01-tianxiabatu",{"title":475,"_path":476},"流放之路关于伤害公式和技能的分析","/gyj/2022-11-17-liufangzhilu",{"title":478,"_path":479},"门派内容相关","/gyj/2022-11-17-sect",{"title":481,"_path":482},"2022 12 01 养殖","/gyj/2022-12-01-yangzhi",{"title":484,"_path":485},"种植","/gyj/2022-12-01-zhongzhi",{"title":487,"_path":488},"人物属性设计","/gyj/2022-12-15-renwushuxing",{"title":490,"_path":491},"跑商","/gyj/2023-11-01-paoshang",{"title":493,"_path":494,"children":495},"Js","/js",[496,499,502],{"title":497,"_path":498},"如何在TypeScript中使用JS类库","/js/2022-02-12-typescript-use-js",{"title":500,"_path":501},"nuxt3项目初始化失败","/js/2023-05-16-nuxt3-init-fail",{"title":503,"_path":504},"Flex 布局使用","/js/2024-03-17-flex-use",{"title":506,"_path":507,"children":508},"Tool","/tool",[509,512,515,518,521,524,527,530,533,536,539,542,545,548,551,554,557,560,563,566,569,572,575,578,581,584,587,590,593,596,599,602,605,608,611,614],{"title":510,"_path":511},"windows发送到手机Ftp","/tool/2019-06-20-windows-send-to-ftp",{"title":513,"_path":514},"windows特殊目录修复","/tool/2019-06-24-shell-folders-are-displayed-with-the-standard-folder-icon-in-windows",{"title":516,"_path":517},"scourcetree  总是需要输入密码","/tool/2019-08-07-sourcetree-git-password",{"title":519,"_path":520},"powershell 常用命令","/tool/2019-08-10-powershell-command",{"title":522,"_path":523},"scoop的使用","/tool/2019-08-20-scoop-use",{"title":525,"_path":526},"使用配置文件来管理NuGet包版本F","/tool/2019-09-02-nuget-manager",{"title":528,"_path":529},"Redis的两种持久化RDB和AOF","/tool/2019-09-02-redis-aof-rdb",{"title":531,"_path":532},"使用 SSH 登陆谷歌云 root 或者 普通账户的方法","/tool/2020-01-02-google-clound-local-login",{"title":534,"_path":535},"CentOS 下安装Shadowsocks 搭建ss","/tool/2020-01-12-centosn-ss-install",{"title":537,"_path":538},"mac下brew 使用","/tool/2020-01-13-brew",{"title":540,"_path":541},"术语中英文对照","/tool/2020-02-05-game_en_zh",{"title":543,"_path":544},"Excel中以文本形式存储的数字","/tool/2020-02-06-excel-text-number",{"title":546,"_path":547},"protobuf序列化的一些问题","/tool/2020-03-25-protobuf-empty-collections",{"title":549,"_path":550},"为博客将 RSS 转为邮件订阅","/tool/2020-06-26-blog-mail-sub",{"title":552,"_path":553},"github下载代码的速度太慢","/tool/2020-06-27-linux-github-slow",{"title":555,"_path":556},"win10开始菜单添加软件以及备份和恢复","/tool/2020-07-02-win10-start-menu",{"title":558,"_path":559},"gitbook的使用","/tool/2020-07-06-gitbook-use",{"title":561,"_path":562},"github actions 简单使用","/tool/2020-07-11-github-actions",{"title":564,"_path":565},"使用hexo建立博客并部署到github","/tool/2020-07-12-hexo-github",{"title":567,"_path":568},"终端下设置代理","/tool/2020-07-13-terminal-proxy",{"title":570,"_path":571},"发现nuget包太占用C盘，怎么办？","/tool/2020-08-30-nuget-is-big",{"title":573,"_path":574},"unity商店下载资源迁移","/tool/2020-11-15-unity-is-big",{"title":576,"_path":577},"关于coding的pages介绍","/tool/2020-11-16-coding-pages",{"title":579,"_path":580},"一些常用的dns服务器","/tool/2021-05-06-dns",{"title":582,"_path":583},"UE4素材破解","/tool/2021-11-06-ue4-view",{"title":585,"_path":586},"安装cockpit通过nginx代理访问","/tool/2021-11-07-cockpit-linux",{"title":588,"_path":589},"Windows LTSC、LTSB、Server 安装 Windows Store 应用商店 ","/tool/2021-11-15-install-windowsstore",{"title":591,"_path":592},"我是如何把 VS Code 插件启动速度从 8 秒减少到 1 秒 ","/tool/2021-12-02-vscode-plugins-big",{"title":594,"_path":595},"云效部署hexo到自己的主机 ","/tool/2021-12-11-yunxiao-liushuixian-hexo",{"title":597,"_path":598},"github 怎么合并原始分支？ ","/tool/2021-12-12-github-sync",{"title":600,"_path":601},"code server安装制作online ide","/tool/2022-01-30-code-server",{"title":603,"_path":604},"rider的使用","/tool/2022-08-02-rider-use",{"title":606,"_path":607},"2022 08 09 Amd Over","/tool/2022-08-09-amd-over",{"title":609,"_path":610},"rider破解","/tool/2022-11-19-rider-po-jie",{"title":612,"_path":613},"stable diffusion install","/tool/2023-01-20-stable-diffusion-install",{"title":615,"_path":616},"CGI, FastCGI, WSGI, uWSGI, uwsgi一文搞懂","/tool/2023-02-15-cgi-fastcgi-wsgi-uswgi",{"title":618,"_path":619,"children":620},"Unity","/unity",[621,624,627,630,633,636,639,642,645,648,651,654,657,660,663,666,669,672,675,678,681,684,687,690,693,696,699,702,705,708,711,714,717,720,721,724,727,730,733,736,739,742,745,748,751,754,757,760,763,766,769,772,775,778,781,784,787,790,793,796,799,802,805,808,811,814,817,820,823,826,829,832],{"title":622,"_path":623},"Unity 导出 Android 64-bit 版本","/unity/2019-06-20-unity-android-x64",{"title":625,"_path":626},"Unity的il2cpp","/unity/2019-06-20-unity-il2cpp-debugger",{"title":628,"_path":629},"googlePlay 发布问题","/unity/2019-06-23-googlplay-pulish",{"title":631,"_path":632},"关于unity的适配问题","/unity/2019-08-09-unity2d-shipei",{"title":634,"_path":635},"一次精通 RectTransform","/unity/2019-08-10-ugui-recttransform",{"title":637,"_path":638},"一次精通 eventmanager","/unity/2019-08-11-ugui-eventmanager",{"title":640,"_path":641},"ugui的eventsystem源码解读","/unity/2019-08-12-ugui-eventsystem-sourcecode",{"title":643,"_path":644},"Unity Raycasters 剖析","/unity/2019-08-12-ugui-raycasters",{"title":646,"_path":647},"关于addressable那些事","/unity/2019-09-01-addressable",{"title":649,"_path":650},"关于spriteAtlas打包那些事","/unity/2019-09-01-spriteatlas",{"title":652,"_path":653},"ilruntime的研究","/unity/2019-09-02-ilruntime",{"title":655,"_path":656},"unity的宏以及添加net框架中未引用的dll","/unity/2019-09-02-unity-reference-dll",{"title":658,"_path":659},"xlua注入源码解读","/unity/2019-09-03-xlua-inject",{"title":661,"_path":662},"如何快速的注入汇编","/unity/2019-09-04-mono.cecil-inject",{"title":664,"_path":665},"2D游戏视差背景的实现","/unity/2019-09-13-parallax-2d",{"title":667,"_path":668},"unity使用代理","/unity/2019-11-15-unity-proxy",{"title":670,"_path":671},"一篇文章搞定Entitas","/unity/2020-01-01-unity-entitas",{"title":673,"_path":674},"unity攻击范围检测的方式区别","/unity/2020-01-11-unity-attack-range-detection-type",{"title":676,"_path":677},"常见的2D碰撞检测","/unity/2020-01-12-collision-detection",{"title":679,"_path":680},"unity攻击范围检测","/unity/2020-01-13-unity-attack-detection",{"title":682,"_path":683},"技能系统","/unity/2020-02-15-skill-system",{"title":685,"_path":686},"游戏buff系统设计","/unity/2020-02-16-buff-system",{"title":688,"_path":689},"角色状态设计","/unity/2020-02-17-character-states",{"title":691,"_path":692},"理解托管堆","/unity/2020-02-18-bestpracticeunderstandingperformanceinunity",{"title":694,"_path":695},"理解自动内存管理","/unity/2020-02-19-understandingautomaticmemorymanagement",{"title":697,"_path":698},"unity 移动平台打包丢失shader的问题","/unity/2020-02-20-shader-lost",{"title":700,"_path":701},"Unity的调试相关","/unity/2020-03-01-unity-debug",{"title":703,"_path":704},"unity启动运行脚本流程","/unity/2020-03-04-unity-startup",{"title":706,"_path":707},"unity的坐标体系","/unity/2020-07-01-unity-coordinate",{"title":709,"_path":710},"2020 07 03 Unity Mesh","/unity/2020-07-03-unity-mesh",{"title":712,"_path":713},"unity Render Pipeline","/unity/2020-07-04-unity-render-pipeline",{"title":715,"_path":716},"Notch Solution","/unity/2020-08-29-notch-solution",{"title":718,"_path":719},"unity 项目dll检查","/unity/2020-08-30-unity-dll-check",{"title":8,"_path":4},{"title":722,"_path":723},"UNITY性能优化流程","/unity/2020-09-10-optimizing-for-performance",{"title":725,"_path":726},"堆栈内存Stack和堆内存Heap","/unity/2020-09-11-stack-heap",{"title":728,"_path":729},"unity的addressables","/unity/2020-09-12-addressables",{"title":731,"_path":732},"游戏中的向量使用","/unity/2020-09-13-vector",{"title":734,"_path":735},"UNITY ECS 详解","/unity/2020-10-15-unity-ecs",{"title":737,"_path":738},"UNITY JOB SYSTEM详解","/unity/2020-10-16-unity-job",{"title":740,"_path":741},"运行时打包图集","/unity/2020-10-17-runtime-spriteatlas",{"title":743,"_path":744},"unity ecs component","/unity/2020-10-18-unity-ecs-component",{"title":746,"_path":747},"基于 Game Object Conversion 和 SubScene 的 DOTS 开发工作流","/unity/2020-10-19-game-object-conversion-and-subscene",{"title":749,"_path":750},"源代码分析world的创建","/unity/2020-10-20-ecs-world",{"title":752,"_path":753},"unity使用platforms构建","/unity/2020-10-21-platform",{"title":755,"_path":756},"Unity rendering order渲染顺序","/unity/2020-10-22-unity-render-order",{"title":758,"_path":759},"关于静态批处理/动态批处理/GPU Instancing /SRP Batcher的详细剖析","/unity/2020-10-23-unity-optimizing-gpu",{"title":761,"_path":762},"unity的ScreenToWorldPoint","/unity/2020-10-24-screentoworldpoint",{"title":764,"_path":765},"URP性能测试","/unity/2020-10-24-unity-urp-performance",{"title":767,"_path":768},"如何使用Unity ECS打造Reactive System？","/unity/2020-11-11-how-to-build-reactive-systems-with-unity-ecs",{"title":770,"_path":771},"Unity中Sprite和UI Image的区别","/unity/2020-11-12-sprite-image-diff",{"title":773,"_path":774},"简单保存工具","/unity/2020-11-13-simple-save",{"title":776,"_path":777},"2020 11 14 Netcode","/unity/2020-11-14-netcode",{"title":779,"_path":780},"ecs中的parent","/unity/2020-11-15-ecs-parent",{"title":782,"_path":783},"ability","/unity/2020-11-16-dotssample",{"title":785,"_path":786},"unity world time system","/unity/2020-11-17-unity-ecs-worldtime",{"title":788,"_path":789},"netcode源代码解读","/unity/2020-11-18-netcode-sourcecode",{"title":791,"_path":792},"pitch yaw roll是什么","/unity/2020-11-29-pitch-yaw-roll",{"title":794,"_path":795},"A Native Collection has not been disposed, resulting in a memory leak. Allocated from:","/unity/2020-12-20-collection-has-not-been-disposed",{"title":797,"_path":798},"解决Unity鼠标坐标点转成世界坐标系坐标点","/unity/2021-01-24-screentoworld",{"title":800,"_path":801},"2021 01 25 Tilemap","/unity/2021-01-25-tilemap",{"title":803,"_path":804},"Unity RenderTexture的应用","/unity/2021-04-11-render-texture",{"title":806,"_path":807},"commandbuff的一些问题","/unity/2021-05-20-ecs-commandbuff-question",{"title":809,"_path":810},"How to Make One Way Platform in unity","/unity/2021-06-13-how-to-make-one-way-platform",{"title":812,"_path":813},"UNITY的渲染顺序","/unity/2021-06-14-unity-render-order",{"title":815,"_path":816},"防止变量引用丢失 FormerlySerializedAs","/unity/2021-07-20-formerlyserializedas",{"title":818,"_path":819},"AI-PLANNER使用","/unity/2021-08-01-ai-planner",{"title":821,"_path":822},"Increased script assembly reload time","/unity/2021-10-01-increased-script-assembly-reload-time",{"title":824,"_path":825},"关于unity的热重载的研究","/unity/2022-01-02-unity-hot-reload",{"title":827,"_path":828},"Editor Iteration Profiler的使用","/unity/2022-01-28-unity-editor-iteration-profiler",{"title":830,"_path":831},"CircleCast和Overlapple的区别是什么","/unity/2022-04-02-circlecast-overlapple-diff",{"title":833,"_path":834},"unity ecs的备忘录","/unity/2022-09-10-ecs-beiwang",1710779039829]