[{"data":1,"prerenderedAt":1240},["Reactive",2],{"content-query-WPEX7dy1Xk":3,"content-navigation-8C37fagqQL":658},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":652,"_id":653,"_source":654,"_file":655,"_extension":656,"date":657},"/game/2022-08-05-dia2","game",false,"","暗黑2怪物等级和掉落规则","怪物等级在普通难度上，怪物的等级由怪物的种类决定，不受场景等级的制约。在噩梦和地狱的难度中，怪物的等级由场景等级决定。普通怪物的等级为场景等级，场景的蓝色精英怪物等级为场景等级加2，金色怪物等级为场景等级加3.例如:85级的场景中会出现普通怪物85级、boss怪物87级、精英金怪兽88级3种等级的怪物关底boss等级固定，与场景等级无太大关系。怪物的分类要研究暗黑2的物品掉落系统，首先要了解暗黑世界中的怪物。暗黑中怪物分为如下几个种类等级：\n1.（eBoss）：中文中我们一般称之为.【关底BOSS】，如安达里尔、督瑞尔、墨菲斯托等\n2.（Boss）：即【普通BOSS】，这些怪物有且仅有6个：\n",{"type":11,"children":12,"toc":636},"root",[13,21,77,83,124,129,134,139,144,149,154,190,195,208,213,221,229,236,241,348,356,363,368,376,383,388,396,403,408,418,423,435,440,448,453,461,466,479,484,489,494,501,506,513,518,526,531,539,544,552,557,563,596,606,611,616,621,626,631],{"type":14,"tag":15,"props":16,"children":18},"element","h2",{"id":17},"怪物等级",[19],{"type":20,"value":17},"text",{"type":14,"tag":22,"props":23,"children":24},"ul",{},[25,31,36],{"type":14,"tag":26,"props":27,"children":28},"li",{},[29],{"type":20,"value":30},"在普通难度上，怪物的等级由怪物的种类决定，不受场景等级的制约。",{"type":14,"tag":26,"props":32,"children":33},{},[34],{"type":20,"value":35},"在噩梦和地狱的难度中，怪物的等级由场景等级决定。普通怪物的等级为场景等级，场景的蓝色精英怪物等级为场景等级加2，金色怪物等级为场景等级加3.例如:85级的场景中会出现普通怪物85级、boss怪物87级、精英金怪兽88级3种等级的怪物",{"type":14,"tag":26,"props":37,"children":38},{},[39,45,47,51,56,59,63,66,70,73],{"type":14,"tag":40,"props":41,"children":42},"strong",{},[43],{"type":20,"value":44},"关底boss等级固定",{"type":20,"value":46},"，与场景等级无太大关系。",{"type":14,"tag":48,"props":49,"children":50},"br",{},[],{"type":14,"tag":52,"props":53,"children":55},"img",{"alt":7,"src":54},"/images/2022-08-05-dia2/1659765901000.png",[],{"type":14,"tag":48,"props":57,"children":58},{},[],{"type":14,"tag":52,"props":60,"children":62},{"alt":7,"src":61},"/images/2022-08-05-dia2/1659765913000.png",[],{"type":14,"tag":48,"props":64,"children":65},{},[],{"type":14,"tag":52,"props":67,"children":69},{"alt":7,"src":68},"/images/2022-08-05-dia2/1659765924000.png",[],{"type":14,"tag":48,"props":71,"children":72},{},[],{"type":14,"tag":52,"props":74,"children":76},{"alt":7,"src":75},"/images/2022-08-05-dia2/1659765933000.png",[],{"type":14,"tag":78,"props":79,"children":81},"h3",{"id":80},"怪物的分类",[82],{"type":20,"value":80},{"type":14,"tag":84,"props":85,"children":86},"p",{},[87,89,92,94,97,99,102,104,107,109,112,114,117,119,122],{"type":20,"value":88},"要研究暗黑2的物品掉落系统，首先要了解暗黑世界中的怪物。暗黑中怪物分为如下几个种类等级：",{"type":14,"tag":48,"props":90,"children":91},{},[],{"type":20,"value":93},"\n1.（eBoss）：中文中我们一般称之为.【关底BOSS】，如安达里尔、督瑞尔、墨菲斯托等",{"type":14,"tag":48,"props":95,"children":96},{},[],{"type":20,"value":98},"\n2.（Boss）：即【普通BOSS】，这些怪物有且仅有6个：",{"type":14,"tag":48,"props":100,"children":101},{},[],{"type":20,"value":103},"\n☆血乌 格里斯瓦得 罗达门特 召唤者 衣卒尔 尼拉塞克",{"type":14,"tag":48,"props":105,"children":106},{},[],{"type":20,"value":108},"\n3.（Unique）：中文中我们一般称之为【精英怪】，游戏中表现为其名字为暗金色。分为固定精英怪（Super Unique）和随机精英怪（Random Unique）。固定精英怪拥有固定的名字和固定的出现地点，拥有固定属性以及可能出现的随机属性。如“毕须博须”、“暴躁外皮”等。随机精英怪则是在游戏中随机出现，名字由词缀“XXX之XXX的”的随机构成，并随机获得一些特殊属性。",{"type":14,"tag":48,"props":110,"children":111},{},[],{"type":20,"value":113},"\n4.（Minion）：中文中我们称之为【随从】，即精英怪身边的与其同类的喽啰怪物。在游戏中外观和普通怪一样，但隐藏有带领它的精英怪的部分特殊属性。",{"type":14,"tag":48,"props":115,"children":116},{},[],{"type":20,"value":118},"\n5.（Champion）：中文中我们称之为【头目】。游戏中表现为其名字为蓝色。有时候它们能从其名字的前缀（如果有的话）中获得特殊属性。",{"type":14,"tag":48,"props":120,"children":121},{},[],{"type":20,"value":123},"\n6.（Normal）：普通小怪。游戏中表现为其名字为白色。",{"type":14,"tag":78,"props":125,"children":127},{"id":126},"财宝阶层",[128],{"type":20,"value":126},{"type":14,"tag":84,"props":130,"children":131},{},[132],{"type":20,"value":133},"TC是一个包含了众多物品清单的多层目录，一个大TC目录中可能包含有多个子TC目录。 怪物死亡后掉落的物品就是从其TC目录的物品清单中按照一定规则随机取出物品。\n但我们玩家在日常口头交流时，常常只讨论武器和防具的掉落，并将TC目录简化为一个数字等级，简称为怪物的TC。比如我们常说的墨菲斯托的TC=78，暴躁外皮的TC=87等等。",{"type":14,"tag":84,"props":135,"children":136},{},[137],{"type":20,"value":138},"☆TC由3到87，按3递增（3、6、9…81、84、87），共有29个递增的TC阶层。",{"type":14,"tag":15,"props":140,"children":142},{"id":141},"掉落规则",[143],{"type":20,"value":141},{"type":14,"tag":78,"props":145,"children":147},{"id":146},"物品等级",[148],{"type":20,"value":146},{"type":14,"tag":84,"props":150,"children":151},{},[152],{"type":20,"value":153},"物品等级常用术语为ilvl，注意这个等级不是使用装备需要的等级，而是一个内在的等级数据，一定程度上决定了装备可能的质量。",{"type":14,"tag":155,"props":156,"children":157},"ol",{},[158,166,174,182],{"type":14,"tag":26,"props":159,"children":160},{},[161],{"type":14,"tag":40,"props":162,"children":163},{},[164],{"type":20,"value":165},"打怪掉落  打怪刷到的装备等级=掉装备怪物的等级",{"type":14,"tag":26,"props":167,"children":168},{},[169],{"type":14,"tag":40,"props":170,"children":171},{},[172],{"type":20,"value":173},"翻箱子掉落 开箱子掉落的装备等级=场景等级",{"type":14,"tag":26,"props":175,"children":176},{},[177],{"type":14,"tag":40,"props":178,"children":179},{},[180],{"type":20,"value":181},"在NPC那里买到 商店买的装备等级=人物等级+5",{"type":14,"tag":26,"props":183,"children":184},{},[185],{"type":14,"tag":40,"props":186,"children":187},{},[188],{"type":20,"value":189},"在NPC那里通过赌博得到  赌博得的装备等级=人物等级+4或-5",{"type":14,"tag":84,"props":191,"children":192},{},[193],{"type":20,"value":194},"**物品等级最大99。**物品等级最大的作用有两个：",{"type":14,"tag":155,"props":196,"children":197},{},[198,203],{"type":14,"tag":26,"props":199,"children":200},{},[201],{"type":20,"value":202},"决定了该物品的最大出孔数,比如，同样是灰幕寿衣，如果是25级以下怪物掉落的，它的物品等级就是25以下，它最大的打孔数就是3孔；如果是高于25级怪物掉落的，它的物品等级也就高于25，这件衣服最大孔数就是4孔。",{"type":14,"tag":26,"props":204,"children":205},{},[206],{"type":20,"value":207},"物品等级决定了装备的词缀，物品等级越高，可能出现的词缀就越好。",{"type":14,"tag":78,"props":209,"children":211},{"id":210},"词缀等级",[212],{"type":20,"value":210},{"type":14,"tag":84,"props":214,"children":215},{},[216],{"type":14,"tag":40,"props":217,"children":218},{},[219],{"type":20,"value":220},"物品的属性来源于物品所具有的词缀。游戏中每一种词缀都代表了某一种特定的属性，一旦物品拥有了某个词缀，那么就一定具有这个词缀所代表的属性。",{"type":14,"tag":84,"props":222,"children":223},{},[224,227],{"type":14,"tag":48,"props":225,"children":226},{},[],{"type":20,"value":228},"\n所有的词缀总共分为2类：前缀和后缀。前缀和后缀又分别按照所代表属性的不同分成组。",{"type":14,"tag":84,"props":230,"children":231},{},[232],{"type":14,"tag":52,"props":233,"children":235},{"alt":7,"src":234},"/images/2022-08-05-dia2/1659767663000.png",[],{"type":14,"tag":84,"props":237,"children":238},{},[239],{"type":20,"value":240},"比如图中的绿框内是前缀，红框内是后缀，它们对应下面蓝色字体的“属性”，珠宝匠对应4孔，偏向对应格档速度和格档机率。",{"type":14,"tag":84,"props":242,"children":243},{},[244,246,251,254,257,259,262,264,267,269,272,274,277,279,282,284,287,289,292,295,297,300,302,305,307,310,312,315,317,320,322,325,327,330,332,335,337,340,343],{"type":20,"value":245},"词缀种类非常多，蓝色装备最多可以从词缀中选择不同的两个，黄色最多选择6个。而不同词缀又是有不同等级的，",{"type":14,"tag":40,"props":247,"children":248},{},[249],{"type":20,"value":250},"高等级词缀当然只能出现在物品等级和品质等级更高的装备上。",{"type":14,"tag":48,"props":252,"children":253},{},[],{"type":14,"tag":48,"props":255,"children":256},{},[],{"type":20,"value":258},"\n前缀共分为三个系26个小组：",{"type":14,"tag":48,"props":260,"children":261},{},[],{"type":20,"value":263},"\n第一系是进攻型前缀共计14小组：",{"type":14,"tag":48,"props":265,"children":266},{},[],{"type":20,"value":268},"\n编号110组加准确率；编号105组增强伤害；编号111组同时加准确和伤害 或者 按等级加准确；编号123组加对恶魔的准确和伤害；编号142组加对不死的准确和伤害；编号137组加冰伤害；编号138组加火伤害；编号139组加电伤害；编号140组加毒伤害；编号113组吓跑怪物；编号121组杀死敌人加法力；编号107组所受伤害转为法力；编号114组加mf；编号112组加照亮范围",{"type":14,"tag":48,"props":270,"children":271},{},[],{"type":20,"value":273},"\n第二系是防御型前缀共计11小组：",{"type":14,"tag":48,"props":275,"children":276},{},[],{"type":20,"value":278},"\n编号117组加抗冰；编号118组加抗火；编号119组加抗电；编号120组加抗毒；编号116组加全抗；编号115组加法力；编号101组加防御；编号108组加耐力；编号109组按百分比加耐力；编号122组增加凹槽；编号141组增加投掷物数量；",{"type":14,"tag":48,"props":280,"children":281},{},[],{"type":20,"value":283},"\n第三系是技能前缀有1个小组：",{"type":14,"tag":48,"props":285,"children":286},{},[],{"type":20,"value":288},"\n编号125小组：加人物技能；加亚马逊单系技能；加野蛮人单系技能；加圣骑士单系技能；加死灵法师单系技能；加法师单系技能；加德鲁伊单系技能；加刺客单系技能；",{"type":14,"tag":48,"props":290,"children":291},{},[],{"type":14,"tag":48,"props":293,"children":294},{},[],{"type":20,"value":296},"\n后缀共分为四个系35个小组：",{"type":14,"tag":48,"props":298,"children":299},{},[],{"type":20,"value":301},"\n第一系是进攻型后缀共计16小组：",{"type":14,"tag":48,"props":303,"children":304},{},[],{"type":20,"value":306},"\n编号15组加最小伤害值；编号14组加最大伤害值；编号10组加冰伤害；编号12组加火伤害；编号13组加电伤害；编号16组加毒伤害；编号27组偷取生命；编号28组偷取法力；编号24组；编号20组阻止怪物；编号4组忽略目标防御；编号7组加攻击速度；编号9组加施法速度；编号21组加额外金币；编号22组加mf；编号25组同时加照亮范围和准确；",{"type":14,"tag":48,"props":308,"children":309},{},[],{"type":20,"value":311},"\n第二系是防御型后缀共计11小组：",{"type":14,"tag":48,"props":313,"children":314},{},[],{"type":20,"value":316},"\n编号1组物理伤害减少；编号2组魔法伤害减少；编号29组减少中毒时间；编号11组冰冻时间减半；编号35组加快速奔跑；编号18组加快速打击恢复；编号8组加格挡；编号6组反弹伤害；编号39组投掷物恢复数量；编号37组装备自动修复；编号39组永不磨损",{"type":14,"tag":48,"props":318,"children":319},{},[],{"type":20,"value":321},"\n第三系是技能后缀有1个小组：",{"type":14,"tag":48,"props":323,"children":324},{},[],{"type":20,"value":326},"\n编号44组：加亚马逊单个技能(包括聚气)；加野蛮人单个技能(包括聚气)；加德鲁伊单个技能(包括聚气)；加死灵法师单个技能(包括聚气)；加圣骑士单个技能(包括聚气)；加法师单个技能(包括聚气)；",{"type":14,"tag":48,"props":328,"children":329},{},[],{"type":20,"value":331},"\n第四系是属性后缀共计7个小组：",{"type":14,"tag":48,"props":333,"children":334},{},[],{"type":20,"value":336},"\n编号31组加力量；编号17组加敏捷；编号23组加能量；编号41组按等级加法力、按等级加生命或按等级同时加法力和生命(仅限蓝色装备)；编号26组加生命；编号19组自动恢复生命；编号30组减需求；",{"type":14,"tag":48,"props":338,"children":339},{},[],{"type":14,"tag":48,"props":341,"children":342},{},[],{"type":14,"tag":40,"props":344,"children":345},{},[346],{"type":20,"value":347},"当装备从怪物身上掉落时，或是当人物离开城镇导致商店里的商品更新时，或是当人物把物品从商人那里买下来时，或是当你用赫拉迪克方块合成新的物品时，物品的属性就在那一瞬间随机生成了。生成时系统将会随机挑选一些词缀安排给这个物品，于是物品就有了变化莫测的属性",{"type":14,"tag":155,"props":349,"children":350},{},[351],{"type":14,"tag":26,"props":352,"children":353},{},[354],{"type":20,"value":355},"取最高 qlvl or ilvl 为X 当｛ X \u003C (99-Q/2) ｝时，则该物品是低等物品,词缀等级（A）按照  { A = X - Q/2 } 计算词缀等级。",{"type":14,"tag":84,"props":357,"children":358},{},[359],{"type":14,"tag":52,"props":360,"children":362},{"alt":7,"src":361},"/images/2022-08-05-dia2/1659767006000.png",[],{"type":14,"tag":84,"props":364,"children":365},{},[366],{"type":20,"value":367},"举个栗子：我有一件地狱A1冰冷之原掉的装备，由于它是68场景等级（M），所以怪物是68-71级之间，掉落的装备就是68级-71级物等。比如按最低的68白怪掉的一个战帽，他的品质等级（Q）是34级，那么，带入公式 68 \u003C [ (99-34/2) = 82 ]，满足公式一。词缀等级按照 {A= 68 - 34/2 = 51}计算，他的词缀就是51级。",{"type":14,"tag":155,"props":369,"children":370},{},[371],{"type":14,"tag":26,"props":372,"children":373},{},[374],{"type":20,"value":375},"当｛ X > (99-Q/2) ｝时则是高等物品 按照 {A=2*X-99} 计算词缀等级。",{"type":14,"tag":84,"props":377,"children":378},{},[379],{"type":14,"tag":52,"props":380,"children":382},{"alt":7,"src":381},"/images/2022-08-05-dia2/1659767121000.png",[],{"type":14,"tag":84,"props":384,"children":385},{},[386],{"type":20,"value":387},"举个栗子：超市金怪出了一个君主盾（统盾），85+3，物等（I）88级，大于品质（Q）72级，带入公式 { A=2*88-99 } = 77级词缀等级（A）",{"type":14,"tag":155,"props":389,"children":390},{},[391],{"type":14,"tag":26,"props":392,"children":393},{},[394],{"type":20,"value":395},"以上情况之外，还有一种特殊情况，游戏内有7种自带 “魔法等级” （ML）的物品，按照 A= X + ML 计算",{"type":14,"tag":84,"props":397,"children":398},{},[399],{"type":14,"tag":52,"props":400,"children":402},{"alt":7,"src":401},"/images/2022-08-05-dia2/1659767156000.png",[],{"type":14,"tag":84,"props":404,"children":405},{},[406],{"type":20,"value":407},"举个栗子：3c瘸子掉了一个头环，他的最低物等（I）至少是82级。他的魔法等级是3，那么公式计算，他的词缀等级应该是 A = 82 + 3，85级。那么问题来了，他会鉴定出+2职业技能么？答案是，不能。 因为+2全技能的词缀是90级的。",{"type":14,"tag":409,"props":410,"children":412},"pre",{"code":411},"var x = math.max(qlvl,ilvl);\nfloat result;\n\nif(mlvl == 0)\n{\n    if( x > 99-(qlvl/2))\n    {\n        result = 2*x - 99; \n    }\n    else\n    {\n        result = x - qlvl/2\n    }\n}\nelse\n{\n    result = x +i.mlvl;\n}\n",[413],{"type":14,"tag":414,"props":415,"children":416},"code",{"__ignoreMap":7},[417],{"type":20,"value":411},{"type":14,"tag":78,"props":419,"children":421},{"id":420},"品质等级",[422],{"type":20,"value":420},{"type":14,"tag":84,"props":424,"children":425},{},[426,428,433],{"type":20,"value":427},"品质等级（qlvl）：",{"type":14,"tag":40,"props":429,"children":430},{},[431],{"type":20,"value":432},"每个装备固有的一个品质等级",{"type":20,"value":434},"，对于非绿色非暗金装备，qlvl和其底材一样，比如一件执政官铠甲，无论是蓝色还是黄色，其qlvl都是84。",{"type":14,"tag":84,"props":436,"children":437},{},[438],{"type":20,"value":439},"品质等级是玩家无法左右的，但是需要了解。因为它会与财宝等级（TC）一起决定掉落的。",{"type":14,"tag":84,"props":441,"children":442},{},[443],{"type":14,"tag":40,"props":444,"children":445},{},[446],{"type":20,"value":447},"品质等级决定具体是哪件装备（是镰刀还是执政官甲）；",{"type":14,"tag":78,"props":449,"children":451},{"id":450},"财富等级",[452],{"type":20,"value":450},{"type":14,"tag":84,"props":454,"children":455},{},[456],{"type":14,"tag":40,"props":457,"children":458},{},[459],{"type":20,"value":460},"财宝等级决定物品的品质等级",{"type":14,"tag":84,"props":462,"children":463},{},[464],{"type":20,"value":465},"怪物是否能掉落对应装备必须满足两个条件：",{"type":14,"tag":22,"props":467,"children":468},{},[469,474],{"type":14,"tag":26,"props":470,"children":471},{},[472],{"type":20,"value":473},"怪物的“财宝等级”（TC）大于或等于装备所在的“财宝等级”（TC），",{"type":14,"tag":26,"props":475,"children":476},{},[477],{"type":20,"value":478},"同时怪物自身的等级要大于或等于装备自身的“品质等级”（qlvl）。",{"type":14,"tag":78,"props":480,"children":482},{"id":481},"底材",[483],{"type":20,"value":481},{"type":14,"tag":84,"props":485,"children":486},{},[487],{"type":20,"value":488},"首先我们要提前介绍“底材”这个概念。其实在之前的内容已经提到过很多次“底材”，不过基本上都局限于制作符文之语的白色物品。但严格地说，“底材”实际上是所有魔法装备的衍生基础。你可以简单地理解为，一件白色的“军帽”经过“上色”变成了带有1-2条额外属性的蓝色“军帽”，或者经过另一种“上色”就变成了暗金物品“谐角之冠”，但他们的底材都是“军帽”。",{"type":14,"tag":84,"props":490,"children":491},{},[492],{"type":20,"value":493},"而底材也分为了普通级、扩展级和精英级三类，三类底材拥有同样的模型，后一级比前一级的基础属性更高，“军帽”就属于“精英级”底材：",{"type":14,"tag":84,"props":495,"children":496},{},[497],{"type":14,"tag":52,"props":498,"children":500},{"alt":7,"src":499},"/images/2022-08-05-dia2/1635230129413.png",[],{"type":14,"tag":84,"props":502,"children":503},{},[504],{"type":20,"value":505},"同一底材的暗金/绿色物品还会有自己的专属qlvl，一般叫做“成品qlvl”，如果我们打到了一个白色“军帽”，那它的qlvl显然就是58，而暗金军帽“谐角之冠”还会有自己专属的成品qlvl：69(见上上图的左下角)。",{"type":14,"tag":84,"props":507,"children":508},{},[509],{"type":14,"tag":52,"props":510,"children":512},{"alt":7,"src":511},"/images/2022-08-05-dia2/1659770992000.png",[],{"type":14,"tag":78,"props":514,"children":516},{"id":515},"掉落机制",[517],{"type":20,"value":515},{"type":14,"tag":84,"props":519,"children":520},{},[521],{"type":14,"tag":40,"props":522,"children":523},{},[524],{"type":20,"value":525},"怪物会掉落特定的物品么?",{"type":14,"tag":84,"props":527,"children":528},{},[529],{"type":20,"value":530},"不,不过金色怪物和头目会有更高的概率掉落魔法物品,头目会掉落魔法物品或更多的黄金.不过,怪物的种类与掉落的物品没有关系.",{"type":14,"tag":84,"props":532,"children":533},{},[534],{"type":14,"tag":40,"props":535,"children":536},{},[537],{"type":20,"value":538},"人物的等级与掉落的物品有关么?",{"type":14,"tag":84,"props":540,"children":541},{},[542],{"type":20,"value":543},"不,掉落的物品只与怪物等级与场景等级有关.",{"type":14,"tag":84,"props":545,"children":546},{},[547],{"type":14,"tag":40,"props":548,"children":549},{},[550],{"type":20,"value":551},"锁住的箱子会掉更好的东西么?",{"type":14,"tag":84,"props":553,"children":554},{},[555],{"type":20,"value":556},"不,但它会掉出更多的东西,一般来说是没上锁的两倍.",{"type":14,"tag":558,"props":559,"children":561},"h4",{"id":560},"掉落过程",[562],{"type":20,"value":560},{"type":14,"tag":155,"props":564,"children":565},{},[566,581],{"type":14,"tag":26,"props":567,"children":568},{},[569,571,574,576,579],{"type":20,"value":570},"底材判定过程（TC判定过程）",{"type":14,"tag":48,"props":572,"children":573},{},[],{"type":20,"value":575},"\n怪物的TC值代表了怪物能掉落的物品底材的最高Qlvl。",{"type":14,"tag":48,"props":577,"children":578},{},[],{"type":20,"value":580},"\n☆也就是说，当怪物TC ≥ 物品底材Qlvl时，则怪物能掉落该物品底材。",{"type":14,"tag":26,"props":582,"children":583},{},[584,586,589,591,594],{"type":20,"value":585},"成色判定过程（Mlvl判定过程）",{"type":14,"tag":48,"props":587,"children":588},{},[],{"type":20,"value":590},"\n确定了物品的底材后，系统将按照暗金 - 绿色 - 黄色 - 蓝色 - 白色的顺序来判定成色。当判定为暗金或者绿色时，系统会检查怪物等级是否满足物品的成品Qlvl。",{"type":14,"tag":48,"props":592,"children":593},{},[],{"type":20,"value":595},"\n如果物品成色被判定为暗金，而怪物等级Mlvl不足以掉落该物品的暗金形态或者该物品暗金形态不存在，则会掉落该物品的黄色形态并拥有3倍的耐久度；如果物品成色被判定为绿色，而怪物等级Mlvl不足以掉落该物品的绿色形态或者该物品绿色形态不存在，则会掉落该物品的蓝色形态并拥有2倍的耐久度。",{"type":14,"tag":84,"props":597,"children":598},{},[599,601,604],{"type":20,"value":600},"☆ 也就是说，当怪物等级Qlvl≥物品成品Qlvl时，怪物才能掉落该物品的暗金/绿色形态。",{"type":14,"tag":48,"props":602,"children":603},{},[],{"type":20,"value":605},"\n☆ MF值会分别增加暗金、绿色、黄色、蓝色判定的几率，但不影响超强、普通、劣质的判定。",{"type":14,"tag":84,"props":607,"children":608},{},[609],{"type":20,"value":610},"现在我们回过头来看看“谐角之冠”的掉落过程：",{"type":14,"tag":84,"props":612,"children":613},{},[614],{"type":20,"value":615},"1、击杀怪物A，假设它的财宝等级(TC)为59，怪物等级(mlvl)为65，那么就可以掉落qlvl为58的底材“军帽”(因为此时TC>底材qlvl)",{"type":14,"tag":84,"props":617,"children":618},{},[619],{"type":20,"value":620},"2、MF值开始介入(在这之前TC表还有一系列的pick过程，较为复杂，暂不介绍)，游戏进入“暗金 - 绿色 - 黄色 - 蓝色 - 白色”的掉落判定顺序，假设此时可以掉落该底材的暗金品质装备“谐角之冠”，但是由于怪物等级mlvl 65\u003C“谐角之冠”的成品qlvl 69，则无法掉落，改为掉落黄色品质的“军帽”，且具有3倍耐久度。",{"type":14,"tag":84,"props":622,"children":623},{},[624],{"type":20,"value":625},"3、如果怪物B的TC为57，那么根本不会掉落底材“军帽”，后续的“上色”流程无从谈起。",{"type":14,"tag":84,"props":627,"children":628},{},[629],{"type":20,"value":630},"4、如果怪物C的TC为67，mlvl为70，其余流程与前面一致，那么可以成功掉落“谐角之冠”。(因为TC>底材qlvl，可以进入掉落判定阶段，当判定为“谐角之冠”时，检查怪物mlvl>“谐角之冠”的成品qlvl，符合要求)",{"type":14,"tag":84,"props":632,"children":633},{},[634],{"type":20,"value":635},"前面已经提到过，MF只和“上色”有关，无法影响装备的品质等级qlvl，所以就算是把MF堆到10000，你在普通难度下也无法获得“统治者大盾”。",{"title":7,"searchDepth":637,"depth":637,"links":638},2,[639,644],{"id":17,"depth":637,"text":17,"children":640},[641,643],{"id":80,"depth":642,"text":80},3,{"id":126,"depth":642,"text":126},{"id":141,"depth":637,"text":141,"children":645},[646,647,648,649,650,651],{"id":146,"depth":642,"text":146},{"id":210,"depth":642,"text":210},{"id":420,"depth":642,"text":420},{"id":450,"depth":642,"text":450},{"id":481,"depth":642,"text":481},{"id":515,"depth":642,"text":515},"markdown","content:game:2022-08-05-dia2.md","content","game/2022-08-05-dia2.md","md","2022-08-05",[659,669,796,843,895,908,1020],{"title":660,"_path":661,"children":662},"Art","/art",[663,666],{"title":664,"_path":665},"如何用蒙版将两个图过渡融合","/art/2020-09-03-ps-ronghe-pics",{"title":667,"_path":668},"像素画入门","/art/2022-02-02-xiangsuhuarumen",{"title":670,"_path":671,"children":672},"Dotnet","/dotnet",[673,676,679,682,685,688,691,694,697,700,703,706,709,712,715,718,721,724,727,730,733,736,739,742,745,748,751,754,757,760,763,766,769,772,775,778,781,784,787,790,793],{"title":674,"_path":675},"Linux部署dotnetcore记录","/dotnet/2019-06-05-linux-dotnet-daemon",{"title":677,"_path":678},"时间轮的引入","/dotnet/2019-10-29-time-wheel",{"title":680,"_path":681},"帧同步的相关问题","/dotnet/2019-11-01-lock-step",{"title":683,"_path":684},"状态同步的相关问题","/dotnet/2019-11-01-state-sync-npc",{"title":686,"_path":687},"状态同步--技能系统的同步机制分析","/dotnet/2019-11-02-state-sync-skill",{"title":689,"_path":690},"Creating a Quartz.NET hosted service with ASP.NET Core","/dotnet/2019-11-05-quartz",{"title":692,"_path":693},"DatetimeOffset和Datetime的区别","/dotnet/2019-12-01-datetimeoffset",{"title":695,"_path":696},"大小端字节序(Big Endian和Little Endian)","/dotnet/2020-01-05-big-little-endian",{"title":698,"_path":699},"dll文件的加载","/dotnet/2020-01-06-dll-load",{"title":701,"_path":702},"延迟补偿在C/S架构游戏协议设计和优化中的应用","/dotnet/2020-02-02-latency_compensating_methods_in_clientserver_in-game_protocol_design_and_optimization",{"title":704,"_path":705},"延迟补偿和对时的相关总结","/dotnet/2020-02-02-latency_compensating-rtt",{"title":707,"_path":708},"快节奏多人游戏同步(1)-ClientServer架构","/dotnet/2020-02-02-net-sync-client-server-game-architecture",{"title":710,"_path":711},"快节奏多人游戏同步(2)-客户端预测与服务器校对","/dotnet/2020-02-02-net-sync-client-side-prediction-and-server-reconciliation",{"title":713,"_path":714},"快节奏多人游戏同步(3)-Entity插值","/dotnet/2020-02-02-net-sync-entity-interpolation",{"title":716,"_path":717},"快节奏多人游戏同步(4)-延时补偿","/dotnet/2020-02-02-net-sync-lag-compensation",{"title":719,"_path":720},"守望先锋等FPS游戏的网络同步","/dotnet/2020-02-02-overwatch-a-guide-to-understanding-netcode",{"title":722,"_path":723},"起源引擎网络同步模型","/dotnet/2020-02-02-source_multiplayer_networking",{"title":725,"_path":726},"orleans的部署模式","/dotnet/2020-02-03-orleans-deployment",{"title":728,"_path":729},"一致性hash算法","/dotnet/2020-02-06-consistent_hash",{"title":731,"_path":732},"地图的aoi","/dotnet/2020-02-07-aoi",{"title":734,"_path":735},"游戏的匹配机制ELO","/dotnet/2020-02-09-room-elo",{"title":737,"_path":738},"C# 深浅复制","/dotnet/2020-02-10-icloneable",{"title":740,"_path":741},"C#引用类型对象在循环引用时会不会内存泄漏","/dotnet/2020-02-11-gc",{"title":743,"_path":744},"扒一扒.net、.net framework、mono和Unity","/dotnet/2020-02-12-netcore-mono-netframework",{"title":746,"_path":747},"c#编译和运行启动原理","/dotnet/2020-02-13-csharp-run",{"title":749,"_path":750},"abp新建项目指南","/dotnet/2020-05-29-abp-start",{"title":752,"_path":753},"2020 06 11 IdentityServer Use","/dotnet/2020-06-11-identityserver-use",{"title":755,"_path":756},"关于abp的用户的一些问题","/dotnet/2020-07-05-abp-database-user",{"title":758,"_path":759},"abp的dOC模块使用","/dotnet/2020-07-10-abp-doc",{"title":761,"_path":762},"abp默认语言规则","/dotnet/2020-07-15-abp-default-language",{"title":764,"_path":765},"Orleans 最佳实践","/dotnet/2020-08-09-orleans-best-practices",{"title":767,"_path":768},"c#特性参数","/dotnet/2020-08-10-param-attribute",{"title":770,"_path":771},".NET Core 获取 HttpContext.Current 以及 AsyncLocal 与 ThreadLocal","/dotnet/2020-08-11-httpcontextaccessor-asynclocal",{"title":773,"_path":774},"Kestrel源码分析","/dotnet/2020-08-15-kestrel-source-code",{"title":776,"_path":777},"ConcurrentDictionary并发字典","/dotnet/2020-08-16-concurrentdictionary",{"title":779,"_path":780},"IOptions、IOptionsMonitor以及IOptionsSnapshot","/dotnet/2020-08-17-netcore-options",{"title":782,"_path":783},".NET Core/Framework 创建委托以大幅度提高反射调用的性能","/dotnet/2020-11-13-reflection-method",{"title":785,"_path":786},"C＃枚举中使用Flags特性","/dotnet/2020-11-24-flags",{"title":788,"_path":789},"谷歌浏览器下netcore登录失败问题","/dotnet/2020-12-11-chrome-login-fail",{"title":791,"_path":792},"Converting between Structs and Byte Arrays","/dotnet/2021-05-01-converting-between-structs-and-byte-arrays",{"title":794,"_path":795},"c#在重写object中的Equal方法时需要对GetHashCode进行重写（Dictionary引用）","/dotnet/2022-08-15-equal-hashcode",{"title":797,"_path":798,"children":799},"Game","/game",[800,803,806,809,812,815,818,821,824,827,830,833,836,839,840],{"title":801,"_path":802},"使用柏林噪声算法生成地图","/game/2021-01-20-perlin-map",{"title":804,"_path":805},"波函数坍塌算法生成地图","/game/2021-01-21-wave-collapse-function",{"title":807,"_path":808},"文明6地图生成算法","/game/2021-01-22-civ-map",{"title":810,"_path":811},"roguelike地牢生成算法","/game/2021-01-23-roguelike-map",{"title":813,"_path":814},"Spelunky关卡生成","/game/2021-01-23-spelunky-map",{"title":816,"_path":817},"Edgar源代码解读","/game/2021-06-12-edgar-code-read",{"title":819,"_path":820},"rpgbuild的一些备注","/game/2021-06-15-rpgbuilder",{"title":822,"_path":823},"游戏人物设计","/game/2021-08-05-game-task-design",{"title":825,"_path":826},"unity gameplay ability源代码解析","/game/2021-12-14-untiy-gameplay-ablility-sourcecode",{"title":828,"_path":829},"苟与剑游戏技能分析","/game/2021-12-21-gyj-skill",{"title":831,"_path":832},"quest machine 使用相关","/game/2022-02-19-quest-machine",{"title":834,"_path":835},"苟与剑中的单位生成方式","/game/2022-03-16-gyj-map",{"title":837,"_path":838},"ecs中实体创建方法","/game/2022-08-03-ecs",{"title":8,"_path":4},{"title":841,"_path":842},"行为树源代码解析","/game/2022-08-21-behavior-tree-source-code",{"title":844,"_path":845,"children":846},"Gyj","/gyj",[847,850,853,856,859,862,865,868,871,874,877,880,883,886,889,892],{"title":848,"_path":849},"美术要求","/gyj/2022-06-11-meishuyaoqiu",{"title":851,"_path":852},"游戏基础知识","/gyj/2022-06-12-jichuzhishi",{"title":854,"_path":855},"2022 08 22 地图房间的种类","/gyj/2022-08-22-detufangjiandezhonglei",{"title":857,"_path":858},"2022 08 22 奇遇事件","/gyj/2022-08-22-qiyushijian",{"title":860,"_path":861},"游戏流程","/gyj/2022-08-22-youxiliucheng",{"title":863,"_path":864},"物品产出表","/gyj/2022-08-22-wupinchanchubiao",{"title":866,"_path":867},"玩法","/gyj/2022-08-22-wanfa",{"title":869,"_path":870},"初入江湖","/gyj/2022-08-22-diyizhang",{"title":872,"_path":873},"2022 08 22 职业与工作","/gyj/2022-08-22-zhiyeyugongzuo",{"title":875,"_path":876},"天下霸图研究","/gyj/2022-11-01-tianxiabatu",{"title":878,"_path":879},"流放之路关于伤害公式和技能的分析","/gyj/2022-11-17-liufangzhilu",{"title":881,"_path":882},"门派内容相关","/gyj/2022-11-17-sect",{"title":884,"_path":885},"2022 12 01 养殖","/gyj/2022-12-01-yangzhi",{"title":887,"_path":888},"种植","/gyj/2022-12-01-zhongzhi",{"title":890,"_path":891},"人物属性设计","/gyj/2022-12-15-renwushuxing",{"title":893,"_path":894},"跑商","/gyj/2023-11-01-paoshang",{"title":896,"_path":897,"children":898},"Js","/js",[899,902,905],{"title":900,"_path":901},"如何在TypeScript中使用JS类库","/js/2022-02-12-typescript-use-js",{"title":903,"_path":904},"nuxt3项目初始化失败","/js/2023-05-16-nuxt3-init-fail",{"title":906,"_path":907},"Flex 布局使用","/js/2024-03-17-flex-use",{"title":909,"_path":910,"children":911},"Tool","/tool",[912,915,918,921,924,927,930,933,936,939,942,945,948,951,954,957,960,963,966,969,972,975,978,981,984,987,990,993,996,999,1002,1005,1008,1011,1014,1017],{"title":913,"_path":914},"windows发送到手机Ftp","/tool/2019-06-20-windows-send-to-ftp",{"title":916,"_path":917},"windows特殊目录修复","/tool/2019-06-24-shell-folders-are-displayed-with-the-standard-folder-icon-in-windows",{"title":919,"_path":920},"scourcetree  总是需要输入密码","/tool/2019-08-07-sourcetree-git-password",{"title":922,"_path":923},"powershell 常用命令","/tool/2019-08-10-powershell-command",{"title":925,"_path":926},"scoop的使用","/tool/2019-08-20-scoop-use",{"title":928,"_path":929},"使用配置文件来管理NuGet包版本F","/tool/2019-09-02-nuget-manager",{"title":931,"_path":932},"Redis的两种持久化RDB和AOF","/tool/2019-09-02-redis-aof-rdb",{"title":934,"_path":935},"使用 SSH 登陆谷歌云 root 或者 普通账户的方法","/tool/2020-01-02-google-clound-local-login",{"title":937,"_path":938},"CentOS 下安装Shadowsocks 搭建ss","/tool/2020-01-12-centosn-ss-install",{"title":940,"_path":941},"mac下brew 使用","/tool/2020-01-13-brew",{"title":943,"_path":944},"术语中英文对照","/tool/2020-02-05-game_en_zh",{"title":946,"_path":947},"Excel中以文本形式存储的数字","/tool/2020-02-06-excel-text-number",{"title":949,"_path":950},"protobuf序列化的一些问题","/tool/2020-03-25-protobuf-empty-collections",{"title":952,"_path":953},"为博客将 RSS 转为邮件订阅","/tool/2020-06-26-blog-mail-sub",{"title":955,"_path":956},"github下载代码的速度太慢","/tool/2020-06-27-linux-github-slow",{"title":958,"_path":959},"win10开始菜单添加软件以及备份和恢复","/tool/2020-07-02-win10-start-menu",{"title":961,"_path":962},"gitbook的使用","/tool/2020-07-06-gitbook-use",{"title":964,"_path":965},"github actions 简单使用","/tool/2020-07-11-github-actions",{"title":967,"_path":968},"使用hexo建立博客并部署到github","/tool/2020-07-12-hexo-github",{"title":970,"_path":971},"终端下设置代理","/tool/2020-07-13-terminal-proxy",{"title":973,"_path":974},"发现nuget包太占用C盘，怎么办？","/tool/2020-08-30-nuget-is-big",{"title":976,"_path":977},"unity商店下载资源迁移","/tool/2020-11-15-unity-is-big",{"title":979,"_path":980},"关于coding的pages介绍","/tool/2020-11-16-coding-pages",{"title":982,"_path":983},"一些常用的dns服务器","/tool/2021-05-06-dns",{"title":985,"_path":986},"UE4素材破解","/tool/2021-11-06-ue4-view",{"title":988,"_path":989},"安装cockpit通过nginx代理访问","/tool/2021-11-07-cockpit-linux",{"title":991,"_path":992},"Windows LTSC、LTSB、Server 安装 Windows Store 应用商店 ","/tool/2021-11-15-install-windowsstore",{"title":994,"_path":995},"我是如何把 VS Code 插件启动速度从 8 秒减少到 1 秒 ","/tool/2021-12-02-vscode-plugins-big",{"title":997,"_path":998},"云效部署hexo到自己的主机 ","/tool/2021-12-11-yunxiao-liushuixian-hexo",{"title":1000,"_path":1001},"github 怎么合并原始分支？ ","/tool/2021-12-12-github-sync",{"title":1003,"_path":1004},"code server安装制作online ide","/tool/2022-01-30-code-server",{"title":1006,"_path":1007},"rider的使用","/tool/2022-08-02-rider-use",{"title":1009,"_path":1010},"2022 08 09 Amd Over","/tool/2022-08-09-amd-over",{"title":1012,"_path":1013},"rider破解","/tool/2022-11-19-rider-po-jie",{"title":1015,"_path":1016},"stable diffusion install","/tool/2023-01-20-stable-diffusion-install",{"title":1018,"_path":1019},"CGI, FastCGI, WSGI, uWSGI, uwsgi一文搞懂","/tool/2023-02-15-cgi-fastcgi-wsgi-uswgi",{"title":1021,"_path":1022,"children":1023},"Unity","/unity",[1024,1027,1030,1033,1036,1039,1042,1045,1048,1051,1054,1057,1060,1063,1066,1069,1072,1075,1078,1081,1084,1087,1090,1093,1096,1099,1102,1105,1108,1111,1114,1117,1120,1123,1126,1129,1132,1135,1138,1141,1144,1147,1150,1153,1156,1159,1162,1165,1168,1171,1174,1177,1180,1183,1186,1189,1192,1195,1198,1201,1204,1207,1210,1213,1216,1219,1222,1225,1228,1231,1234,1237],{"title":1025,"_path":1026},"Unity 导出 Android 64-bit 版本","/unity/2019-06-20-unity-android-x64",{"title":1028,"_path":1029},"Unity的il2cpp","/unity/2019-06-20-unity-il2cpp-debugger",{"title":1031,"_path":1032},"googlePlay 发布问题","/unity/2019-06-23-googlplay-pulish",{"title":1034,"_path":1035},"关于unity的适配问题","/unity/2019-08-09-unity2d-shipei",{"title":1037,"_path":1038},"一次精通 RectTransform","/unity/2019-08-10-ugui-recttransform",{"title":1040,"_path":1041},"一次精通 eventmanager","/unity/2019-08-11-ugui-eventmanager",{"title":1043,"_path":1044},"ugui的eventsystem源码解读","/unity/2019-08-12-ugui-eventsystem-sourcecode",{"title":1046,"_path":1047},"Unity Raycasters 剖析","/unity/2019-08-12-ugui-raycasters",{"title":1049,"_path":1050},"关于addressable那些事","/unity/2019-09-01-addressable",{"title":1052,"_path":1053},"关于spriteAtlas打包那些事","/unity/2019-09-01-spriteatlas",{"title":1055,"_path":1056},"ilruntime的研究","/unity/2019-09-02-ilruntime",{"title":1058,"_path":1059},"unity的宏以及添加net框架中未引用的dll","/unity/2019-09-02-unity-reference-dll",{"title":1061,"_path":1062},"xlua注入源码解读","/unity/2019-09-03-xlua-inject",{"title":1064,"_path":1065},"如何快速的注入汇编","/unity/2019-09-04-mono.cecil-inject",{"title":1067,"_path":1068},"2D游戏视差背景的实现","/unity/2019-09-13-parallax-2d",{"title":1070,"_path":1071},"unity使用代理","/unity/2019-11-15-unity-proxy",{"title":1073,"_path":1074},"一篇文章搞定Entitas","/unity/2020-01-01-unity-entitas",{"title":1076,"_path":1077},"unity攻击范围检测的方式区别","/unity/2020-01-11-unity-attack-range-detection-type",{"title":1079,"_path":1080},"常见的2D碰撞检测","/unity/2020-01-12-collision-detection",{"title":1082,"_path":1083},"unity攻击范围检测","/unity/2020-01-13-unity-attack-detection",{"title":1085,"_path":1086},"技能系统","/unity/2020-02-15-skill-system",{"title":1088,"_path":1089},"游戏buff系统设计","/unity/2020-02-16-buff-system",{"title":1091,"_path":1092},"角色状态设计","/unity/2020-02-17-character-states",{"title":1094,"_path":1095},"理解托管堆","/unity/2020-02-18-bestpracticeunderstandingperformanceinunity",{"title":1097,"_path":1098},"理解自动内存管理","/unity/2020-02-19-understandingautomaticmemorymanagement",{"title":1100,"_path":1101},"unity 移动平台打包丢失shader的问题","/unity/2020-02-20-shader-lost",{"title":1103,"_path":1104},"Unity的调试相关","/unity/2020-03-01-unity-debug",{"title":1106,"_path":1107},"unity启动运行脚本流程","/unity/2020-03-04-unity-startup",{"title":1109,"_path":1110},"unity的坐标体系","/unity/2020-07-01-unity-coordinate",{"title":1112,"_path":1113},"2020 07 03 Unity Mesh","/unity/2020-07-03-unity-mesh",{"title":1115,"_path":1116},"unity Render Pipeline","/unity/2020-07-04-unity-render-pipeline",{"title":1118,"_path":1119},"Notch Solution","/unity/2020-08-29-notch-solution",{"title":1121,"_path":1122},"unity 项目dll检查","/unity/2020-08-30-unity-dll-check",{"title":1124,"_path":1125},"UNITY的垂直同步和帧率","/unity/2020-09-05-unity-vsynccount",{"title":1127,"_path":1128},"UNITY性能优化流程","/unity/2020-09-10-optimizing-for-performance",{"title":1130,"_path":1131},"堆栈内存Stack和堆内存Heap","/unity/2020-09-11-stack-heap",{"title":1133,"_path":1134},"unity的addressables","/unity/2020-09-12-addressables",{"title":1136,"_path":1137},"游戏中的向量使用","/unity/2020-09-13-vector",{"title":1139,"_path":1140},"UNITY ECS 详解","/unity/2020-10-15-unity-ecs",{"title":1142,"_path":1143},"UNITY JOB SYSTEM详解","/unity/2020-10-16-unity-job",{"title":1145,"_path":1146},"运行时打包图集","/unity/2020-10-17-runtime-spriteatlas",{"title":1148,"_path":1149},"unity ecs component","/unity/2020-10-18-unity-ecs-component",{"title":1151,"_path":1152},"基于 Game Object Conversion 和 SubScene 的 DOTS 开发工作流","/unity/2020-10-19-game-object-conversion-and-subscene",{"title":1154,"_path":1155},"源代码分析world的创建","/unity/2020-10-20-ecs-world",{"title":1157,"_path":1158},"unity使用platforms构建","/unity/2020-10-21-platform",{"title":1160,"_path":1161},"Unity rendering order渲染顺序","/unity/2020-10-22-unity-render-order",{"title":1163,"_path":1164},"关于静态批处理/动态批处理/GPU Instancing /SRP Batcher的详细剖析","/unity/2020-10-23-unity-optimizing-gpu",{"title":1166,"_path":1167},"unity的ScreenToWorldPoint","/unity/2020-10-24-screentoworldpoint",{"title":1169,"_path":1170},"URP性能测试","/unity/2020-10-24-unity-urp-performance",{"title":1172,"_path":1173},"如何使用Unity ECS打造Reactive System？","/unity/2020-11-11-how-to-build-reactive-systems-with-unity-ecs",{"title":1175,"_path":1176},"Unity中Sprite和UI Image的区别","/unity/2020-11-12-sprite-image-diff",{"title":1178,"_path":1179},"简单保存工具","/unity/2020-11-13-simple-save",{"title":1181,"_path":1182},"2020 11 14 Netcode","/unity/2020-11-14-netcode",{"title":1184,"_path":1185},"ecs中的parent","/unity/2020-11-15-ecs-parent",{"title":1187,"_path":1188},"ability","/unity/2020-11-16-dotssample",{"title":1190,"_path":1191},"unity world time system","/unity/2020-11-17-unity-ecs-worldtime",{"title":1193,"_path":1194},"netcode源代码解读","/unity/2020-11-18-netcode-sourcecode",{"title":1196,"_path":1197},"pitch yaw roll是什么","/unity/2020-11-29-pitch-yaw-roll",{"title":1199,"_path":1200},"A Native Collection has not been disposed, resulting in a memory leak. Allocated from:","/unity/2020-12-20-collection-has-not-been-disposed",{"title":1202,"_path":1203},"解决Unity鼠标坐标点转成世界坐标系坐标点","/unity/2021-01-24-screentoworld",{"title":1205,"_path":1206},"2021 01 25 Tilemap","/unity/2021-01-25-tilemap",{"title":1208,"_path":1209},"Unity RenderTexture的应用","/unity/2021-04-11-render-texture",{"title":1211,"_path":1212},"commandbuff的一些问题","/unity/2021-05-20-ecs-commandbuff-question",{"title":1214,"_path":1215},"How to Make One Way Platform in unity","/unity/2021-06-13-how-to-make-one-way-platform",{"title":1217,"_path":1218},"UNITY的渲染顺序","/unity/2021-06-14-unity-render-order",{"title":1220,"_path":1221},"防止变量引用丢失 FormerlySerializedAs","/unity/2021-07-20-formerlyserializedas",{"title":1223,"_path":1224},"AI-PLANNER使用","/unity/2021-08-01-ai-planner",{"title":1226,"_path":1227},"Increased script assembly reload time","/unity/2021-10-01-increased-script-assembly-reload-time",{"title":1229,"_path":1230},"关于unity的热重载的研究","/unity/2022-01-02-unity-hot-reload",{"title":1232,"_path":1233},"Editor Iteration Profiler的使用","/unity/2022-01-28-unity-editor-iteration-profiler",{"title":1235,"_path":1236},"CircleCast和Overlapple的区别是什么","/unity/2022-04-02-circlecast-overlapple-diff",{"title":1238,"_path":1239},"unity ecs的备忘录","/unity/2022-09-10-ecs-beiwang",1710779035973]