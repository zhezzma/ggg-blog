[{"data":1,"prerenderedAt":896},["Reactive",2],{"content-query-jovxMcZoTw":3,"content-navigation-8C37fagqQL":314},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":308,"_id":309,"_source":310,"_file":311,"_extension":312,"date":313},"/game/2021-06-12-edgar-code-read","game",false,"","Edgar源代码解读","生成类LevelGeneratorBase  最基本的生成方法类包括Generate和GenerateCoroutineDungeonGeneratorBase 一般都会继承于该类Generate流程创建playload,即IPipelineTask的上下文创建pipelineTask,包括三个InputTask,GeneratorTask,PostProcessingTaskPipelineRunner执行管道任务,将playload赋值给各个pipelineTask然后执行pipelinetask的Process()函数pipelineTask你可以继承LevelGeneratorBase",{"type":11,"children":12,"toc":301},"root",[13,21,63,75,123,129,163,249,255,260,266,271,280,288,293],{"type":14,"tag":15,"props":16,"children":18},"element","h3",{"id":17},"生成类",[19],{"type":20,"value":17},"text",{"type":14,"tag":22,"props":23,"children":24},"ul",{},[25,52],{"type":14,"tag":26,"props":27,"children":28},"li",{},[29,36,38,44,46],{"type":14,"tag":30,"props":31,"children":33},"code",{"className":32},[],[34],{"type":20,"value":35},"LevelGeneratorBase",{"type":20,"value":37},"  最基本的生成方法类包括",{"type":14,"tag":30,"props":39,"children":41},{"className":40},[],[42],{"type":20,"value":43},"Generate",{"type":20,"value":45},"和",{"type":14,"tag":30,"props":47,"children":49},{"className":48},[],[50],{"type":20,"value":51},"GenerateCoroutine",{"type":14,"tag":26,"props":53,"children":54},{},[55,61],{"type":14,"tag":30,"props":56,"children":58},{"className":57},[],[59],{"type":20,"value":60},"DungeonGeneratorBase",{"type":20,"value":62}," 一般都会继承于该类",{"type":14,"tag":64,"props":65,"children":67},"h4",{"id":66},"generate流程",[68,73],{"type":14,"tag":30,"props":69,"children":71},{"className":70},[],[72],{"type":20,"value":43},{"type":20,"value":74},"流程",{"type":14,"tag":76,"props":77,"children":78},"ol",{},[79,84,110],{"type":14,"tag":26,"props":80,"children":81},{},[82],{"type":20,"value":83},"创建playload,即IPipelineTask的上下文",{"type":14,"tag":26,"props":85,"children":86},{},[87,89,95,97,103,104],{"type":20,"value":88},"创建pipelineTask,包括三个",{"type":14,"tag":30,"props":90,"children":92},{"className":91},[],[93],{"type":20,"value":94},"InputTask",{"type":20,"value":96},",",{"type":14,"tag":30,"props":98,"children":100},{"className":99},[],[101],{"type":20,"value":102},"GeneratorTask",{"type":20,"value":96},{"type":14,"tag":30,"props":105,"children":107},{"className":106},[],[108],{"type":20,"value":109},"PostProcessingTask",{"type":14,"tag":26,"props":111,"children":112},{},[113,115,121],{"type":20,"value":114},"PipelineRunner执行管道任务,将playload赋值给各个pipelineTask然后执行pipelinetask的",{"type":14,"tag":30,"props":116,"children":118},{"className":117},[],[119],{"type":20,"value":120},"Process()",{"type":20,"value":122},"函数",{"type":14,"tag":64,"props":124,"children":126},{"id":125},"pipelinetask",[127],{"type":20,"value":128},"pipelineTask",{"type":14,"tag":130,"props":131,"children":132},"p",{},[133,135,140,142,148,149,155,157],{"type":20,"value":134},"你可以继承",{"type":14,"tag":30,"props":136,"children":138},{"className":137},[],[139],{"type":20,"value":35},{"type":20,"value":141},"  然后分别覆盖",{"type":14,"tag":30,"props":143,"children":145},{"className":144},[],[146],{"type":20,"value":147},"GetInputTask()",{"type":20,"value":45},{"type":14,"tag":30,"props":150,"children":152},{"className":151},[],[153],{"type":20,"value":154},"GetGeneratorTask()",{"type":20,"value":156},",还有",{"type":14,"tag":30,"props":158,"children":160},{"className":159},[],[161],{"type":20,"value":162},"GetPostProcessingTask()",{"type":14,"tag":22,"props":164,"children":165},{},[166,176,200],{"type":14,"tag":26,"props":167,"children":168},{},[169,174],{"type":14,"tag":30,"props":170,"children":172},{"className":171},[],[173],{"type":20,"value":94},{"type":20,"value":175},"   一般来说是FixedLevelGraphInputTask,主要是用来设置Payload.LevelDescription",{"type":14,"tag":26,"props":177,"children":178},{},[179,184,186,192,194],{"type":14,"tag":30,"props":180,"children":182},{"className":181},[],[183],{"type":20,"value":102},{"type":20,"value":185},"   主要是通过GraphBasedGeneratorGrid2D来设置Payload.GeneratedLevel 和 Payload.GeneratorStats,还有会实例化",{"type":14,"tag":30,"props":187,"children":189},{"className":188},[],[190],{"type":20,"value":191},"Generated Level/Room template instances",{"type":20,"value":193},"以及下面的房间,参见",{"type":14,"tag":30,"props":195,"children":197},{"className":196},[],[198],{"type":20,"value":199},"GeneratorUtils.TransformLayout",{"type":14,"tag":26,"props":201,"children":202},{},[203,208,210],{"type":14,"tag":30,"props":204,"children":206},{"className":205},[],[207],{"type":20,"value":109},{"type":20,"value":209},"  主要是根据PriorityCallbacks按照优先顺序执行回调函数,默认的回调函数,通过配置有以下",{"type":14,"tag":22,"props":211,"children":212},{},[213,224,229,234,239,244],{"type":14,"tag":26,"props":214,"children":215},{},[216,218],{"type":20,"value":217},"InitializeSharedTilemaps 即实例化",{"type":14,"tag":30,"props":219,"children":221},{"className":220},[],[222],{"type":20,"value":223},"GeneratedLevel/Tilemaps",{"type":14,"tag":26,"props":225,"children":226},{},[227],{"type":20,"value":228},"CopyTilesToSharedTilemaps 将rooms下的tile复制到SharedTilemaps 下",{"type":14,"tag":26,"props":230,"children":231},{},[232],{"type":20,"value":233},"CenterGrid 将Generated Level下的子对象设置为0,0",{"type":14,"tag":26,"props":235,"children":236},{},[237],{"type":20,"value":238},"DisableRoomTemplatesRenderers    禁用roomtemapltes下的显示",{"type":14,"tag":26,"props":240,"children":241},{},[242],{"type":20,"value":243},"DisableRoomTemplatesColliders  禁用roomtemplates下的碰撞",{"type":14,"tag":26,"props":245,"children":246},{},[247],{"type":20,"value":248},"还可以通过继承DungeonGeneratorPostProcessBase写你自己的后处理函数",{"type":14,"tag":15,"props":250,"children":252},{"id":251},"door-sockets",[253],{"type":20,"value":254},"Door sockets",{"type":14,"tag":130,"props":256,"children":257},{},[258],{"type":20,"value":259},"门锁..就是走廊和房间选中同一个锁,就能匹配的上",{"type":14,"tag":261,"props":262,"children":264},"h2",{"id":263},"对于连接处",[265],{"type":20,"value":263},{"type":14,"tag":130,"props":267,"children":268},{},[269],{"type":20,"value":270},"他会按照顺序copy到sharedtilemaps.所以,位于连接处的tile,如果后面的会覆盖前面的",{"type":14,"tag":130,"props":272,"children":273},{},[274],{"type":14,"tag":275,"props":276,"children":279},"img",{"alt":277,"src":278},"image-20210630183742467","/images/2021-06-12-edgar-code-read/image-20210630183742467.png",[],{"type":14,"tag":130,"props":281,"children":282},{},[283],{"type":14,"tag":275,"props":284,"children":287},{"alt":285,"src":286},"image-20210630183825008","/images/2021-06-12-edgar-code-read/image-20210630183825008.png",[],{"type":14,"tag":130,"props":289,"children":290},{},[291],{"type":20,"value":292},"最终的合成则是下图",{"type":14,"tag":130,"props":294,"children":295},{},[296],{"type":14,"tag":275,"props":297,"children":300},{"alt":298,"src":299},"image-20210630183914172","/images/2021-06-12-edgar-code-read/image-20210630183914172.png",[],{"title":7,"searchDepth":302,"depth":302,"links":303},2,[304,306,307],{"id":17,"depth":305,"text":17},3,{"id":251,"depth":305,"text":254},{"id":263,"depth":302,"text":263},"markdown","content:game:2021-06-12-edgar-code-read.md","content","game/2021-06-12-edgar-code-read.md","md","2021-06-12",[315,325,452,499,551,564,676],{"title":316,"_path":317,"children":318},"Art","/art",[319,322],{"title":320,"_path":321},"如何用蒙版将两个图过渡融合","/art/2020-09-03-ps-ronghe-pics",{"title":323,"_path":324},"像素画入门","/art/2022-02-02-xiangsuhuarumen",{"title":326,"_path":327,"children":328},"Dotnet","/dotnet",[329,332,335,338,341,344,347,350,353,356,359,362,365,368,371,374,377,380,383,386,389,392,395,398,401,404,407,410,413,416,419,422,425,428,431,434,437,440,443,446,449],{"title":330,"_path":331},"Linux部署dotnetcore记录","/dotnet/2019-06-05-linux-dotnet-daemon",{"title":333,"_path":334},"时间轮的引入","/dotnet/2019-10-29-time-wheel",{"title":336,"_path":337},"帧同步的相关问题","/dotnet/2019-11-01-lock-step",{"title":339,"_path":340},"状态同步的相关问题","/dotnet/2019-11-01-state-sync-npc",{"title":342,"_path":343},"状态同步--技能系统的同步机制分析","/dotnet/2019-11-02-state-sync-skill",{"title":345,"_path":346},"Creating a Quartz.NET hosted service with ASP.NET Core","/dotnet/2019-11-05-quartz",{"title":348,"_path":349},"DatetimeOffset和Datetime的区别","/dotnet/2019-12-01-datetimeoffset",{"title":351,"_path":352},"大小端字节序(Big Endian和Little Endian)","/dotnet/2020-01-05-big-little-endian",{"title":354,"_path":355},"dll文件的加载","/dotnet/2020-01-06-dll-load",{"title":357,"_path":358},"延迟补偿在C/S架构游戏协议设计和优化中的应用","/dotnet/2020-02-02-latency_compensating_methods_in_clientserver_in-game_protocol_design_and_optimization",{"title":360,"_path":361},"延迟补偿和对时的相关总结","/dotnet/2020-02-02-latency_compensating-rtt",{"title":363,"_path":364},"快节奏多人游戏同步(1)-ClientServer架构","/dotnet/2020-02-02-net-sync-client-server-game-architecture",{"title":366,"_path":367},"快节奏多人游戏同步(2)-客户端预测与服务器校对","/dotnet/2020-02-02-net-sync-client-side-prediction-and-server-reconciliation",{"title":369,"_path":370},"快节奏多人游戏同步(3)-Entity插值","/dotnet/2020-02-02-net-sync-entity-interpolation",{"title":372,"_path":373},"快节奏多人游戏同步(4)-延时补偿","/dotnet/2020-02-02-net-sync-lag-compensation",{"title":375,"_path":376},"守望先锋等FPS游戏的网络同步","/dotnet/2020-02-02-overwatch-a-guide-to-understanding-netcode",{"title":378,"_path":379},"起源引擎网络同步模型","/dotnet/2020-02-02-source_multiplayer_networking",{"title":381,"_path":382},"orleans的部署模式","/dotnet/2020-02-03-orleans-deployment",{"title":384,"_path":385},"一致性hash算法","/dotnet/2020-02-06-consistent_hash",{"title":387,"_path":388},"地图的aoi","/dotnet/2020-02-07-aoi",{"title":390,"_path":391},"游戏的匹配机制ELO","/dotnet/2020-02-09-room-elo",{"title":393,"_path":394},"C# 深浅复制","/dotnet/2020-02-10-icloneable",{"title":396,"_path":397},"C#引用类型对象在循环引用时会不会内存泄漏","/dotnet/2020-02-11-gc",{"title":399,"_path":400},"扒一扒.net、.net framework、mono和Unity","/dotnet/2020-02-12-netcore-mono-netframework",{"title":402,"_path":403},"c#编译和运行启动原理","/dotnet/2020-02-13-csharp-run",{"title":405,"_path":406},"abp新建项目指南","/dotnet/2020-05-29-abp-start",{"title":408,"_path":409},"2020 06 11 IdentityServer Use","/dotnet/2020-06-11-identityserver-use",{"title":411,"_path":412},"关于abp的用户的一些问题","/dotnet/2020-07-05-abp-database-user",{"title":414,"_path":415},"abp的dOC模块使用","/dotnet/2020-07-10-abp-doc",{"title":417,"_path":418},"abp默认语言规则","/dotnet/2020-07-15-abp-default-language",{"title":420,"_path":421},"Orleans 最佳实践","/dotnet/2020-08-09-orleans-best-practices",{"title":423,"_path":424},"c#特性参数","/dotnet/2020-08-10-param-attribute",{"title":426,"_path":427},".NET Core 获取 HttpContext.Current 以及 AsyncLocal 与 ThreadLocal","/dotnet/2020-08-11-httpcontextaccessor-asynclocal",{"title":429,"_path":430},"Kestrel源码分析","/dotnet/2020-08-15-kestrel-source-code",{"title":432,"_path":433},"ConcurrentDictionary并发字典","/dotnet/2020-08-16-concurrentdictionary",{"title":435,"_path":436},"IOptions、IOptionsMonitor以及IOptionsSnapshot","/dotnet/2020-08-17-netcore-options",{"title":438,"_path":439},".NET Core/Framework 创建委托以大幅度提高反射调用的性能","/dotnet/2020-11-13-reflection-method",{"title":441,"_path":442},"C＃枚举中使用Flags特性","/dotnet/2020-11-24-flags",{"title":444,"_path":445},"谷歌浏览器下netcore登录失败问题","/dotnet/2020-12-11-chrome-login-fail",{"title":447,"_path":448},"Converting between Structs and Byte Arrays","/dotnet/2021-05-01-converting-between-structs-and-byte-arrays",{"title":450,"_path":451},"c#在重写object中的Equal方法时需要对GetHashCode进行重写（Dictionary引用）","/dotnet/2022-08-15-equal-hashcode",{"title":453,"_path":454,"children":455},"Game","/game",[456,459,462,465,468,471,472,475,478,481,484,487,490,493,496],{"title":457,"_path":458},"使用柏林噪声算法生成地图","/game/2021-01-20-perlin-map",{"title":460,"_path":461},"波函数坍塌算法生成地图","/game/2021-01-21-wave-collapse-function",{"title":463,"_path":464},"文明6地图生成算法","/game/2021-01-22-civ-map",{"title":466,"_path":467},"roguelike地牢生成算法","/game/2021-01-23-roguelike-map",{"title":469,"_path":470},"Spelunky关卡生成","/game/2021-01-23-spelunky-map",{"title":8,"_path":4},{"title":473,"_path":474},"rpgbuild的一些备注","/game/2021-06-15-rpgbuilder",{"title":476,"_path":477},"游戏人物设计","/game/2021-08-05-game-task-design",{"title":479,"_path":480},"unity gameplay ability源代码解析","/game/2021-12-14-untiy-gameplay-ablility-sourcecode",{"title":482,"_path":483},"苟与剑游戏技能分析","/game/2021-12-21-gyj-skill",{"title":485,"_path":486},"quest machine 使用相关","/game/2022-02-19-quest-machine",{"title":488,"_path":489},"苟与剑中的单位生成方式","/game/2022-03-16-gyj-map",{"title":491,"_path":492},"ecs中实体创建方法","/game/2022-08-03-ecs",{"title":494,"_path":495},"暗黑2怪物等级和掉落规则","/game/2022-08-05-dia2",{"title":497,"_path":498},"行为树源代码解析","/game/2022-08-21-behavior-tree-source-code",{"title":500,"_path":501,"children":502},"Gyj","/gyj",[503,506,509,512,515,518,521,524,527,530,533,536,539,542,545,548],{"title":504,"_path":505},"美术要求","/gyj/2022-06-11-meishuyaoqiu",{"title":507,"_path":508},"游戏基础知识","/gyj/2022-06-12-jichuzhishi",{"title":510,"_path":511},"2022 08 22 地图房间的种类","/gyj/2022-08-22-detufangjiandezhonglei",{"title":513,"_path":514},"2022 08 22 奇遇事件","/gyj/2022-08-22-qiyushijian",{"title":516,"_path":517},"游戏流程","/gyj/2022-08-22-youxiliucheng",{"title":519,"_path":520},"物品产出表","/gyj/2022-08-22-wupinchanchubiao",{"title":522,"_path":523},"玩法","/gyj/2022-08-22-wanfa",{"title":525,"_path":526},"初入江湖","/gyj/2022-08-22-diyizhang",{"title":528,"_path":529},"2022 08 22 职业与工作","/gyj/2022-08-22-zhiyeyugongzuo",{"title":531,"_path":532},"天下霸图研究","/gyj/2022-11-01-tianxiabatu",{"title":534,"_path":535},"流放之路关于伤害公式和技能的分析","/gyj/2022-11-17-liufangzhilu",{"title":537,"_path":538},"门派内容相关","/gyj/2022-11-17-sect",{"title":540,"_path":541},"2022 12 01 养殖","/gyj/2022-12-01-yangzhi",{"title":543,"_path":544},"种植","/gyj/2022-12-01-zhongzhi",{"title":546,"_path":547},"人物属性设计","/gyj/2022-12-15-renwushuxing",{"title":549,"_path":550},"跑商","/gyj/2023-11-01-paoshang",{"title":552,"_path":553,"children":554},"Js","/js",[555,558,561],{"title":556,"_path":557},"如何在TypeScript中使用JS类库","/js/2022-02-12-typescript-use-js",{"title":559,"_path":560},"nuxt3项目初始化失败","/js/2023-05-16-nuxt3-init-fail",{"title":562,"_path":563},"Flex 布局使用","/js/2024-03-17-flex-use",{"title":565,"_path":566,"children":567},"Tool","/tool",[568,571,574,577,580,583,586,589,592,595,598,601,604,607,610,613,616,619,622,625,628,631,634,637,640,643,646,649,652,655,658,661,664,667,670,673],{"title":569,"_path":570},"windows发送到手机Ftp","/tool/2019-06-20-windows-send-to-ftp",{"title":572,"_path":573},"windows特殊目录修复","/tool/2019-06-24-shell-folders-are-displayed-with-the-standard-folder-icon-in-windows",{"title":575,"_path":576},"scourcetree  总是需要输入密码","/tool/2019-08-07-sourcetree-git-password",{"title":578,"_path":579},"powershell 常用命令","/tool/2019-08-10-powershell-command",{"title":581,"_path":582},"scoop的使用","/tool/2019-08-20-scoop-use",{"title":584,"_path":585},"使用配置文件来管理NuGet包版本F","/tool/2019-09-02-nuget-manager",{"title":587,"_path":588},"Redis的两种持久化RDB和AOF","/tool/2019-09-02-redis-aof-rdb",{"title":590,"_path":591},"使用 SSH 登陆谷歌云 root 或者 普通账户的方法","/tool/2020-01-02-google-clound-local-login",{"title":593,"_path":594},"CentOS 下安装Shadowsocks 搭建ss","/tool/2020-01-12-centosn-ss-install",{"title":596,"_path":597},"mac下brew 使用","/tool/2020-01-13-brew",{"title":599,"_path":600},"术语中英文对照","/tool/2020-02-05-game_en_zh",{"title":602,"_path":603},"Excel中以文本形式存储的数字","/tool/2020-02-06-excel-text-number",{"title":605,"_path":606},"protobuf序列化的一些问题","/tool/2020-03-25-protobuf-empty-collections",{"title":608,"_path":609},"为博客将 RSS 转为邮件订阅","/tool/2020-06-26-blog-mail-sub",{"title":611,"_path":612},"github下载代码的速度太慢","/tool/2020-06-27-linux-github-slow",{"title":614,"_path":615},"win10开始菜单添加软件以及备份和恢复","/tool/2020-07-02-win10-start-menu",{"title":617,"_path":618},"gitbook的使用","/tool/2020-07-06-gitbook-use",{"title":620,"_path":621},"github actions 简单使用","/tool/2020-07-11-github-actions",{"title":623,"_path":624},"使用hexo建立博客并部署到github","/tool/2020-07-12-hexo-github",{"title":626,"_path":627},"终端下设置代理","/tool/2020-07-13-terminal-proxy",{"title":629,"_path":630},"发现nuget包太占用C盘，怎么办？","/tool/2020-08-30-nuget-is-big",{"title":632,"_path":633},"unity商店下载资源迁移","/tool/2020-11-15-unity-is-big",{"title":635,"_path":636},"关于coding的pages介绍","/tool/2020-11-16-coding-pages",{"title":638,"_path":639},"一些常用的dns服务器","/tool/2021-05-06-dns",{"title":641,"_path":642},"UE4素材破解","/tool/2021-11-06-ue4-view",{"title":644,"_path":645},"安装cockpit通过nginx代理访问","/tool/2021-11-07-cockpit-linux",{"title":647,"_path":648},"Windows LTSC、LTSB、Server 安装 Windows Store 应用商店 ","/tool/2021-11-15-install-windowsstore",{"title":650,"_path":651},"我是如何把 VS Code 插件启动速度从 8 秒减少到 1 秒 ","/tool/2021-12-02-vscode-plugins-big",{"title":653,"_path":654},"云效部署hexo到自己的主机 ","/tool/2021-12-11-yunxiao-liushuixian-hexo",{"title":656,"_path":657},"github 怎么合并原始分支？ ","/tool/2021-12-12-github-sync",{"title":659,"_path":660},"code server安装制作online ide","/tool/2022-01-30-code-server",{"title":662,"_path":663},"rider的使用","/tool/2022-08-02-rider-use",{"title":665,"_path":666},"2022 08 09 Amd Over","/tool/2022-08-09-amd-over",{"title":668,"_path":669},"rider破解","/tool/2022-11-19-rider-po-jie",{"title":671,"_path":672},"stable diffusion install","/tool/2023-01-20-stable-diffusion-install",{"title":674,"_path":675},"CGI, FastCGI, WSGI, uWSGI, uwsgi一文搞懂","/tool/2023-02-15-cgi-fastcgi-wsgi-uswgi",{"title":677,"_path":678,"children":679},"Unity","/unity",[680,683,686,689,692,695,698,701,704,707,710,713,716,719,722,725,728,731,734,737,740,743,746,749,752,755,758,761,764,767,770,773,776,779,782,785,788,791,794,797,800,803,806,809,812,815,818,821,824,827,830,833,836,839,842,845,848,851,854,857,860,863,866,869,872,875,878,881,884,887,890,893],{"title":681,"_path":682},"Unity 导出 Android 64-bit 版本","/unity/2019-06-20-unity-android-x64",{"title":684,"_path":685},"Unity的il2cpp","/unity/2019-06-20-unity-il2cpp-debugger",{"title":687,"_path":688},"googlePlay 发布问题","/unity/2019-06-23-googlplay-pulish",{"title":690,"_path":691},"关于unity的适配问题","/unity/2019-08-09-unity2d-shipei",{"title":693,"_path":694},"一次精通 RectTransform","/unity/2019-08-10-ugui-recttransform",{"title":696,"_path":697},"一次精通 eventmanager","/unity/2019-08-11-ugui-eventmanager",{"title":699,"_path":700},"ugui的eventsystem源码解读","/unity/2019-08-12-ugui-eventsystem-sourcecode",{"title":702,"_path":703},"Unity Raycasters 剖析","/unity/2019-08-12-ugui-raycasters",{"title":705,"_path":706},"关于addressable那些事","/unity/2019-09-01-addressable",{"title":708,"_path":709},"关于spriteAtlas打包那些事","/unity/2019-09-01-spriteatlas",{"title":711,"_path":712},"ilruntime的研究","/unity/2019-09-02-ilruntime",{"title":714,"_path":715},"unity的宏以及添加net框架中未引用的dll","/unity/2019-09-02-unity-reference-dll",{"title":717,"_path":718},"xlua注入源码解读","/unity/2019-09-03-xlua-inject",{"title":720,"_path":721},"如何快速的注入汇编","/unity/2019-09-04-mono.cecil-inject",{"title":723,"_path":724},"2D游戏视差背景的实现","/unity/2019-09-13-parallax-2d",{"title":726,"_path":727},"unity使用代理","/unity/2019-11-15-unity-proxy",{"title":729,"_path":730},"一篇文章搞定Entitas","/unity/2020-01-01-unity-entitas",{"title":732,"_path":733},"unity攻击范围检测的方式区别","/unity/2020-01-11-unity-attack-range-detection-type",{"title":735,"_path":736},"常见的2D碰撞检测","/unity/2020-01-12-collision-detection",{"title":738,"_path":739},"unity攻击范围检测","/unity/2020-01-13-unity-attack-detection",{"title":741,"_path":742},"技能系统","/unity/2020-02-15-skill-system",{"title":744,"_path":745},"游戏buff系统设计","/unity/2020-02-16-buff-system",{"title":747,"_path":748},"角色状态设计","/unity/2020-02-17-character-states",{"title":750,"_path":751},"理解托管堆","/unity/2020-02-18-bestpracticeunderstandingperformanceinunity",{"title":753,"_path":754},"理解自动内存管理","/unity/2020-02-19-understandingautomaticmemorymanagement",{"title":756,"_path":757},"unity 移动平台打包丢失shader的问题","/unity/2020-02-20-shader-lost",{"title":759,"_path":760},"Unity的调试相关","/unity/2020-03-01-unity-debug",{"title":762,"_path":763},"unity启动运行脚本流程","/unity/2020-03-04-unity-startup",{"title":765,"_path":766},"unity的坐标体系","/unity/2020-07-01-unity-coordinate",{"title":768,"_path":769},"2020 07 03 Unity Mesh","/unity/2020-07-03-unity-mesh",{"title":771,"_path":772},"unity Render Pipeline","/unity/2020-07-04-unity-render-pipeline",{"title":774,"_path":775},"Notch Solution","/unity/2020-08-29-notch-solution",{"title":777,"_path":778},"unity 项目dll检查","/unity/2020-08-30-unity-dll-check",{"title":780,"_path":781},"UNITY的垂直同步和帧率","/unity/2020-09-05-unity-vsynccount",{"title":783,"_path":784},"UNITY性能优化流程","/unity/2020-09-10-optimizing-for-performance",{"title":786,"_path":787},"堆栈内存Stack和堆内存Heap","/unity/2020-09-11-stack-heap",{"title":789,"_path":790},"unity的addressables","/unity/2020-09-12-addressables",{"title":792,"_path":793},"游戏中的向量使用","/unity/2020-09-13-vector",{"title":795,"_path":796},"UNITY ECS 详解","/unity/2020-10-15-unity-ecs",{"title":798,"_path":799},"UNITY JOB SYSTEM详解","/unity/2020-10-16-unity-job",{"title":801,"_path":802},"运行时打包图集","/unity/2020-10-17-runtime-spriteatlas",{"title":804,"_path":805},"unity ecs component","/unity/2020-10-18-unity-ecs-component",{"title":807,"_path":808},"基于 Game Object Conversion 和 SubScene 的 DOTS 开发工作流","/unity/2020-10-19-game-object-conversion-and-subscene",{"title":810,"_path":811},"源代码分析world的创建","/unity/2020-10-20-ecs-world",{"title":813,"_path":814},"unity使用platforms构建","/unity/2020-10-21-platform",{"title":816,"_path":817},"Unity rendering order渲染顺序","/unity/2020-10-22-unity-render-order",{"title":819,"_path":820},"关于静态批处理/动态批处理/GPU Instancing /SRP Batcher的详细剖析","/unity/2020-10-23-unity-optimizing-gpu",{"title":822,"_path":823},"unity的ScreenToWorldPoint","/unity/2020-10-24-screentoworldpoint",{"title":825,"_path":826},"URP性能测试","/unity/2020-10-24-unity-urp-performance",{"title":828,"_path":829},"如何使用Unity ECS打造Reactive System？","/unity/2020-11-11-how-to-build-reactive-systems-with-unity-ecs",{"title":831,"_path":832},"Unity中Sprite和UI Image的区别","/unity/2020-11-12-sprite-image-diff",{"title":834,"_path":835},"简单保存工具","/unity/2020-11-13-simple-save",{"title":837,"_path":838},"2020 11 14 Netcode","/unity/2020-11-14-netcode",{"title":840,"_path":841},"ecs中的parent","/unity/2020-11-15-ecs-parent",{"title":843,"_path":844},"ability","/unity/2020-11-16-dotssample",{"title":846,"_path":847},"unity world time system","/unity/2020-11-17-unity-ecs-worldtime",{"title":849,"_path":850},"netcode源代码解读","/unity/2020-11-18-netcode-sourcecode",{"title":852,"_path":853},"pitch yaw roll是什么","/unity/2020-11-29-pitch-yaw-roll",{"title":855,"_path":856},"A Native Collection has not been disposed, resulting in a memory leak. Allocated from:","/unity/2020-12-20-collection-has-not-been-disposed",{"title":858,"_path":859},"解决Unity鼠标坐标点转成世界坐标系坐标点","/unity/2021-01-24-screentoworld",{"title":861,"_path":862},"2021 01 25 Tilemap","/unity/2021-01-25-tilemap",{"title":864,"_path":865},"Unity RenderTexture的应用","/unity/2021-04-11-render-texture",{"title":867,"_path":868},"commandbuff的一些问题","/unity/2021-05-20-ecs-commandbuff-question",{"title":870,"_path":871},"How to Make One Way Platform in unity","/unity/2021-06-13-how-to-make-one-way-platform",{"title":873,"_path":874},"UNITY的渲染顺序","/unity/2021-06-14-unity-render-order",{"title":876,"_path":877},"防止变量引用丢失 FormerlySerializedAs","/unity/2021-07-20-formerlyserializedas",{"title":879,"_path":880},"AI-PLANNER使用","/unity/2021-08-01-ai-planner",{"title":882,"_path":883},"Increased script assembly reload time","/unity/2021-10-01-increased-script-assembly-reload-time",{"title":885,"_path":886},"关于unity的热重载的研究","/unity/2022-01-02-unity-hot-reload",{"title":888,"_path":889},"Editor Iteration Profiler的使用","/unity/2022-01-28-unity-editor-iteration-profiler",{"title":891,"_path":892},"CircleCast和Overlapple的区别是什么","/unity/2022-04-02-circlecast-overlapple-diff",{"title":894,"_path":895},"unity ecs的备忘录","/unity/2022-09-10-ecs-beiwang",1710779036486]