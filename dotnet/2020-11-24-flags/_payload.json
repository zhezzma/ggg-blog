[{"data":1,"prerenderedAt":786},["Reactive",2],{"content-query-1DANMv0Tnv":3,"content-navigation-8C37fagqQL":204},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":198,"_id":199,"_source":200,"_file":201,"_extension":202,"date":203},"/dotnet/2020-11-24-flags","dotnet",false,"","C＃枚举中使用Flags特性","假如有类型 Show 的定义如下十進位表示法\n[Flags]\nenum Days\n{\n    None      = 0,  // 0000 0000\n    Sunday    = 1,  // 0000 0001\n    Monday    = 2,  // 0000 0010\n    Tuesday   = 4,  // 0000 0100\n    Wednesday = 8,  // 0000 1000\n    Thursday  = 16, // 0001 0000\n    Friday    = 32, // 0010 0000\n    Saturday  = 64  // 010",{"type":11,"children":12,"toc":191},"root",[13,21,31,56,63,68,79,88,94,103,111,117,126,134,142,148,157,162,170,183],{"type":14,"tag":15,"props":16,"children":17},"element","p",{},[18],{"type":19,"value":20},"text","假如有类型 Show 的定义如下",{"type":14,"tag":22,"props":23,"children":25},"pre",{"code":24},"十進位表示法\n[Flags]\nenum Days\n{\n    None      = 0,  // 0000 0000\n    Sunday    = 1,  // 0000 0001\n    Monday    = 2,  // 0000 0010\n    Tuesday   = 4,  // 0000 0100\n    Wednesday = 8,  // 0000 1000\n    Thursday  = 16, // 0001 0000\n    Friday    = 32, // 0010 0000\n    Saturday  = 64  // 0100 0000\n}\n位元移位表示法\n[Flags]\nenum Days\n{\n    None      = 0,      // 0000 0000\n    Sunday    = 1 \u003C\u003C 0, // 0000 0001\n    Monday    = 1 \u003C\u003C 1, // 0000 0010\n    Tuesday   = 1 \u003C\u003C 2, // 0000 0100\n    Wednesday = 1 \u003C\u003C 3, // 0000 1000\n    Thursday  = 1 \u003C\u003C 4, // 0001 0000\n    Friday    = 1 \u003C\u003C 5, // 0010 0000\n    Saturday  = 1 \u003C\u003C 6  // 0100 0000\n}\n二進位表示法 (C# 7.2新增)\n[Flags]\nenum Days\n{\n    None      = 0b_0000_0000, // 0000 0000\n    Sunday    = 0b_0000_0001, // 0000 0001\n    Monday    = 0b_0000_0010, // 0000 0010\n    Tuesday   = 0b_0000_0100, // 0000 0100\n    Wednesday = 0b_0000_1000, // 0000 1000\n    Thursday  = 0b_0001_0000, // 0001 0000\n    Friday    = 0b_0010_0000, // 0010 0000\n    Saturday  = 0b_0100_0000  // 0100 0000\n}\n \n十六進位表示法\n[Flags]\nenum RenderType\n{\n   None = 0x0,\n   DataUri = 0x1,\n   GZip = 0x2,\n   ContentPage = 0x4,\n   ViewPage = 0x8,\n   HomePage = 0x10 // Next two values could be 0x20, 0x40\n}\n",[26],{"type":14,"tag":27,"props":28,"children":29},"code",{"__ignoreMap":7},[30],{"type":19,"value":24},{"type":14,"tag":32,"props":33,"children":34},"ul",{},[35,41,46,51],{"type":14,"tag":36,"props":37,"children":38},"li",{},[39],{"type":19,"value":40},"& 按位与",{"type":14,"tag":36,"props":42,"children":43},{},[44],{"type":19,"value":45},"| 按位或",{"type":14,"tag":36,"props":47,"children":48},{},[49],{"type":19,"value":50},"^ 按位异或",{"type":14,"tag":36,"props":52,"children":53},{},[54],{"type":19,"value":55},"~取反",{"type":14,"tag":57,"props":58,"children":60},"h2",{"id":59},"并集-添加",[61],{"type":19,"value":62},"并集 (添加)",{"type":14,"tag":15,"props":64,"children":65},{},[66],{"type":19,"value":67},"a|b: 并集(所有的和,相同部分只算一次);",{"type":14,"tag":22,"props":69,"children":74},{"code":70,"language":71,"meta":7,"className":72},">>> A = {'数学','语文','英语','物理','化学','生物'}\n>>> B = {'数学','语文','英语','政治','地理','历史'}\n>>> A | B\n{'英语', '物理', '语文', '政治', '化学', '数学', '生物', '地理', '历史'}\n","swift",[73],"language-swift",[75],{"type":14,"tag":27,"props":76,"children":77},{"__ignoreMap":7},[78],{"type":19,"value":70},{"type":14,"tag":15,"props":80,"children":81},{},[82],{"type":14,"tag":83,"props":84,"children":87},"img",{"alt":85,"src":86},"image-20210404182659146","/images/2020-11-24-flags/image-20210404182659146.png",[],{"type":14,"tag":57,"props":89,"children":91},{"id":90},"差集-去除",[92],{"type":19,"value":93},"差集 (去除)",{"type":14,"tag":22,"props":95,"children":98},{"code":96,"language":71,"meta":7,"className":97},">>> A = {'数学','语文','英语','物理','化学','生物'}\n>>> B = {'数学','语文','英语','政治','地理','历史'}\n>>> A & (~B)\n{'物理', '生物', '化学'}\n>>> B & (~A)\n{'政治', '历史', '地理'}\n  \n",[73],[99],{"type":14,"tag":27,"props":100,"children":101},{"__ignoreMap":7},[102],{"type":19,"value":96},{"type":14,"tag":15,"props":104,"children":105},{},[106],{"type":14,"tag":83,"props":107,"children":110},{"alt":108,"src":109},"image-20210404182718872","/images/2020-11-24-flags/image-20210404182718872.png",[],{"type":14,"tag":57,"props":112,"children":114},{"id":113},"补集对称差集",[115],{"type":19,"value":116},"补集(对称差集)",{"type":14,"tag":22,"props":118,"children":121},{"code":119,"language":71,"meta":7,"className":120},">>> A = {'数学','语文','英语','物理','化学','生物'}\n>>> B = {'数学','语文','英语','政治','地理','历史'}\n>>> A ^ B\n{'物理', '生物', '化学', '政治', '历史', '地理'}\n",[73],[122],{"type":14,"tag":27,"props":123,"children":124},{"__ignoreMap":7},[125],{"type":19,"value":119},{"type":14,"tag":15,"props":127,"children":128},{},[129],{"type":14,"tag":83,"props":130,"children":133},{"alt":131,"src":132},"image-20210404182742701","/images/2020-11-24-flags/image-20210404182742701.png",[],{"type":14,"tag":15,"props":135,"children":136},{},[137],{"type":14,"tag":83,"props":138,"children":141},{"alt":139,"src":140},"image-20210404182802570","/images/2020-11-24-flags/image-20210404182802570.png",[],{"type":14,"tag":57,"props":143,"children":145},{"id":144},"交集-检查",[146],{"type":19,"value":147},"交集  (检查)",{"type":14,"tag":22,"props":149,"children":152},{"code":150,"language":71,"meta":7,"className":151},">>> A = {'数学','语文','英语','物理','化学','生物'}\n>>> B = {'数学','语文','英语','政治','地理','历史'}\n>>> A & B\n{'英语', '语文', '数学'}\n",[73],[153],{"type":14,"tag":27,"props":154,"children":155},{"__ignoreMap":7},[156],{"type":19,"value":150},{"type":14,"tag":15,"props":158,"children":159},{},[160],{"type":19,"value":161},"或者",{"type":14,"tag":22,"props":163,"children":165},{"code":164},"  Show show = Show.A | Show.B;\n  show.HasFlag(Show.A);\n",[166],{"type":14,"tag":27,"props":167,"children":168},{"__ignoreMap":7},[169],{"type":19,"value":164},{"type":14,"tag":15,"props":171,"children":172},{},[173,175,181],{"type":19,"value":174},"从性能上看通过 ",{"type":14,"tag":27,"props":176,"children":178},{"className":177},[],[179],{"type":19,"value":180},"&",{"type":19,"value":182}," 的性能会比 HasFlag 高，但是从可读性上 HasFlag 更友好，如果你的代码没有性能问题推荐使用 HasFlag 方法",{"type":14,"tag":15,"props":184,"children":185},{},[186],{"type":14,"tag":83,"props":187,"children":190},{"alt":188,"src":189},"image-20210404182612251","/images/2020-11-24-flags/image-20210404182612251.png",[],{"title":7,"searchDepth":192,"depth":192,"links":193},2,[194,195,196,197],{"id":59,"depth":192,"text":62},{"id":90,"depth":192,"text":93},{"id":113,"depth":192,"text":116},{"id":144,"depth":192,"text":147},"markdown","content:dotnet:2020-11-24-flags.md","content","dotnet/2020-11-24-flags.md","md","2020-11-24",[205,215,340,389,441,454,566],{"title":206,"_path":207,"children":208},"Art","/art",[209,212],{"title":210,"_path":211},"如何用蒙版将两个图过渡融合","/art/2020-09-03-ps-ronghe-pics",{"title":213,"_path":214},"像素画入门","/art/2022-02-02-xiangsuhuarumen",{"title":216,"_path":217,"children":218},"Dotnet","/dotnet",[219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,331,334,337],{"title":220,"_path":221},"Linux部署dotnetcore记录","/dotnet/2019-06-05-linux-dotnet-daemon",{"title":223,"_path":224},"时间轮的引入","/dotnet/2019-10-29-time-wheel",{"title":226,"_path":227},"帧同步的相关问题","/dotnet/2019-11-01-lock-step",{"title":229,"_path":230},"状态同步的相关问题","/dotnet/2019-11-01-state-sync-npc",{"title":232,"_path":233},"状态同步--技能系统的同步机制分析","/dotnet/2019-11-02-state-sync-skill",{"title":235,"_path":236},"Creating a Quartz.NET hosted service with ASP.NET Core","/dotnet/2019-11-05-quartz",{"title":238,"_path":239},"DatetimeOffset和Datetime的区别","/dotnet/2019-12-01-datetimeoffset",{"title":241,"_path":242},"大小端字节序(Big Endian和Little Endian)","/dotnet/2020-01-05-big-little-endian",{"title":244,"_path":245},"dll文件的加载","/dotnet/2020-01-06-dll-load",{"title":247,"_path":248},"延迟补偿在C/S架构游戏协议设计和优化中的应用","/dotnet/2020-02-02-latency_compensating_methods_in_clientserver_in-game_protocol_design_and_optimization",{"title":250,"_path":251},"延迟补偿和对时的相关总结","/dotnet/2020-02-02-latency_compensating-rtt",{"title":253,"_path":254},"快节奏多人游戏同步(1)-ClientServer架构","/dotnet/2020-02-02-net-sync-client-server-game-architecture",{"title":256,"_path":257},"快节奏多人游戏同步(2)-客户端预测与服务器校对","/dotnet/2020-02-02-net-sync-client-side-prediction-and-server-reconciliation",{"title":259,"_path":260},"快节奏多人游戏同步(3)-Entity插值","/dotnet/2020-02-02-net-sync-entity-interpolation",{"title":262,"_path":263},"快节奏多人游戏同步(4)-延时补偿","/dotnet/2020-02-02-net-sync-lag-compensation",{"title":265,"_path":266},"守望先锋等FPS游戏的网络同步","/dotnet/2020-02-02-overwatch-a-guide-to-understanding-netcode",{"title":268,"_path":269},"起源引擎网络同步模型","/dotnet/2020-02-02-source_multiplayer_networking",{"title":271,"_path":272},"orleans的部署模式","/dotnet/2020-02-03-orleans-deployment",{"title":274,"_path":275},"一致性hash算法","/dotnet/2020-02-06-consistent_hash",{"title":277,"_path":278},"地图的aoi","/dotnet/2020-02-07-aoi",{"title":280,"_path":281},"游戏的匹配机制ELO","/dotnet/2020-02-09-room-elo",{"title":283,"_path":284},"C# 深浅复制","/dotnet/2020-02-10-icloneable",{"title":286,"_path":287},"C#引用类型对象在循环引用时会不会内存泄漏","/dotnet/2020-02-11-gc",{"title":289,"_path":290},"扒一扒.net、.net framework、mono和Unity","/dotnet/2020-02-12-netcore-mono-netframework",{"title":292,"_path":293},"c#编译和运行启动原理","/dotnet/2020-02-13-csharp-run",{"title":295,"_path":296},"abp新建项目指南","/dotnet/2020-05-29-abp-start",{"title":298,"_path":299},"2020 06 11 IdentityServer Use","/dotnet/2020-06-11-identityserver-use",{"title":301,"_path":302},"关于abp的用户的一些问题","/dotnet/2020-07-05-abp-database-user",{"title":304,"_path":305},"abp的dOC模块使用","/dotnet/2020-07-10-abp-doc",{"title":307,"_path":308},"abp默认语言规则","/dotnet/2020-07-15-abp-default-language",{"title":310,"_path":311},"Orleans 最佳实践","/dotnet/2020-08-09-orleans-best-practices",{"title":313,"_path":314},"c#特性参数","/dotnet/2020-08-10-param-attribute",{"title":316,"_path":317},".NET Core 获取 HttpContext.Current 以及 AsyncLocal 与 ThreadLocal","/dotnet/2020-08-11-httpcontextaccessor-asynclocal",{"title":319,"_path":320},"Kestrel源码分析","/dotnet/2020-08-15-kestrel-source-code",{"title":322,"_path":323},"ConcurrentDictionary并发字典","/dotnet/2020-08-16-concurrentdictionary",{"title":325,"_path":326},"IOptions、IOptionsMonitor以及IOptionsSnapshot","/dotnet/2020-08-17-netcore-options",{"title":328,"_path":329},".NET Core/Framework 创建委托以大幅度提高反射调用的性能","/dotnet/2020-11-13-reflection-method",{"title":8,"_path":4},{"title":332,"_path":333},"谷歌浏览器下netcore登录失败问题","/dotnet/2020-12-11-chrome-login-fail",{"title":335,"_path":336},"Converting between Structs and Byte Arrays","/dotnet/2021-05-01-converting-between-structs-and-byte-arrays",{"title":338,"_path":339},"c#在重写object中的Equal方法时需要对GetHashCode进行重写（Dictionary引用）","/dotnet/2022-08-15-equal-hashcode",{"title":341,"_path":342,"children":343},"Game","/game",[344,347,350,353,356,359,362,365,368,371,374,377,380,383,386],{"title":345,"_path":346},"使用柏林噪声算法生成地图","/game/2021-01-20-perlin-map",{"title":348,"_path":349},"波函数坍塌算法生成地图","/game/2021-01-21-wave-collapse-function",{"title":351,"_path":352},"文明6地图生成算法","/game/2021-01-22-civ-map",{"title":354,"_path":355},"roguelike地牢生成算法","/game/2021-01-23-roguelike-map",{"title":357,"_path":358},"Spelunky关卡生成","/game/2021-01-23-spelunky-map",{"title":360,"_path":361},"Edgar源代码解读","/game/2021-06-12-edgar-code-read",{"title":363,"_path":364},"rpgbuild的一些备注","/game/2021-06-15-rpgbuilder",{"title":366,"_path":367},"游戏人物设计","/game/2021-08-05-game-task-design",{"title":369,"_path":370},"unity gameplay ability源代码解析","/game/2021-12-14-untiy-gameplay-ablility-sourcecode",{"title":372,"_path":373},"苟与剑游戏技能分析","/game/2021-12-21-gyj-skill",{"title":375,"_path":376},"quest machine 使用相关","/game/2022-02-19-quest-machine",{"title":378,"_path":379},"苟与剑中的单位生成方式","/game/2022-03-16-gyj-map",{"title":381,"_path":382},"ecs中实体创建方法","/game/2022-08-03-ecs",{"title":384,"_path":385},"暗黑2怪物等级和掉落规则","/game/2022-08-05-dia2",{"title":387,"_path":388},"行为树源代码解析","/game/2022-08-21-behavior-tree-source-code",{"title":390,"_path":391,"children":392},"Gyj","/gyj",[393,396,399,402,405,408,411,414,417,420,423,426,429,432,435,438],{"title":394,"_path":395},"美术要求","/gyj/2022-06-11-meishuyaoqiu",{"title":397,"_path":398},"游戏基础知识","/gyj/2022-06-12-jichuzhishi",{"title":400,"_path":401},"2022 08 22 地图房间的种类","/gyj/2022-08-22-detufangjiandezhonglei",{"title":403,"_path":404},"2022 08 22 奇遇事件","/gyj/2022-08-22-qiyushijian",{"title":406,"_path":407},"游戏流程","/gyj/2022-08-22-youxiliucheng",{"title":409,"_path":410},"物品产出表","/gyj/2022-08-22-wupinchanchubiao",{"title":412,"_path":413},"玩法","/gyj/2022-08-22-wanfa",{"title":415,"_path":416},"初入江湖","/gyj/2022-08-22-diyizhang",{"title":418,"_path":419},"2022 08 22 职业与工作","/gyj/2022-08-22-zhiyeyugongzuo",{"title":421,"_path":422},"天下霸图研究","/gyj/2022-11-01-tianxiabatu",{"title":424,"_path":425},"流放之路关于伤害公式和技能的分析","/gyj/2022-11-17-liufangzhilu",{"title":427,"_path":428},"门派内容相关","/gyj/2022-11-17-sect",{"title":430,"_path":431},"2022 12 01 养殖","/gyj/2022-12-01-yangzhi",{"title":433,"_path":434},"种植","/gyj/2022-12-01-zhongzhi",{"title":436,"_path":437},"人物属性设计","/gyj/2022-12-15-renwushuxing",{"title":439,"_path":440},"跑商","/gyj/2023-11-01-paoshang",{"title":442,"_path":443,"children":444},"Js","/js",[445,448,451],{"title":446,"_path":447},"如何在TypeScript中使用JS类库","/js/2022-02-12-typescript-use-js",{"title":449,"_path":450},"nuxt3项目初始化失败","/js/2023-05-16-nuxt3-init-fail",{"title":452,"_path":453},"Flex 布局使用","/js/2024-03-17-flex-use",{"title":455,"_path":456,"children":457},"Tool","/tool",[458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518,521,524,527,530,533,536,539,542,545,548,551,554,557,560,563],{"title":459,"_path":460},"windows发送到手机Ftp","/tool/2019-06-20-windows-send-to-ftp",{"title":462,"_path":463},"windows特殊目录修复","/tool/2019-06-24-shell-folders-are-displayed-with-the-standard-folder-icon-in-windows",{"title":465,"_path":466},"scourcetree  总是需要输入密码","/tool/2019-08-07-sourcetree-git-password",{"title":468,"_path":469},"powershell 常用命令","/tool/2019-08-10-powershell-command",{"title":471,"_path":472},"scoop的使用","/tool/2019-08-20-scoop-use",{"title":474,"_path":475},"使用配置文件来管理NuGet包版本F","/tool/2019-09-02-nuget-manager",{"title":477,"_path":478},"Redis的两种持久化RDB和AOF","/tool/2019-09-02-redis-aof-rdb",{"title":480,"_path":481},"使用 SSH 登陆谷歌云 root 或者 普通账户的方法","/tool/2020-01-02-google-clound-local-login",{"title":483,"_path":484},"CentOS 下安装Shadowsocks 搭建ss","/tool/2020-01-12-centosn-ss-install",{"title":486,"_path":487},"mac下brew 使用","/tool/2020-01-13-brew",{"title":489,"_path":490},"术语中英文对照","/tool/2020-02-05-game_en_zh",{"title":492,"_path":493},"Excel中以文本形式存储的数字","/tool/2020-02-06-excel-text-number",{"title":495,"_path":496},"protobuf序列化的一些问题","/tool/2020-03-25-protobuf-empty-collections",{"title":498,"_path":499},"为博客将 RSS 转为邮件订阅","/tool/2020-06-26-blog-mail-sub",{"title":501,"_path":502},"github下载代码的速度太慢","/tool/2020-06-27-linux-github-slow",{"title":504,"_path":505},"win10开始菜单添加软件以及备份和恢复","/tool/2020-07-02-win10-start-menu",{"title":507,"_path":508},"gitbook的使用","/tool/2020-07-06-gitbook-use",{"title":510,"_path":511},"github actions 简单使用","/tool/2020-07-11-github-actions",{"title":513,"_path":514},"使用hexo建立博客并部署到github","/tool/2020-07-12-hexo-github",{"title":516,"_path":517},"终端下设置代理","/tool/2020-07-13-terminal-proxy",{"title":519,"_path":520},"发现nuget包太占用C盘，怎么办？","/tool/2020-08-30-nuget-is-big",{"title":522,"_path":523},"unity商店下载资源迁移","/tool/2020-11-15-unity-is-big",{"title":525,"_path":526},"关于coding的pages介绍","/tool/2020-11-16-coding-pages",{"title":528,"_path":529},"一些常用的dns服务器","/tool/2021-05-06-dns",{"title":531,"_path":532},"UE4素材破解","/tool/2021-11-06-ue4-view",{"title":534,"_path":535},"安装cockpit通过nginx代理访问","/tool/2021-11-07-cockpit-linux",{"title":537,"_path":538},"Windows LTSC、LTSB、Server 安装 Windows Store 应用商店 ","/tool/2021-11-15-install-windowsstore",{"title":540,"_path":541},"我是如何把 VS Code 插件启动速度从 8 秒减少到 1 秒 ","/tool/2021-12-02-vscode-plugins-big",{"title":543,"_path":544},"云效部署hexo到自己的主机 ","/tool/2021-12-11-yunxiao-liushuixian-hexo",{"title":546,"_path":547},"github 怎么合并原始分支？ ","/tool/2021-12-12-github-sync",{"title":549,"_path":550},"code server安装制作online ide","/tool/2022-01-30-code-server",{"title":552,"_path":553},"rider的使用","/tool/2022-08-02-rider-use",{"title":555,"_path":556},"2022 08 09 Amd Over","/tool/2022-08-09-amd-over",{"title":558,"_path":559},"rider破解","/tool/2022-11-19-rider-po-jie",{"title":561,"_path":562},"stable diffusion install","/tool/2023-01-20-stable-diffusion-install",{"title":564,"_path":565},"CGI, FastCGI, WSGI, uWSGI, uwsgi一文搞懂","/tool/2023-02-15-cgi-fastcgi-wsgi-uswgi",{"title":567,"_path":568,"children":569},"Unity","/unity",[570,573,576,579,582,585,588,591,594,597,600,603,606,609,612,615,618,621,624,627,630,633,636,639,642,645,648,651,654,657,660,663,666,669,672,675,678,681,684,687,690,693,696,699,702,705,708,711,714,717,720,723,726,729,732,735,738,741,744,747,750,753,756,759,762,765,768,771,774,777,780,783],{"title":571,"_path":572},"Unity 导出 Android 64-bit 版本","/unity/2019-06-20-unity-android-x64",{"title":574,"_path":575},"Unity的il2cpp","/unity/2019-06-20-unity-il2cpp-debugger",{"title":577,"_path":578},"googlePlay 发布问题","/unity/2019-06-23-googlplay-pulish",{"title":580,"_path":581},"关于unity的适配问题","/unity/2019-08-09-unity2d-shipei",{"title":583,"_path":584},"一次精通 RectTransform","/unity/2019-08-10-ugui-recttransform",{"title":586,"_path":587},"一次精通 eventmanager","/unity/2019-08-11-ugui-eventmanager",{"title":589,"_path":590},"ugui的eventsystem源码解读","/unity/2019-08-12-ugui-eventsystem-sourcecode",{"title":592,"_path":593},"Unity Raycasters 剖析","/unity/2019-08-12-ugui-raycasters",{"title":595,"_path":596},"关于addressable那些事","/unity/2019-09-01-addressable",{"title":598,"_path":599},"关于spriteAtlas打包那些事","/unity/2019-09-01-spriteatlas",{"title":601,"_path":602},"ilruntime的研究","/unity/2019-09-02-ilruntime",{"title":604,"_path":605},"unity的宏以及添加net框架中未引用的dll","/unity/2019-09-02-unity-reference-dll",{"title":607,"_path":608},"xlua注入源码解读","/unity/2019-09-03-xlua-inject",{"title":610,"_path":611},"如何快速的注入汇编","/unity/2019-09-04-mono.cecil-inject",{"title":613,"_path":614},"2D游戏视差背景的实现","/unity/2019-09-13-parallax-2d",{"title":616,"_path":617},"unity使用代理","/unity/2019-11-15-unity-proxy",{"title":619,"_path":620},"一篇文章搞定Entitas","/unity/2020-01-01-unity-entitas",{"title":622,"_path":623},"unity攻击范围检测的方式区别","/unity/2020-01-11-unity-attack-range-detection-type",{"title":625,"_path":626},"常见的2D碰撞检测","/unity/2020-01-12-collision-detection",{"title":628,"_path":629},"unity攻击范围检测","/unity/2020-01-13-unity-attack-detection",{"title":631,"_path":632},"技能系统","/unity/2020-02-15-skill-system",{"title":634,"_path":635},"游戏buff系统设计","/unity/2020-02-16-buff-system",{"title":637,"_path":638},"角色状态设计","/unity/2020-02-17-character-states",{"title":640,"_path":641},"理解托管堆","/unity/2020-02-18-bestpracticeunderstandingperformanceinunity",{"title":643,"_path":644},"理解自动内存管理","/unity/2020-02-19-understandingautomaticmemorymanagement",{"title":646,"_path":647},"unity 移动平台打包丢失shader的问题","/unity/2020-02-20-shader-lost",{"title":649,"_path":650},"Unity的调试相关","/unity/2020-03-01-unity-debug",{"title":652,"_path":653},"unity启动运行脚本流程","/unity/2020-03-04-unity-startup",{"title":655,"_path":656},"unity的坐标体系","/unity/2020-07-01-unity-coordinate",{"title":658,"_path":659},"2020 07 03 Unity Mesh","/unity/2020-07-03-unity-mesh",{"title":661,"_path":662},"unity Render Pipeline","/unity/2020-07-04-unity-render-pipeline",{"title":664,"_path":665},"Notch Solution","/unity/2020-08-29-notch-solution",{"title":667,"_path":668},"unity 项目dll检查","/unity/2020-08-30-unity-dll-check",{"title":670,"_path":671},"UNITY的垂直同步和帧率","/unity/2020-09-05-unity-vsynccount",{"title":673,"_path":674},"UNITY性能优化流程","/unity/2020-09-10-optimizing-for-performance",{"title":676,"_path":677},"堆栈内存Stack和堆内存Heap","/unity/2020-09-11-stack-heap",{"title":679,"_path":680},"unity的addressables","/unity/2020-09-12-addressables",{"title":682,"_path":683},"游戏中的向量使用","/unity/2020-09-13-vector",{"title":685,"_path":686},"UNITY ECS 详解","/unity/2020-10-15-unity-ecs",{"title":688,"_path":689},"UNITY JOB SYSTEM详解","/unity/2020-10-16-unity-job",{"title":691,"_path":692},"运行时打包图集","/unity/2020-10-17-runtime-spriteatlas",{"title":694,"_path":695},"unity ecs component","/unity/2020-10-18-unity-ecs-component",{"title":697,"_path":698},"基于 Game Object Conversion 和 SubScene 的 DOTS 开发工作流","/unity/2020-10-19-game-object-conversion-and-subscene",{"title":700,"_path":701},"源代码分析world的创建","/unity/2020-10-20-ecs-world",{"title":703,"_path":704},"unity使用platforms构建","/unity/2020-10-21-platform",{"title":706,"_path":707},"Unity rendering order渲染顺序","/unity/2020-10-22-unity-render-order",{"title":709,"_path":710},"关于静态批处理/动态批处理/GPU Instancing /SRP Batcher的详细剖析","/unity/2020-10-23-unity-optimizing-gpu",{"title":712,"_path":713},"unity的ScreenToWorldPoint","/unity/2020-10-24-screentoworldpoint",{"title":715,"_path":716},"URP性能测试","/unity/2020-10-24-unity-urp-performance",{"title":718,"_path":719},"如何使用Unity ECS打造Reactive System？","/unity/2020-11-11-how-to-build-reactive-systems-with-unity-ecs",{"title":721,"_path":722},"Unity中Sprite和UI Image的区别","/unity/2020-11-12-sprite-image-diff",{"title":724,"_path":725},"简单保存工具","/unity/2020-11-13-simple-save",{"title":727,"_path":728},"2020 11 14 Netcode","/unity/2020-11-14-netcode",{"title":730,"_path":731},"ecs中的parent","/unity/2020-11-15-ecs-parent",{"title":733,"_path":734},"ability","/unity/2020-11-16-dotssample",{"title":736,"_path":737},"unity world time system","/unity/2020-11-17-unity-ecs-worldtime",{"title":739,"_path":740},"netcode源代码解读","/unity/2020-11-18-netcode-sourcecode",{"title":742,"_path":743},"pitch yaw roll是什么","/unity/2020-11-29-pitch-yaw-roll",{"title":745,"_path":746},"A Native Collection has not been disposed, resulting in a memory leak. Allocated from:","/unity/2020-12-20-collection-has-not-been-disposed",{"title":748,"_path":749},"解决Unity鼠标坐标点转成世界坐标系坐标点","/unity/2021-01-24-screentoworld",{"title":751,"_path":752},"2021 01 25 Tilemap","/unity/2021-01-25-tilemap",{"title":754,"_path":755},"Unity RenderTexture的应用","/unity/2021-04-11-render-texture",{"title":757,"_path":758},"commandbuff的一些问题","/unity/2021-05-20-ecs-commandbuff-question",{"title":760,"_path":761},"How to Make One Way Platform in unity","/unity/2021-06-13-how-to-make-one-way-platform",{"title":763,"_path":764},"UNITY的渲染顺序","/unity/2021-06-14-unity-render-order",{"title":766,"_path":767},"防止变量引用丢失 FormerlySerializedAs","/unity/2021-07-20-formerlyserializedas",{"title":769,"_path":770},"AI-PLANNER使用","/unity/2021-08-01-ai-planner",{"title":772,"_path":773},"Increased script assembly reload time","/unity/2021-10-01-increased-script-assembly-reload-time",{"title":775,"_path":776},"关于unity的热重载的研究","/unity/2022-01-02-unity-hot-reload",{"title":778,"_path":779},"Editor Iteration Profiler的使用","/unity/2022-01-28-unity-editor-iteration-profiler",{"title":781,"_path":782},"CircleCast和Overlapple的区别是什么","/unity/2022-04-02-circlecast-overlapple-diff",{"title":784,"_path":785},"unity ecs的备忘录","/unity/2022-09-10-ecs-beiwang",1710779038194]