[{"data":1,"prerenderedAt":729},["Reactive",2],{"content-query-EPZzxC4jqK":3,"content-navigation-8C37fagqQL":147},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":141,"_id":142,"_source":143,"_file":144,"_extension":145,"date":146},"/dotnet/2019-11-01-state-sync-npc","dotnet",false,"","状态同步的相关问题","怪物状态同步在一个地图当中，玩家的状态同步之后，则需要同步地图中怪物的位置信息，怪物的位置信息同步方式一般有两种实现方式基于客户端的状态同步一个地图中的怪物状态，实际上是由地图中玩家所决定的，当玩家施加攻击、使用技能，都会改变怪物的状态。在MapleStroy的设计当中，怪物的位置计算是属于离线计算，这也就是说，服务器不参与怪物的状态，这样的好处是节约流量、减缓服务器压力，但是坏处是，会出现怪物静止、吸怪等外挂手段。在移植MapleStroy的过程中，为了同步官方和考虑移动平台流量问题，因此采用此种手段。实现策略：怪物的位置由第一个进入该地图的玩家决定。这也就是说，当第一个玩家进入该地图之后，",{"type":11,"children":12,"toc":134},"root",[13,21,27,33,38,43,48,53,58,65,70,75,81,86,91,96,102,107,112,118],{"type":14,"tag":15,"props":16,"children":18},"element","h2",{"id":17},"怪物状态同步",[19],{"type":20,"value":17},"text",{"type":14,"tag":22,"props":23,"children":24},"p",{},[25],{"type":20,"value":26},"在一个地图当中，玩家的状态同步之后，则需要同步地图中怪物的位置信息，怪物的位置信息同步方式一般有两种实现方式",{"type":14,"tag":28,"props":29,"children":31},"h3",{"id":30},"基于客户端的状态同步",[32],{"type":20,"value":30},{"type":14,"tag":22,"props":34,"children":35},{},[36],{"type":20,"value":37},"一个地图中的怪物状态，实际上是由地图中玩家所决定的，当玩家施加攻击、使用技能，都会改变怪物的状态。在MapleStroy的设计当中，怪物的位置计算是属于离线计算，这也就是说，服务器不参与怪物的状态，这样的好处是节约流量、减缓服务器压力，但是坏处是，会出现怪物静止、吸怪等外挂手段。在移植MapleStroy的过程中，为了同步官方和考虑移动平台流量问题，因此采用此种手段。",{"type":14,"tag":22,"props":39,"children":40},{},[41],{"type":20,"value":42},"实现策略：",{"type":14,"tag":22,"props":44,"children":45},{},[46],{"type":20,"value":47},"怪物的位置由第一个进入该地图的玩家决定。这也就是说，当第一个玩家进入该地图之后，控制着当前地图中所有怪物的移动状态。当第二个玩家进入该地图之后，第一个玩家会广播当前所有怪物的状态，第二个玩家根据这些数据包进行改变。当然其他玩家发生了攻击，或者激怒怪物的操作后，也会广播这个消息。",{"type":14,"tag":22,"props":49,"children":50},{},[51],{"type":20,"value":52},"同时怪物的移动也是采用基于预言的状态同步，大体实现和玩家移动相似。",{"type":14,"tag":22,"props":54,"children":55},{},[56],{"type":20,"value":57},"怪物的同步在传统的端游里，是完全由服务器的怪物AI系统触发，客户端只是纯粹的接受服务器下发的怪物状态数据。对于手机游戏里，由于手机上很难出现像PC里那样的外挂，所以怪物的AI可以考虑放在客户端触发，同时减少怪物的状态同步。详细说明如下：",{"type":14,"tag":59,"props":60,"children":62},"h4",{"id":61},"a-怪物的随机移动不同步",[63],{"type":20,"value":64},"a) 怪物的随机移动不同步",{"type":14,"tag":22,"props":66,"children":67},{},[68],{"type":20,"value":69},"在地图上，怪物都会有一个固定的位置。怪物没有进入战斗状态时，就会在这个固定位置的周围走来走去，随机的移动。这个随机的移动设定由每个客户端自己控制，这样怪物的随机移动，就不用消息广播进行同步了。",{"type":14,"tag":22,"props":71,"children":72},{},[73],{"type":20,"value":74},"由于客户端自己控制怪物的随机走动，所以会出现不同客户端里，怪物位置不一样的问题。但由于怪物随机移动的范围较小，所以这个问题不是很明显，在手机上是可以接受的。角色打怪时，是扇形的伤害范围，所以即使怪物坐标在不同的客户端有点不一致，打怪的效果也可以接受。",{"type":14,"tag":59,"props":76,"children":78},{"id":77},"b-怪物的行为同步",[79],{"type":20,"value":80},"b) 怪物的行为同步",{"type":14,"tag":22,"props":82,"children":83},{},[84],{"type":20,"value":85},"当有角色攻击被动怪物，或者进入主动怪物的视野范围内时，怪物的AI就被这个角色所在的客户端锁定了，同时怪物进入攻击状态。攻击的判断完全由锁定怪物AI的客户端进行处理，同时这个客户端会将这个怪物的行为上发到服务器，由服务器广播给周围的其他玩家。",{"type":14,"tag":22,"props":87,"children":88},{},[89],{"type":20,"value":90},"怪物的AI锁定，使用抢占式，即谁最先发消息给服务器申请怪物的AI锁定，谁就获得了怪物的控制权，直到怪物死亡或脱离战斗状态。",{"type":14,"tag":22,"props":92,"children":93},{},[94],{"type":20,"value":95},"怪物可以每进行一次攻击，客户端就发一个消息给服务器。这样做，消息还是有点多，特别是一群怪围着几个角色进行攻击时，消息广播还是有点多。所以可以将状态的概念向上扩大，只同步怪物在攻击哪个玩家，而不同步每一次的攻击，然后由每个客户端根据怪物固定的攻击速度各自去表现。这样一个怪去攻击一个玩家，就只会有一次消息广播了。",{"type":14,"tag":59,"props":97,"children":99},{"id":98},"c-精英怪和boss怪的ai",[100],{"type":20,"value":101},"c) 精英怪和BOSS怪的AI",{"type":14,"tag":22,"props":103,"children":104},{},[105],{"type":20,"value":106},"精英怪和BOSS怪由于数量较少，而且比较重要，所以不能由客户端来申请AI控制权，而是服务器根据某种策略来控制。所使用的策略可以考虑角色的伤害值、防御值、角色与BOSS的距离远近等，根据这些因素，服务器计算出BOSS怪当前最适合攻击的对象（比如血量最少的玩家，最脆弱的法师等），然后将AI控制权发给那个客户端，由那个客户端控制攻击行为，同时通过消息让服务器同步给其他玩家。",{"type":14,"tag":22,"props":108,"children":109},{},[110],{"type":20,"value":111},"总结：怪物的同步方式的选择，就是尽量减少消息的广播，同时让游戏效果在可接受的范围内。怪物AI的这个处理方式，实际上是同时省去了游戏服务器的怪物AI模块（端游一般是专门用的一个进程或者另外一台物理服务器来进行怪物AI的计算），从而简化了MMO游戏的开发难度，同时保证了较好的游戏体验。",{"type":14,"tag":113,"props":114,"children":116},"h1",{"id":115},"相关链接",[117],{"type":20,"value":115},{"type":14,"tag":119,"props":120,"children":121},"ul",{},[122],{"type":14,"tag":123,"props":124,"children":125},"li",{},[126],{"type":14,"tag":127,"props":128,"children":132},"a",{"href":129,"rel":130},"https://www.jianshu.com/p/5dbdf81c4e69",[131],"nofollow",[133],{"type":20,"value":129},{"title":7,"searchDepth":135,"depth":135,"links":136},2,[137],{"id":17,"depth":135,"text":17,"children":138},[139],{"id":30,"depth":140,"text":30},3,"markdown","content:dotnet:2019-11-01-state-sync-npc.md","content","dotnet/2019-11-01-state-sync-npc.md","md","2019-11-01",[148,158,283,332,384,397,509],{"title":149,"_path":150,"children":151},"Art","/art",[152,155],{"title":153,"_path":154},"如何用蒙版将两个图过渡融合","/art/2020-09-03-ps-ronghe-pics",{"title":156,"_path":157},"像素画入门","/art/2022-02-02-xiangsuhuarumen",{"title":159,"_path":160,"children":161},"Dotnet","/dotnet",[162,165,168,171,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268,271,274,277,280],{"title":163,"_path":164},"Linux部署dotnetcore记录","/dotnet/2019-06-05-linux-dotnet-daemon",{"title":166,"_path":167},"时间轮的引入","/dotnet/2019-10-29-time-wheel",{"title":169,"_path":170},"帧同步的相关问题","/dotnet/2019-11-01-lock-step",{"title":8,"_path":4},{"title":173,"_path":174},"状态同步--技能系统的同步机制分析","/dotnet/2019-11-02-state-sync-skill",{"title":176,"_path":177},"Creating a Quartz.NET hosted service with ASP.NET Core","/dotnet/2019-11-05-quartz",{"title":179,"_path":180},"DatetimeOffset和Datetime的区别","/dotnet/2019-12-01-datetimeoffset",{"title":182,"_path":183},"大小端字节序(Big Endian和Little Endian)","/dotnet/2020-01-05-big-little-endian",{"title":185,"_path":186},"dll文件的加载","/dotnet/2020-01-06-dll-load",{"title":188,"_path":189},"延迟补偿在C/S架构游戏协议设计和优化中的应用","/dotnet/2020-02-02-latency_compensating_methods_in_clientserver_in-game_protocol_design_and_optimization",{"title":191,"_path":192},"延迟补偿和对时的相关总结","/dotnet/2020-02-02-latency_compensating-rtt",{"title":194,"_path":195},"快节奏多人游戏同步(1)-ClientServer架构","/dotnet/2020-02-02-net-sync-client-server-game-architecture",{"title":197,"_path":198},"快节奏多人游戏同步(2)-客户端预测与服务器校对","/dotnet/2020-02-02-net-sync-client-side-prediction-and-server-reconciliation",{"title":200,"_path":201},"快节奏多人游戏同步(3)-Entity插值","/dotnet/2020-02-02-net-sync-entity-interpolation",{"title":203,"_path":204},"快节奏多人游戏同步(4)-延时补偿","/dotnet/2020-02-02-net-sync-lag-compensation",{"title":206,"_path":207},"守望先锋等FPS游戏的网络同步","/dotnet/2020-02-02-overwatch-a-guide-to-understanding-netcode",{"title":209,"_path":210},"起源引擎网络同步模型","/dotnet/2020-02-02-source_multiplayer_networking",{"title":212,"_path":213},"orleans的部署模式","/dotnet/2020-02-03-orleans-deployment",{"title":215,"_path":216},"一致性hash算法","/dotnet/2020-02-06-consistent_hash",{"title":218,"_path":219},"地图的aoi","/dotnet/2020-02-07-aoi",{"title":221,"_path":222},"游戏的匹配机制ELO","/dotnet/2020-02-09-room-elo",{"title":224,"_path":225},"C# 深浅复制","/dotnet/2020-02-10-icloneable",{"title":227,"_path":228},"C#引用类型对象在循环引用时会不会内存泄漏","/dotnet/2020-02-11-gc",{"title":230,"_path":231},"扒一扒.net、.net framework、mono和Unity","/dotnet/2020-02-12-netcore-mono-netframework",{"title":233,"_path":234},"c#编译和运行启动原理","/dotnet/2020-02-13-csharp-run",{"title":236,"_path":237},"abp新建项目指南","/dotnet/2020-05-29-abp-start",{"title":239,"_path":240},"2020 06 11 IdentityServer Use","/dotnet/2020-06-11-identityserver-use",{"title":242,"_path":243},"关于abp的用户的一些问题","/dotnet/2020-07-05-abp-database-user",{"title":245,"_path":246},"abp的dOC模块使用","/dotnet/2020-07-10-abp-doc",{"title":248,"_path":249},"abp默认语言规则","/dotnet/2020-07-15-abp-default-language",{"title":251,"_path":252},"Orleans 最佳实践","/dotnet/2020-08-09-orleans-best-practices",{"title":254,"_path":255},"c#特性参数","/dotnet/2020-08-10-param-attribute",{"title":257,"_path":258},".NET Core 获取 HttpContext.Current 以及 AsyncLocal 与 ThreadLocal","/dotnet/2020-08-11-httpcontextaccessor-asynclocal",{"title":260,"_path":261},"Kestrel源码分析","/dotnet/2020-08-15-kestrel-source-code",{"title":263,"_path":264},"ConcurrentDictionary并发字典","/dotnet/2020-08-16-concurrentdictionary",{"title":266,"_path":267},"IOptions、IOptionsMonitor以及IOptionsSnapshot","/dotnet/2020-08-17-netcore-options",{"title":269,"_path":270},".NET Core/Framework 创建委托以大幅度提高反射调用的性能","/dotnet/2020-11-13-reflection-method",{"title":272,"_path":273},"C＃枚举中使用Flags特性","/dotnet/2020-11-24-flags",{"title":275,"_path":276},"谷歌浏览器下netcore登录失败问题","/dotnet/2020-12-11-chrome-login-fail",{"title":278,"_path":279},"Converting between Structs and Byte Arrays","/dotnet/2021-05-01-converting-between-structs-and-byte-arrays",{"title":281,"_path":282},"c#在重写object中的Equal方法时需要对GetHashCode进行重写（Dictionary引用）","/dotnet/2022-08-15-equal-hashcode",{"title":284,"_path":285,"children":286},"Game","/game",[287,290,293,296,299,302,305,308,311,314,317,320,323,326,329],{"title":288,"_path":289},"使用柏林噪声算法生成地图","/game/2021-01-20-perlin-map",{"title":291,"_path":292},"波函数坍塌算法生成地图","/game/2021-01-21-wave-collapse-function",{"title":294,"_path":295},"文明6地图生成算法","/game/2021-01-22-civ-map",{"title":297,"_path":298},"roguelike地牢生成算法","/game/2021-01-23-roguelike-map",{"title":300,"_path":301},"Spelunky关卡生成","/game/2021-01-23-spelunky-map",{"title":303,"_path":304},"Edgar源代码解读","/game/2021-06-12-edgar-code-read",{"title":306,"_path":307},"rpgbuild的一些备注","/game/2021-06-15-rpgbuilder",{"title":309,"_path":310},"游戏人物设计","/game/2021-08-05-game-task-design",{"title":312,"_path":313},"unity gameplay ability源代码解析","/game/2021-12-14-untiy-gameplay-ablility-sourcecode",{"title":315,"_path":316},"苟与剑游戏技能分析","/game/2021-12-21-gyj-skill",{"title":318,"_path":319},"quest machine 使用相关","/game/2022-02-19-quest-machine",{"title":321,"_path":322},"苟与剑中的单位生成方式","/game/2022-03-16-gyj-map",{"title":324,"_path":325},"ecs中实体创建方法","/game/2022-08-03-ecs",{"title":327,"_path":328},"暗黑2怪物等级和掉落规则","/game/2022-08-05-dia2",{"title":330,"_path":331},"行为树源代码解析","/game/2022-08-21-behavior-tree-source-code",{"title":333,"_path":334,"children":335},"Gyj","/gyj",[336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381],{"title":337,"_path":338},"美术要求","/gyj/2022-06-11-meishuyaoqiu",{"title":340,"_path":341},"游戏基础知识","/gyj/2022-06-12-jichuzhishi",{"title":343,"_path":344},"2022 08 22 地图房间的种类","/gyj/2022-08-22-detufangjiandezhonglei",{"title":346,"_path":347},"2022 08 22 奇遇事件","/gyj/2022-08-22-qiyushijian",{"title":349,"_path":350},"游戏流程","/gyj/2022-08-22-youxiliucheng",{"title":352,"_path":353},"物品产出表","/gyj/2022-08-22-wupinchanchubiao",{"title":355,"_path":356},"玩法","/gyj/2022-08-22-wanfa",{"title":358,"_path":359},"初入江湖","/gyj/2022-08-22-diyizhang",{"title":361,"_path":362},"2022 08 22 职业与工作","/gyj/2022-08-22-zhiyeyugongzuo",{"title":364,"_path":365},"天下霸图研究","/gyj/2022-11-01-tianxiabatu",{"title":367,"_path":368},"流放之路关于伤害公式和技能的分析","/gyj/2022-11-17-liufangzhilu",{"title":370,"_path":371},"门派内容相关","/gyj/2022-11-17-sect",{"title":373,"_path":374},"2022 12 01 养殖","/gyj/2022-12-01-yangzhi",{"title":376,"_path":377},"种植","/gyj/2022-12-01-zhongzhi",{"title":379,"_path":380},"人物属性设计","/gyj/2022-12-15-renwushuxing",{"title":382,"_path":383},"跑商","/gyj/2023-11-01-paoshang",{"title":385,"_path":386,"children":387},"Js","/js",[388,391,394],{"title":389,"_path":390},"如何在TypeScript中使用JS类库","/js/2022-02-12-typescript-use-js",{"title":392,"_path":393},"nuxt3项目初始化失败","/js/2023-05-16-nuxt3-init-fail",{"title":395,"_path":396},"Flex 布局使用","/js/2024-03-17-flex-use",{"title":398,"_path":399,"children":400},"Tool","/tool",[401,404,407,410,413,416,419,422,425,428,431,434,437,440,443,446,449,452,455,458,461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506],{"title":402,"_path":403},"windows发送到手机Ftp","/tool/2019-06-20-windows-send-to-ftp",{"title":405,"_path":406},"windows特殊目录修复","/tool/2019-06-24-shell-folders-are-displayed-with-the-standard-folder-icon-in-windows",{"title":408,"_path":409},"scourcetree  总是需要输入密码","/tool/2019-08-07-sourcetree-git-password",{"title":411,"_path":412},"powershell 常用命令","/tool/2019-08-10-powershell-command",{"title":414,"_path":415},"scoop的使用","/tool/2019-08-20-scoop-use",{"title":417,"_path":418},"使用配置文件来管理NuGet包版本F","/tool/2019-09-02-nuget-manager",{"title":420,"_path":421},"Redis的两种持久化RDB和AOF","/tool/2019-09-02-redis-aof-rdb",{"title":423,"_path":424},"使用 SSH 登陆谷歌云 root 或者 普通账户的方法","/tool/2020-01-02-google-clound-local-login",{"title":426,"_path":427},"CentOS 下安装Shadowsocks 搭建ss","/tool/2020-01-12-centosn-ss-install",{"title":429,"_path":430},"mac下brew 使用","/tool/2020-01-13-brew",{"title":432,"_path":433},"术语中英文对照","/tool/2020-02-05-game_en_zh",{"title":435,"_path":436},"Excel中以文本形式存储的数字","/tool/2020-02-06-excel-text-number",{"title":438,"_path":439},"protobuf序列化的一些问题","/tool/2020-03-25-protobuf-empty-collections",{"title":441,"_path":442},"为博客将 RSS 转为邮件订阅","/tool/2020-06-26-blog-mail-sub",{"title":444,"_path":445},"github下载代码的速度太慢","/tool/2020-06-27-linux-github-slow",{"title":447,"_path":448},"win10开始菜单添加软件以及备份和恢复","/tool/2020-07-02-win10-start-menu",{"title":450,"_path":451},"gitbook的使用","/tool/2020-07-06-gitbook-use",{"title":453,"_path":454},"github actions 简单使用","/tool/2020-07-11-github-actions",{"title":456,"_path":457},"使用hexo建立博客并部署到github","/tool/2020-07-12-hexo-github",{"title":459,"_path":460},"终端下设置代理","/tool/2020-07-13-terminal-proxy",{"title":462,"_path":463},"发现nuget包太占用C盘，怎么办？","/tool/2020-08-30-nuget-is-big",{"title":465,"_path":466},"unity商店下载资源迁移","/tool/2020-11-15-unity-is-big",{"title":468,"_path":469},"关于coding的pages介绍","/tool/2020-11-16-coding-pages",{"title":471,"_path":472},"一些常用的dns服务器","/tool/2021-05-06-dns",{"title":474,"_path":475},"UE4素材破解","/tool/2021-11-06-ue4-view",{"title":477,"_path":478},"安装cockpit通过nginx代理访问","/tool/2021-11-07-cockpit-linux",{"title":480,"_path":481},"Windows LTSC、LTSB、Server 安装 Windows Store 应用商店 ","/tool/2021-11-15-install-windowsstore",{"title":483,"_path":484},"我是如何把 VS Code 插件启动速度从 8 秒减少到 1 秒 ","/tool/2021-12-02-vscode-plugins-big",{"title":486,"_path":487},"云效部署hexo到自己的主机 ","/tool/2021-12-11-yunxiao-liushuixian-hexo",{"title":489,"_path":490},"github 怎么合并原始分支？ ","/tool/2021-12-12-github-sync",{"title":492,"_path":493},"code server安装制作online ide","/tool/2022-01-30-code-server",{"title":495,"_path":496},"rider的使用","/tool/2022-08-02-rider-use",{"title":498,"_path":499},"2022 08 09 Amd Over","/tool/2022-08-09-amd-over",{"title":501,"_path":502},"rider破解","/tool/2022-11-19-rider-po-jie",{"title":504,"_path":505},"stable diffusion install","/tool/2023-01-20-stable-diffusion-install",{"title":507,"_path":508},"CGI, FastCGI, WSGI, uWSGI, uwsgi一文搞懂","/tool/2023-02-15-cgi-fastcgi-wsgi-uswgi",{"title":510,"_path":511,"children":512},"Unity","/unity",[513,516,519,522,525,528,531,534,537,540,543,546,549,552,555,558,561,564,567,570,573,576,579,582,585,588,591,594,597,600,603,606,609,612,615,618,621,624,627,630,633,636,639,642,645,648,651,654,657,660,663,666,669,672,675,678,681,684,687,690,693,696,699,702,705,708,711,714,717,720,723,726],{"title":514,"_path":515},"Unity 导出 Android 64-bit 版本","/unity/2019-06-20-unity-android-x64",{"title":517,"_path":518},"Unity的il2cpp","/unity/2019-06-20-unity-il2cpp-debugger",{"title":520,"_path":521},"googlePlay 发布问题","/unity/2019-06-23-googlplay-pulish",{"title":523,"_path":524},"关于unity的适配问题","/unity/2019-08-09-unity2d-shipei",{"title":526,"_path":527},"一次精通 RectTransform","/unity/2019-08-10-ugui-recttransform",{"title":529,"_path":530},"一次精通 eventmanager","/unity/2019-08-11-ugui-eventmanager",{"title":532,"_path":533},"ugui的eventsystem源码解读","/unity/2019-08-12-ugui-eventsystem-sourcecode",{"title":535,"_path":536},"Unity Raycasters 剖析","/unity/2019-08-12-ugui-raycasters",{"title":538,"_path":539},"关于addressable那些事","/unity/2019-09-01-addressable",{"title":541,"_path":542},"关于spriteAtlas打包那些事","/unity/2019-09-01-spriteatlas",{"title":544,"_path":545},"ilruntime的研究","/unity/2019-09-02-ilruntime",{"title":547,"_path":548},"unity的宏以及添加net框架中未引用的dll","/unity/2019-09-02-unity-reference-dll",{"title":550,"_path":551},"xlua注入源码解读","/unity/2019-09-03-xlua-inject",{"title":553,"_path":554},"如何快速的注入汇编","/unity/2019-09-04-mono.cecil-inject",{"title":556,"_path":557},"2D游戏视差背景的实现","/unity/2019-09-13-parallax-2d",{"title":559,"_path":560},"unity使用代理","/unity/2019-11-15-unity-proxy",{"title":562,"_path":563},"一篇文章搞定Entitas","/unity/2020-01-01-unity-entitas",{"title":565,"_path":566},"unity攻击范围检测的方式区别","/unity/2020-01-11-unity-attack-range-detection-type",{"title":568,"_path":569},"常见的2D碰撞检测","/unity/2020-01-12-collision-detection",{"title":571,"_path":572},"unity攻击范围检测","/unity/2020-01-13-unity-attack-detection",{"title":574,"_path":575},"技能系统","/unity/2020-02-15-skill-system",{"title":577,"_path":578},"游戏buff系统设计","/unity/2020-02-16-buff-system",{"title":580,"_path":581},"角色状态设计","/unity/2020-02-17-character-states",{"title":583,"_path":584},"理解托管堆","/unity/2020-02-18-bestpracticeunderstandingperformanceinunity",{"title":586,"_path":587},"理解自动内存管理","/unity/2020-02-19-understandingautomaticmemorymanagement",{"title":589,"_path":590},"unity 移动平台打包丢失shader的问题","/unity/2020-02-20-shader-lost",{"title":592,"_path":593},"Unity的调试相关","/unity/2020-03-01-unity-debug",{"title":595,"_path":596},"unity启动运行脚本流程","/unity/2020-03-04-unity-startup",{"title":598,"_path":599},"unity的坐标体系","/unity/2020-07-01-unity-coordinate",{"title":601,"_path":602},"2020 07 03 Unity Mesh","/unity/2020-07-03-unity-mesh",{"title":604,"_path":605},"unity Render Pipeline","/unity/2020-07-04-unity-render-pipeline",{"title":607,"_path":608},"Notch Solution","/unity/2020-08-29-notch-solution",{"title":610,"_path":611},"unity 项目dll检查","/unity/2020-08-30-unity-dll-check",{"title":613,"_path":614},"UNITY的垂直同步和帧率","/unity/2020-09-05-unity-vsynccount",{"title":616,"_path":617},"UNITY性能优化流程","/unity/2020-09-10-optimizing-for-performance",{"title":619,"_path":620},"堆栈内存Stack和堆内存Heap","/unity/2020-09-11-stack-heap",{"title":622,"_path":623},"unity的addressables","/unity/2020-09-12-addressables",{"title":625,"_path":626},"游戏中的向量使用","/unity/2020-09-13-vector",{"title":628,"_path":629},"UNITY ECS 详解","/unity/2020-10-15-unity-ecs",{"title":631,"_path":632},"UNITY JOB SYSTEM详解","/unity/2020-10-16-unity-job",{"title":634,"_path":635},"运行时打包图集","/unity/2020-10-17-runtime-spriteatlas",{"title":637,"_path":638},"unity ecs component","/unity/2020-10-18-unity-ecs-component",{"title":640,"_path":641},"基于 Game Object Conversion 和 SubScene 的 DOTS 开发工作流","/unity/2020-10-19-game-object-conversion-and-subscene",{"title":643,"_path":644},"源代码分析world的创建","/unity/2020-10-20-ecs-world",{"title":646,"_path":647},"unity使用platforms构建","/unity/2020-10-21-platform",{"title":649,"_path":650},"Unity rendering order渲染顺序","/unity/2020-10-22-unity-render-order",{"title":652,"_path":653},"关于静态批处理/动态批处理/GPU Instancing /SRP Batcher的详细剖析","/unity/2020-10-23-unity-optimizing-gpu",{"title":655,"_path":656},"unity的ScreenToWorldPoint","/unity/2020-10-24-screentoworldpoint",{"title":658,"_path":659},"URP性能测试","/unity/2020-10-24-unity-urp-performance",{"title":661,"_path":662},"如何使用Unity ECS打造Reactive System？","/unity/2020-11-11-how-to-build-reactive-systems-with-unity-ecs",{"title":664,"_path":665},"Unity中Sprite和UI Image的区别","/unity/2020-11-12-sprite-image-diff",{"title":667,"_path":668},"简单保存工具","/unity/2020-11-13-simple-save",{"title":670,"_path":671},"2020 11 14 Netcode","/unity/2020-11-14-netcode",{"title":673,"_path":674},"ecs中的parent","/unity/2020-11-15-ecs-parent",{"title":676,"_path":677},"ability","/unity/2020-11-16-dotssample",{"title":679,"_path":680},"unity world time system","/unity/2020-11-17-unity-ecs-worldtime",{"title":682,"_path":683},"netcode源代码解读","/unity/2020-11-18-netcode-sourcecode",{"title":685,"_path":686},"pitch yaw roll是什么","/unity/2020-11-29-pitch-yaw-roll",{"title":688,"_path":689},"A Native Collection has not been disposed, resulting in a memory leak. Allocated from:","/unity/2020-12-20-collection-has-not-been-disposed",{"title":691,"_path":692},"解决Unity鼠标坐标点转成世界坐标系坐标点","/unity/2021-01-24-screentoworld",{"title":694,"_path":695},"2021 01 25 Tilemap","/unity/2021-01-25-tilemap",{"title":697,"_path":698},"Unity RenderTexture的应用","/unity/2021-04-11-render-texture",{"title":700,"_path":701},"commandbuff的一些问题","/unity/2021-05-20-ecs-commandbuff-question",{"title":703,"_path":704},"How to Make One Way Platform in unity","/unity/2021-06-13-how-to-make-one-way-platform",{"title":706,"_path":707},"UNITY的渲染顺序","/unity/2021-06-14-unity-render-order",{"title":709,"_path":710},"防止变量引用丢失 FormerlySerializedAs","/unity/2021-07-20-formerlyserializedas",{"title":712,"_path":713},"AI-PLANNER使用","/unity/2021-08-01-ai-planner",{"title":715,"_path":716},"Increased script assembly reload time","/unity/2021-10-01-increased-script-assembly-reload-time",{"title":718,"_path":719},"关于unity的热重载的研究","/unity/2022-01-02-unity-hot-reload",{"title":721,"_path":722},"Editor Iteration Profiler的使用","/unity/2022-01-28-unity-editor-iteration-profiler",{"title":724,"_path":725},"CircleCast和Overlapple的区别是什么","/unity/2022-04-02-circlecast-overlapple-diff",{"title":727,"_path":728},"unity ecs的备忘录","/unity/2022-09-10-ecs-beiwang",1710779041529]