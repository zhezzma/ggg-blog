[{"data":1,"prerenderedAt":737},["Reactive",2],{"content-query-t95NP4kzTX":3,"content-navigation-8C37fagqQL":155},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":149,"_id":150,"_source":151,"_file":152,"_extension":153,"date":154},"/dotnet/2019-12-01-datetimeoffset","dotnet",false,"","DatetimeOffset和Datetime的区别","  [Fact]\n        public void TestDatetimeoffset2()\n        {\n            var a = DateTimeOffset.Now;\n            var b = a.ToLocalTime();\n            var c = a.ToUniversalTime();\n\n            Assert.Equal(b, c);\n        }\n上面的abc都是一个值    [Fact]\n        public void TestDatetimeoffset3()\n        {\n    ",{"type":11,"children":12,"toc":146},"root",[13,25,31,39,44,49,54,59,64,69,74,85,93,98,103,108,115,120,135],{"type":14,"tag":15,"props":16,"children":18},"element","pre",{"code":17},"  [Fact]\n        public void TestDatetimeoffset2()\n        {\n            var a = DateTimeOffset.Now;\n            var b = a.ToLocalTime();\n            var c = a.ToUniversalTime();\n\n            Assert.Equal(b, c);\n        }\n",[19],{"type":14,"tag":20,"props":21,"children":22},"code",{"__ignoreMap":7},[23],{"type":24,"value":17},"text",{"type":14,"tag":26,"props":27,"children":28},"p",{},[29],{"type":24,"value":30},"上面的abc都是一个值",{"type":14,"tag":15,"props":32,"children":34},{"code":33},"    [Fact]\n        public void TestDatetimeoffset3()\n        {\n            var a = DateTime.Now;\n            var b = a.ToLocalTime();\n            var c = a.ToUniversalTime();\n\n            Assert.Equal(b, c);\n        }\n",[35],{"type":14,"tag":20,"props":36,"children":37},{"__ignoreMap":7},[38],{"type":24,"value":33},{"type":14,"tag":26,"props":40,"children":41},{},[42],{"type":24,"value":43},"上面的值是不等的",{"type":14,"tag":26,"props":45,"children":46},{},[47],{"type":24,"value":48},"datetimeoffset使用efcore存储到datetime字段都是0时区的...取出来后如果显示再web可以toLocalTime",{"type":14,"tag":26,"props":50,"children":51},{},[52],{"type":24,"value":53},"如果是游戏中使用,除非是发送给用户显示..否则不需要toLocalTime..",{"type":14,"tag":26,"props":55,"children":56},{},[57],{"type":24,"value":58},"1，DateTime",{"type":14,"tag":26,"props":60,"children":61},{},[62],{"type":24,"value":63},"表示时间上的一刻，通常以日期和当天时间来表示。",{"type":14,"tag":26,"props":65,"children":66},{},[67],{"type":24,"value":68},"2， DateTimeOffset",{"type":14,"tag":26,"props":70,"children":71},{},[72],{"type":24,"value":73},"表示一个时间点，通常以相对于协调世界时（UTC）的日期和时间来表示",{"type":14,"tag":26,"props":75,"children":76},{},[77],{"type":14,"tag":78,"props":79,"children":83},"a",{"href":80,"rel":81},"https://docs.microsoft.com/en-us/dotnet/standard/datetime/performing-arithmetic-operations",[82],"nofollow",[84],{"type":24,"value":80},{"type":14,"tag":15,"props":86,"children":88},{"code":87},"\nusing System;\n\npublic enum TimeComparison\n{\n   EarlierThan = -1,\n   TheSameAs = 0,\n   LaterThan = 1\n}\n\npublic class DateManipulation\n{\n   public static void Main()\n   {\n      DateTime localTime = DateTime.Now;\n      DateTime utcTime = DateTime.UtcNow;\n      \n      Console.WriteLine(\"Difference between {0} and {1} time: {2}:{3} hours\", \n                        localTime.Kind.ToString(), \n                        utcTime.Kind.ToString(), \n                        (localTime - utcTime).Hours, \n                        (localTime - utcTime).Minutes);\n      Console.WriteLine(\"The {0} time is {1} the {2} time.\", \n                        localTime.Kind.ToString(), \n                        Enum.GetName(typeof(TimeComparison), localTime.CompareTo(utcTime)), \n                        utcTime.Kind.ToString());  \n   }\n}\n// If run in the U.S. Pacific Standard Time zone, the example displays \n// the following output to the console:\n//    Difference between Local and Utc time: -7:0 hours\n//    The Local time is EarlierThan the Utc time.      \n\n\npublic class DateTimeOffsetManipulation\n{\n   public static void Main()\n   {\n      DateTimeOffset localTime = DateTimeOffset.Now;\n      DateTimeOffset utcTime = DateTimeOffset.UtcNow;\n      \n      Console.WriteLine(\"Difference between local time and UTC: {0}:{1:D2} hours\", \n                        (localTime - utcTime).Hours, \n                        (localTime - utcTime).Minutes);\n      Console.WriteLine(\"The local time is {0} UTC.\", \n                        Enum.GetName(typeof(TimeComparison), localTime.CompareTo(utcTime)));  \n   }\n}\n// Regardless of the local time zone, the example displays \n// the following output to the console:\n//    Difference between local time and UTC: 0:00 hours.\n//    The local time is TheSameAs UTC.\n",[89],{"type":14,"tag":20,"props":90,"children":91},{"__ignoreMap":7},[92],{"type":24,"value":87},{"type":14,"tag":26,"props":94,"children":95},{},[96],{"type":24,"value":97},"从实例中可以看出，DateTimeOffset是取相对于UTC的日期和时间来表示的，所以DateTimeOffset.Now和DateTimeOffset.UtcNow的值是一样的。而DateTime不同，是以日期和当前时间来显示的。",{"type":14,"tag":26,"props":99,"children":100},{},[101],{"type":24,"value":102},"就是说..如果你用DateTime进行加减运算要么只用DateTime.Now..要么只用DateTime.UtcNow..混用会出现不可预期的错误",{"type":14,"tag":26,"props":104,"children":105},{},[106],{"type":24,"value":107},"而DateTimeOffset的无论是用now还是utcnow加减都一样,因为他代表的是一个时间点...如果是为了客户端显示使用可以转换成本地时间再tostring",{"type":14,"tag":109,"props":110,"children":112},"h1",{"id":111},"还有就是不要混用不要将datetime当成datetimeoffset使用",[113],{"type":24,"value":114},"还有就是不要混用..不要将datetime当成datetimeoffset使用,",{"type":14,"tag":26,"props":116,"children":117},{},[118],{"type":24,"value":119},"当需要使用DateTimeOffset的Date等字段的时候,",{"type":14,"tag":121,"props":122,"children":123},"ol",{},[124,130],{"type":14,"tag":125,"props":126,"children":127},"li",{},[128],{"type":24,"value":129},"要及时转成DateTimeOffset,需要使用new方法并设置时区转成datetimeoffset",{"type":14,"tag":125,"props":131,"children":132},{},[133],{"type":24,"value":134},"直接赋值,会出现时区问题",{"type":14,"tag":15,"props":136,"children":141},{"code":137,"language":138,"meta":7,"className":139},"var now = new DateTimeOffset(1977,1,1,14,0,0,TimeSpan.Zero);\nvar mt = now.AddDays(1).Date;\nDateTimeOffset d = mt; //这里直接赋值会有当前时区\nvar mto= new DateTimeOffset(mt,TimeSpan.Zero);\n\nConsole.WriteLine(now); //1/1/1977 2:00:00 PM +00:00\nConsole.WriteLine(mt); //1/2/1977 12:00:00 AM\nConsole.WriteLine(d);//1/2/1977 12:00:00 AM +08:00\nConsole.WriteLine(mto);//1/2/1977 12:00:00 AM +00:00\n\nConsole.WriteLine(mto == mt); //false\nConsole.WriteLine(d == mto); //false\n","csharp",[140],"language-csharp",[142],{"type":14,"tag":20,"props":143,"children":144},{"__ignoreMap":7},[145],{"type":24,"value":137},{"title":7,"searchDepth":147,"depth":147,"links":148},2,[],"markdown","content:dotnet:2019-12-01-datetimeoffset.md","content","dotnet/2019-12-01-datetimeoffset.md","md","2019-12-01",[156,166,291,340,392,405,517],{"title":157,"_path":158,"children":159},"Art","/art",[160,163],{"title":161,"_path":162},"如何用蒙版将两个图过渡融合","/art/2020-09-03-ps-ronghe-pics",{"title":164,"_path":165},"像素画入门","/art/2022-02-02-xiangsuhuarumen",{"title":167,"_path":168,"children":169},"Dotnet","/dotnet",[170,173,176,179,182,185,188,189,192,195,198,201,204,207,210,213,216,219,222,225,228,231,234,237,240,243,246,249,252,255,258,261,264,267,270,273,276,279,282,285,288],{"title":171,"_path":172},"Linux部署dotnetcore记录","/dotnet/2019-06-05-linux-dotnet-daemon",{"title":174,"_path":175},"时间轮的引入","/dotnet/2019-10-29-time-wheel",{"title":177,"_path":178},"帧同步的相关问题","/dotnet/2019-11-01-lock-step",{"title":180,"_path":181},"状态同步的相关问题","/dotnet/2019-11-01-state-sync-npc",{"title":183,"_path":184},"状态同步--技能系统的同步机制分析","/dotnet/2019-11-02-state-sync-skill",{"title":186,"_path":187},"Creating a Quartz.NET hosted service with ASP.NET Core","/dotnet/2019-11-05-quartz",{"title":8,"_path":4},{"title":190,"_path":191},"大小端字节序(Big Endian和Little Endian)","/dotnet/2020-01-05-big-little-endian",{"title":193,"_path":194},"dll文件的加载","/dotnet/2020-01-06-dll-load",{"title":196,"_path":197},"延迟补偿在C/S架构游戏协议设计和优化中的应用","/dotnet/2020-02-02-latency_compensating_methods_in_clientserver_in-game_protocol_design_and_optimization",{"title":199,"_path":200},"延迟补偿和对时的相关总结","/dotnet/2020-02-02-latency_compensating-rtt",{"title":202,"_path":203},"快节奏多人游戏同步(1)-ClientServer架构","/dotnet/2020-02-02-net-sync-client-server-game-architecture",{"title":205,"_path":206},"快节奏多人游戏同步(2)-客户端预测与服务器校对","/dotnet/2020-02-02-net-sync-client-side-prediction-and-server-reconciliation",{"title":208,"_path":209},"快节奏多人游戏同步(3)-Entity插值","/dotnet/2020-02-02-net-sync-entity-interpolation",{"title":211,"_path":212},"快节奏多人游戏同步(4)-延时补偿","/dotnet/2020-02-02-net-sync-lag-compensation",{"title":214,"_path":215},"守望先锋等FPS游戏的网络同步","/dotnet/2020-02-02-overwatch-a-guide-to-understanding-netcode",{"title":217,"_path":218},"起源引擎网络同步模型","/dotnet/2020-02-02-source_multiplayer_networking",{"title":220,"_path":221},"orleans的部署模式","/dotnet/2020-02-03-orleans-deployment",{"title":223,"_path":224},"一致性hash算法","/dotnet/2020-02-06-consistent_hash",{"title":226,"_path":227},"地图的aoi","/dotnet/2020-02-07-aoi",{"title":229,"_path":230},"游戏的匹配机制ELO","/dotnet/2020-02-09-room-elo",{"title":232,"_path":233},"C# 深浅复制","/dotnet/2020-02-10-icloneable",{"title":235,"_path":236},"C#引用类型对象在循环引用时会不会内存泄漏","/dotnet/2020-02-11-gc",{"title":238,"_path":239},"扒一扒.net、.net framework、mono和Unity","/dotnet/2020-02-12-netcore-mono-netframework",{"title":241,"_path":242},"c#编译和运行启动原理","/dotnet/2020-02-13-csharp-run",{"title":244,"_path":245},"abp新建项目指南","/dotnet/2020-05-29-abp-start",{"title":247,"_path":248},"2020 06 11 IdentityServer Use","/dotnet/2020-06-11-identityserver-use",{"title":250,"_path":251},"关于abp的用户的一些问题","/dotnet/2020-07-05-abp-database-user",{"title":253,"_path":254},"abp的dOC模块使用","/dotnet/2020-07-10-abp-doc",{"title":256,"_path":257},"abp默认语言规则","/dotnet/2020-07-15-abp-default-language",{"title":259,"_path":260},"Orleans 最佳实践","/dotnet/2020-08-09-orleans-best-practices",{"title":262,"_path":263},"c#特性参数","/dotnet/2020-08-10-param-attribute",{"title":265,"_path":266},".NET Core 获取 HttpContext.Current 以及 AsyncLocal 与 ThreadLocal","/dotnet/2020-08-11-httpcontextaccessor-asynclocal",{"title":268,"_path":269},"Kestrel源码分析","/dotnet/2020-08-15-kestrel-source-code",{"title":271,"_path":272},"ConcurrentDictionary并发字典","/dotnet/2020-08-16-concurrentdictionary",{"title":274,"_path":275},"IOptions、IOptionsMonitor以及IOptionsSnapshot","/dotnet/2020-08-17-netcore-options",{"title":277,"_path":278},".NET Core/Framework 创建委托以大幅度提高反射调用的性能","/dotnet/2020-11-13-reflection-method",{"title":280,"_path":281},"C＃枚举中使用Flags特性","/dotnet/2020-11-24-flags",{"title":283,"_path":284},"谷歌浏览器下netcore登录失败问题","/dotnet/2020-12-11-chrome-login-fail",{"title":286,"_path":287},"Converting between Structs and Byte Arrays","/dotnet/2021-05-01-converting-between-structs-and-byte-arrays",{"title":289,"_path":290},"c#在重写object中的Equal方法时需要对GetHashCode进行重写（Dictionary引用）","/dotnet/2022-08-15-equal-hashcode",{"title":292,"_path":293,"children":294},"Game","/game",[295,298,301,304,307,310,313,316,319,322,325,328,331,334,337],{"title":296,"_path":297},"使用柏林噪声算法生成地图","/game/2021-01-20-perlin-map",{"title":299,"_path":300},"波函数坍塌算法生成地图","/game/2021-01-21-wave-collapse-function",{"title":302,"_path":303},"文明6地图生成算法","/game/2021-01-22-civ-map",{"title":305,"_path":306},"roguelike地牢生成算法","/game/2021-01-23-roguelike-map",{"title":308,"_path":309},"Spelunky关卡生成","/game/2021-01-23-spelunky-map",{"title":311,"_path":312},"Edgar源代码解读","/game/2021-06-12-edgar-code-read",{"title":314,"_path":315},"rpgbuild的一些备注","/game/2021-06-15-rpgbuilder",{"title":317,"_path":318},"游戏人物设计","/game/2021-08-05-game-task-design",{"title":320,"_path":321},"unity gameplay ability源代码解析","/game/2021-12-14-untiy-gameplay-ablility-sourcecode",{"title":323,"_path":324},"苟与剑游戏技能分析","/game/2021-12-21-gyj-skill",{"title":326,"_path":327},"quest machine 使用相关","/game/2022-02-19-quest-machine",{"title":329,"_path":330},"苟与剑中的单位生成方式","/game/2022-03-16-gyj-map",{"title":332,"_path":333},"ecs中实体创建方法","/game/2022-08-03-ecs",{"title":335,"_path":336},"暗黑2怪物等级和掉落规则","/game/2022-08-05-dia2",{"title":338,"_path":339},"行为树源代码解析","/game/2022-08-21-behavior-tree-source-code",{"title":341,"_path":342,"children":343},"Gyj","/gyj",[344,347,350,353,356,359,362,365,368,371,374,377,380,383,386,389],{"title":345,"_path":346},"美术要求","/gyj/2022-06-11-meishuyaoqiu",{"title":348,"_path":349},"游戏基础知识","/gyj/2022-06-12-jichuzhishi",{"title":351,"_path":352},"2022 08 22 地图房间的种类","/gyj/2022-08-22-detufangjiandezhonglei",{"title":354,"_path":355},"2022 08 22 奇遇事件","/gyj/2022-08-22-qiyushijian",{"title":357,"_path":358},"游戏流程","/gyj/2022-08-22-youxiliucheng",{"title":360,"_path":361},"物品产出表","/gyj/2022-08-22-wupinchanchubiao",{"title":363,"_path":364},"玩法","/gyj/2022-08-22-wanfa",{"title":366,"_path":367},"初入江湖","/gyj/2022-08-22-diyizhang",{"title":369,"_path":370},"2022 08 22 职业与工作","/gyj/2022-08-22-zhiyeyugongzuo",{"title":372,"_path":373},"天下霸图研究","/gyj/2022-11-01-tianxiabatu",{"title":375,"_path":376},"流放之路关于伤害公式和技能的分析","/gyj/2022-11-17-liufangzhilu",{"title":378,"_path":379},"门派内容相关","/gyj/2022-11-17-sect",{"title":381,"_path":382},"2022 12 01 养殖","/gyj/2022-12-01-yangzhi",{"title":384,"_path":385},"种植","/gyj/2022-12-01-zhongzhi",{"title":387,"_path":388},"人物属性设计","/gyj/2022-12-15-renwushuxing",{"title":390,"_path":391},"跑商","/gyj/2023-11-01-paoshang",{"title":393,"_path":394,"children":395},"Js","/js",[396,399,402],{"title":397,"_path":398},"如何在TypeScript中使用JS类库","/js/2022-02-12-typescript-use-js",{"title":400,"_path":401},"nuxt3项目初始化失败","/js/2023-05-16-nuxt3-init-fail",{"title":403,"_path":404},"Flex 布局使用","/js/2024-03-17-flex-use",{"title":406,"_path":407,"children":408},"Tool","/tool",[409,412,415,418,421,424,427,430,433,436,439,442,445,448,451,454,457,460,463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508,511,514],{"title":410,"_path":411},"windows发送到手机Ftp","/tool/2019-06-20-windows-send-to-ftp",{"title":413,"_path":414},"windows特殊目录修复","/tool/2019-06-24-shell-folders-are-displayed-with-the-standard-folder-icon-in-windows",{"title":416,"_path":417},"scourcetree  总是需要输入密码","/tool/2019-08-07-sourcetree-git-password",{"title":419,"_path":420},"powershell 常用命令","/tool/2019-08-10-powershell-command",{"title":422,"_path":423},"scoop的使用","/tool/2019-08-20-scoop-use",{"title":425,"_path":426},"使用配置文件来管理NuGet包版本F","/tool/2019-09-02-nuget-manager",{"title":428,"_path":429},"Redis的两种持久化RDB和AOF","/tool/2019-09-02-redis-aof-rdb",{"title":431,"_path":432},"使用 SSH 登陆谷歌云 root 或者 普通账户的方法","/tool/2020-01-02-google-clound-local-login",{"title":434,"_path":435},"CentOS 下安装Shadowsocks 搭建ss","/tool/2020-01-12-centosn-ss-install",{"title":437,"_path":438},"mac下brew 使用","/tool/2020-01-13-brew",{"title":440,"_path":441},"术语中英文对照","/tool/2020-02-05-game_en_zh",{"title":443,"_path":444},"Excel中以文本形式存储的数字","/tool/2020-02-06-excel-text-number",{"title":446,"_path":447},"protobuf序列化的一些问题","/tool/2020-03-25-protobuf-empty-collections",{"title":449,"_path":450},"为博客将 RSS 转为邮件订阅","/tool/2020-06-26-blog-mail-sub",{"title":452,"_path":453},"github下载代码的速度太慢","/tool/2020-06-27-linux-github-slow",{"title":455,"_path":456},"win10开始菜单添加软件以及备份和恢复","/tool/2020-07-02-win10-start-menu",{"title":458,"_path":459},"gitbook的使用","/tool/2020-07-06-gitbook-use",{"title":461,"_path":462},"github actions 简单使用","/tool/2020-07-11-github-actions",{"title":464,"_path":465},"使用hexo建立博客并部署到github","/tool/2020-07-12-hexo-github",{"title":467,"_path":468},"终端下设置代理","/tool/2020-07-13-terminal-proxy",{"title":470,"_path":471},"发现nuget包太占用C盘，怎么办？","/tool/2020-08-30-nuget-is-big",{"title":473,"_path":474},"unity商店下载资源迁移","/tool/2020-11-15-unity-is-big",{"title":476,"_path":477},"关于coding的pages介绍","/tool/2020-11-16-coding-pages",{"title":479,"_path":480},"一些常用的dns服务器","/tool/2021-05-06-dns",{"title":482,"_path":483},"UE4素材破解","/tool/2021-11-06-ue4-view",{"title":485,"_path":486},"安装cockpit通过nginx代理访问","/tool/2021-11-07-cockpit-linux",{"title":488,"_path":489},"Windows LTSC、LTSB、Server 安装 Windows Store 应用商店 ","/tool/2021-11-15-install-windowsstore",{"title":491,"_path":492},"我是如何把 VS Code 插件启动速度从 8 秒减少到 1 秒 ","/tool/2021-12-02-vscode-plugins-big",{"title":494,"_path":495},"云效部署hexo到自己的主机 ","/tool/2021-12-11-yunxiao-liushuixian-hexo",{"title":497,"_path":498},"github 怎么合并原始分支？ ","/tool/2021-12-12-github-sync",{"title":500,"_path":501},"code server安装制作online ide","/tool/2022-01-30-code-server",{"title":503,"_path":504},"rider的使用","/tool/2022-08-02-rider-use",{"title":506,"_path":507},"2022 08 09 Amd Over","/tool/2022-08-09-amd-over",{"title":509,"_path":510},"rider破解","/tool/2022-11-19-rider-po-jie",{"title":512,"_path":513},"stable diffusion install","/tool/2023-01-20-stable-diffusion-install",{"title":515,"_path":516},"CGI, FastCGI, WSGI, uWSGI, uwsgi一文搞懂","/tool/2023-02-15-cgi-fastcgi-wsgi-uswgi",{"title":518,"_path":519,"children":520},"Unity","/unity",[521,524,527,530,533,536,539,542,545,548,551,554,557,560,563,566,569,572,575,578,581,584,587,590,593,596,599,602,605,608,611,614,617,620,623,626,629,632,635,638,641,644,647,650,653,656,659,662,665,668,671,674,677,680,683,686,689,692,695,698,701,704,707,710,713,716,719,722,725,728,731,734],{"title":522,"_path":523},"Unity 导出 Android 64-bit 版本","/unity/2019-06-20-unity-android-x64",{"title":525,"_path":526},"Unity的il2cpp","/unity/2019-06-20-unity-il2cpp-debugger",{"title":528,"_path":529},"googlePlay 发布问题","/unity/2019-06-23-googlplay-pulish",{"title":531,"_path":532},"关于unity的适配问题","/unity/2019-08-09-unity2d-shipei",{"title":534,"_path":535},"一次精通 RectTransform","/unity/2019-08-10-ugui-recttransform",{"title":537,"_path":538},"一次精通 eventmanager","/unity/2019-08-11-ugui-eventmanager",{"title":540,"_path":541},"ugui的eventsystem源码解读","/unity/2019-08-12-ugui-eventsystem-sourcecode",{"title":543,"_path":544},"Unity Raycasters 剖析","/unity/2019-08-12-ugui-raycasters",{"title":546,"_path":547},"关于addressable那些事","/unity/2019-09-01-addressable",{"title":549,"_path":550},"关于spriteAtlas打包那些事","/unity/2019-09-01-spriteatlas",{"title":552,"_path":553},"ilruntime的研究","/unity/2019-09-02-ilruntime",{"title":555,"_path":556},"unity的宏以及添加net框架中未引用的dll","/unity/2019-09-02-unity-reference-dll",{"title":558,"_path":559},"xlua注入源码解读","/unity/2019-09-03-xlua-inject",{"title":561,"_path":562},"如何快速的注入汇编","/unity/2019-09-04-mono.cecil-inject",{"title":564,"_path":565},"2D游戏视差背景的实现","/unity/2019-09-13-parallax-2d",{"title":567,"_path":568},"unity使用代理","/unity/2019-11-15-unity-proxy",{"title":570,"_path":571},"一篇文章搞定Entitas","/unity/2020-01-01-unity-entitas",{"title":573,"_path":574},"unity攻击范围检测的方式区别","/unity/2020-01-11-unity-attack-range-detection-type",{"title":576,"_path":577},"常见的2D碰撞检测","/unity/2020-01-12-collision-detection",{"title":579,"_path":580},"unity攻击范围检测","/unity/2020-01-13-unity-attack-detection",{"title":582,"_path":583},"技能系统","/unity/2020-02-15-skill-system",{"title":585,"_path":586},"游戏buff系统设计","/unity/2020-02-16-buff-system",{"title":588,"_path":589},"角色状态设计","/unity/2020-02-17-character-states",{"title":591,"_path":592},"理解托管堆","/unity/2020-02-18-bestpracticeunderstandingperformanceinunity",{"title":594,"_path":595},"理解自动内存管理","/unity/2020-02-19-understandingautomaticmemorymanagement",{"title":597,"_path":598},"unity 移动平台打包丢失shader的问题","/unity/2020-02-20-shader-lost",{"title":600,"_path":601},"Unity的调试相关","/unity/2020-03-01-unity-debug",{"title":603,"_path":604},"unity启动运行脚本流程","/unity/2020-03-04-unity-startup",{"title":606,"_path":607},"unity的坐标体系","/unity/2020-07-01-unity-coordinate",{"title":609,"_path":610},"2020 07 03 Unity Mesh","/unity/2020-07-03-unity-mesh",{"title":612,"_path":613},"unity Render Pipeline","/unity/2020-07-04-unity-render-pipeline",{"title":615,"_path":616},"Notch Solution","/unity/2020-08-29-notch-solution",{"title":618,"_path":619},"unity 项目dll检查","/unity/2020-08-30-unity-dll-check",{"title":621,"_path":622},"UNITY的垂直同步和帧率","/unity/2020-09-05-unity-vsynccount",{"title":624,"_path":625},"UNITY性能优化流程","/unity/2020-09-10-optimizing-for-performance",{"title":627,"_path":628},"堆栈内存Stack和堆内存Heap","/unity/2020-09-11-stack-heap",{"title":630,"_path":631},"unity的addressables","/unity/2020-09-12-addressables",{"title":633,"_path":634},"游戏中的向量使用","/unity/2020-09-13-vector",{"title":636,"_path":637},"UNITY ECS 详解","/unity/2020-10-15-unity-ecs",{"title":639,"_path":640},"UNITY JOB SYSTEM详解","/unity/2020-10-16-unity-job",{"title":642,"_path":643},"运行时打包图集","/unity/2020-10-17-runtime-spriteatlas",{"title":645,"_path":646},"unity ecs component","/unity/2020-10-18-unity-ecs-component",{"title":648,"_path":649},"基于 Game Object Conversion 和 SubScene 的 DOTS 开发工作流","/unity/2020-10-19-game-object-conversion-and-subscene",{"title":651,"_path":652},"源代码分析world的创建","/unity/2020-10-20-ecs-world",{"title":654,"_path":655},"unity使用platforms构建","/unity/2020-10-21-platform",{"title":657,"_path":658},"Unity rendering order渲染顺序","/unity/2020-10-22-unity-render-order",{"title":660,"_path":661},"关于静态批处理/动态批处理/GPU Instancing /SRP Batcher的详细剖析","/unity/2020-10-23-unity-optimizing-gpu",{"title":663,"_path":664},"unity的ScreenToWorldPoint","/unity/2020-10-24-screentoworldpoint",{"title":666,"_path":667},"URP性能测试","/unity/2020-10-24-unity-urp-performance",{"title":669,"_path":670},"如何使用Unity ECS打造Reactive System？","/unity/2020-11-11-how-to-build-reactive-systems-with-unity-ecs",{"title":672,"_path":673},"Unity中Sprite和UI Image的区别","/unity/2020-11-12-sprite-image-diff",{"title":675,"_path":676},"简单保存工具","/unity/2020-11-13-simple-save",{"title":678,"_path":679},"2020 11 14 Netcode","/unity/2020-11-14-netcode",{"title":681,"_path":682},"ecs中的parent","/unity/2020-11-15-ecs-parent",{"title":684,"_path":685},"ability","/unity/2020-11-16-dotssample",{"title":687,"_path":688},"unity world time system","/unity/2020-11-17-unity-ecs-worldtime",{"title":690,"_path":691},"netcode源代码解读","/unity/2020-11-18-netcode-sourcecode",{"title":693,"_path":694},"pitch yaw roll是什么","/unity/2020-11-29-pitch-yaw-roll",{"title":696,"_path":697},"A Native Collection has not been disposed, resulting in a memory leak. Allocated from:","/unity/2020-12-20-collection-has-not-been-disposed",{"title":699,"_path":700},"解决Unity鼠标坐标点转成世界坐标系坐标点","/unity/2021-01-24-screentoworld",{"title":702,"_path":703},"2021 01 25 Tilemap","/unity/2021-01-25-tilemap",{"title":705,"_path":706},"Unity RenderTexture的应用","/unity/2021-04-11-render-texture",{"title":708,"_path":709},"commandbuff的一些问题","/unity/2021-05-20-ecs-commandbuff-question",{"title":711,"_path":712},"How to Make One Way Platform in unity","/unity/2021-06-13-how-to-make-one-way-platform",{"title":714,"_path":715},"UNITY的渲染顺序","/unity/2021-06-14-unity-render-order",{"title":717,"_path":718},"防止变量引用丢失 FormerlySerializedAs","/unity/2021-07-20-formerlyserializedas",{"title":720,"_path":721},"AI-PLANNER使用","/unity/2021-08-01-ai-planner",{"title":723,"_path":724},"Increased script assembly reload time","/unity/2021-10-01-increased-script-assembly-reload-time",{"title":726,"_path":727},"关于unity的热重载的研究","/unity/2022-01-02-unity-hot-reload",{"title":729,"_path":730},"Editor Iteration Profiler的使用","/unity/2022-01-28-unity-editor-iteration-profiler",{"title":732,"_path":733},"CircleCast和Overlapple的区别是什么","/unity/2022-04-02-circlecast-overlapple-diff",{"title":735,"_path":736},"unity ecs的备忘录","/unity/2022-09-10-ecs-beiwang",1710779041434]