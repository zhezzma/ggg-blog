{"version":3,"file":"IconCSS.HyyeuNtP.js","sources":["../../../../node_modules/nuxt-icon/dist/runtime/IconCSS.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { useAppConfig } from '#imports'\nimport { resolveIconName } from './utils'\n\nconst appConfig = useAppConfig() as {\n  nuxtIcon: {\n    size?: string\n    class?: string\n    aliases?: Record<string, string>\n    iconifyApiOptions?: {\n      url?: string\n      publicApiFallback?: boolean\n    }\n  }\n}\n\nconst props = defineProps({\n  name: {\n    type: String,\n    required: true\n  },\n  size: {\n    type: String,\n    default: ''\n  }\n})\n\nconst iconName = computed(() => {\n  if (appConfig.nuxtIcon?.aliases?.[props.name]) {\n    return appConfig.nuxtIcon.aliases[props.name]\n  }\n  return props.name\n})\nconst resolvedIcon = computed(() => resolveIconName(iconName.value))\nconst iconUrl = computed(() => {\n  const customUrl = appConfig.nuxtIcon?.iconifyApiOptions?.url\n\n  if (customUrl) {\n    // validate the custom Iconify API URL\n    try {\n      new URL(customUrl)\n    } catch (e) {\n      console.warn('Nuxt IconCSS: Invalid custom Iconify API URL')\n      return\n    }\n  }\n\n  const baseUrl = customUrl || 'https://api.iconify.design'\n  return `url('${baseUrl}/${resolvedIcon.value.prefix}/${resolvedIcon.value.name}.svg')`\n})\nconst sSize = computed(() => {\n  // Disable size if appConfig.nuxtIcon.size === false\n  if (!props.size && typeof appConfig.nuxtIcon?.size === 'boolean' && !appConfig.nuxtIcon?.size) {\n    return undefined\n  }\n  const size = props.size || appConfig.nuxtIcon?.size || '1em'\n  if (String(Number(size)) === size) {\n    return `${size}px`\n  }\n  return size\n})\n</script>\n\n<template>\n  <span :style=\"{ width: sSize, height: sSize }\" />\n</template>\n\n<style scoped>\nspan {\n  display: inline-block;\n  vertical-align: middle;\n  background-color: currentColor;\n  -webkit-mask-image: v-bind(iconUrl);\n  mask-image: v-bind(iconUrl);\n  -webkit-mask-repeat: no-repeat;\n  mask-repeat: no-repeat;\n  -webkit-mask-size: 100% 100%;\n  mask-size: 100% 100%;\n}\n</style>\n"],"names":["appConfig","useAppConfig","props","__props","iconName","computed","_b","_a","resolvedIcon","resolveIconName","iconUrl","customUrl","sSize","size","_c"],"mappings":"wOAKA,MAAMA,EAAYC,IAYZC,EAAQC,EAWRC,EAAWC,EAAS,IAAM,SAC9B,OAAIC,GAAAC,EAAAP,EAAU,WAAV,YAAAO,EAAoB,UAApB,MAAAD,EAA8BJ,EAAM,MAC/BF,EAAU,SAAS,QAAQE,EAAM,IAAI,EAEvCA,EAAM,IAAA,CACd,EACKM,EAAeH,EAAS,IAAMI,EAAgBL,EAAS,KAAK,CAAC,EAC7DM,EAAUL,EAAS,IAAM,SACvB,MAAAM,GAAYL,GAAAC,EAAAP,EAAU,WAAV,YAAAO,EAAoB,oBAApB,YAAAD,EAAuC,IAEzD,GAAIK,EAEE,GAAA,CACF,IAAI,IAAIA,CAAS,OACP,CACV,QAAQ,KAAK,8CAA8C,EAC3D,MACF,CAIK,MAAA,QADSA,GAAa,4BACP,IAAIH,EAAa,MAAM,MAAM,IAAIA,EAAa,MAAM,IAAI,QAAA,CAC/E,EACKI,EAAQP,EAAS,IAAM,WAEvB,GAAA,CAACH,EAAM,MAAQ,QAAOK,EAAAP,EAAU,WAAV,YAAAO,EAAoB,OAAS,WAAa,GAACD,EAAAN,EAAU,WAAV,MAAAM,EAAoB,MAChF,OAET,MAAMO,EAAOX,EAAM,QAAQY,EAAAd,EAAU,WAAV,YAAAc,EAAoB,OAAQ,MACvD,OAAI,OAAO,OAAOD,CAAI,CAAC,IAAMA,EACpB,GAAGA,CAAI,KAETA,CAAA,CACR","x_google_ignoreList":[0]}