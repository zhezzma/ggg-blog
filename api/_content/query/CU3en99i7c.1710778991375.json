{"_path":"/js/2022-02-12-typescript-use-js","_dir":"js","_draft":false,"_partial":false,"_locale":"","title":"如何在TypeScript中使用JS类库","description":"使用流程首先要清楚类库是什么类型，不同的类库有不同的使用方式寻找声明文件JS类库一般有三类：全局类库、模块类库、UMD库。例如，jQuery是一种UMD库，既可以通过全局方式来引用，也可以模块化引用。声明文件当我们要使用一个类库时，需要ts声明文件，对外暴露API，有时候声明文件在源码中，大部分是单独提供额外安装。比如jQuery需要额外安装类型声明包。幸运的是，大部分的类库，TS社区都有声明文件。名称为@types/类库名，需要去这个网站搜一下http://microsoft.github.io/TypeSearch/如果没有，需要自己去写一个，这也是为社区贡献的好机会。http://def","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"使用流程"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"使用流程"}]}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"首先要清楚类库是什么类型，不同的类库有不同的使用方式"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"寻找声明文件"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"JS类库一般有三类：全局类库、模块类库、UMD库。例如，jQuery是一种UMD库，既可以通过全局方式来引用，也可以模块化引用。"}]},{"type":"element","tag":"h3","props":{"id":"声明文件"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"声明文件"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"当我们要使用一个类库时，需要ts声明文件，对外暴露API，有时候声明文件在源码中，大部分是单独提供额外安装。比如jQuery需要额外安装类型声明包。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"幸运的是，大部分的类库，TS社区都有声明文件。名称为@types/类库名，需要去这个网站搜一下"},{"type":"element","tag":"a","props":{"href":"https://microsoft.github.io/TypeSearch/","rel":["nofollow"]},"children":[{"type":"text","value":"http://"}]},{"type":"element","tag":"a","props":{"href":"http://microsoft.github.io/TypeSearch/","rel":["nofollow"]},"children":[{"type":"text","value":"microsoft.github.io/TypeSearch/"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果没有，需要自己去写一个，这也是为社区贡献的好机会。"},{"type":"element","tag":"a","props":{"href":"http://definitelytyped.org/guides/contributing.html","rel":["nofollow"]},"children":[{"type":"text","value":"http://definitelytyped.org/guides/contributing.html"}]},{"type":"text","value":"这里提供了一些写声明文件的方法。在写ts声明文件的时候，暂时用不到的API可以可以不写。>"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"下面我将演示，如何在ts文件中使用三种类库。首先准备三个js文件，分别表示全局类库、模块类库、UMD库。"}]},{"type":"element","tag":"pre","props":{"code":"// 全局类库  global-lib.js\nfunction globalLib(options) {\n   console.log(options);\n}\nglobalLib.version = \"1.0.0\";\nglobalLib.doSomething = function () {\n   console.log('globalLib do something');\n};\n\n// 模块类库  module-lib.js\nconst version = \"1.0.0\";\nfunction doSomething() {\n   console.log('moduleLib do something');\n}\nfunction moduleLib(options) {\n   console.log(options);\n}\nmoduleLib.version = version;\nmoduleLib.doSomething = doSomething;\nmodule.exports = moduleLib;\n\n// UMD库  umd-lib.js\n(function (root, factory) {\n   if(typeof define === \"function\" && define.amd)\n   {\n      define(factory);\n   }else if(typeof module === \"object\" && module.exports)\n   {\n      module.exports = factory();\n   }else\n   {\n      root.umdLib = factory();\n   }\n})(this, function () {\n   return {\n      version: \"1.0.2\",\n      doSomething() {\n         console.log('umdLib do something');\n      }\n   }\n});\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 全局类库  global-lib.js\nfunction globalLib(options) {\n   console.log(options);\n}\nglobalLib.version = \"1.0.0\";\nglobalLib.doSomething = function () {\n   console.log('globalLib do something');\n};\n\n// 模块类库  module-lib.js\nconst version = \"1.0.0\";\nfunction doSomething() {\n   console.log('moduleLib do something');\n}\nfunction moduleLib(options) {\n   console.log(options);\n}\nmoduleLib.version = version;\nmoduleLib.doSomething = doSomething;\nmodule.exports = moduleLib;\n\n// UMD库  umd-lib.js\n(function (root, factory) {\n   if(typeof define === \"function\" && define.amd)\n   {\n      define(factory);\n   }else if(typeof module === \"object\" && module.exports)\n   {\n      module.exports = factory();\n   }else\n   {\n      root.umdLib = factory();\n   }\n})(this, function () {\n   return {\n      version: \"1.0.2\",\n      doSomething() {\n         console.log('umdLib do something');\n      }\n   }\n});\n"}]}]},{"type":"element","tag":"h2","props":{"id":"全局类库"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"全局类库"}]}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在HTML文件标签中引入该库"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"将写好的声明文件与js库放在同一文件夹下，命名相同，后缀名为.d.ts"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"此时可以在ts文件中使用全局API"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果此时编译器未报错，而浏览器报错not defined，可能是html中引入的路径是相对路径，改成绝对路径即可（以项目目录为根目录）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"声明文件global-lib.d.ts"}]},{"type":"element","tag":"pre","props":{"code":"declare function globalLib(options: globalLib.Options): void;\ndeclare namespace globalLib{\n   const version: string;\n   function doSomething(): void;\n   interface Options {\n      [key: string]: any,\n   }\n}\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"declare function globalLib(options: globalLib.Options): void;\ndeclare namespace globalLib{\n   const version: string;\n   function doSomething(): void;\n   interface Options {\n      [key: string]: any,\n   }\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在ts文件中使用该库："}]},{"type":"element","tag":"pre","props":{"code":"globalLib({x:1});\nglobalLib.doSomething();\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"globalLib({x:1});\nglobalLib.doSomething();\n"}]}]},{"type":"element","tag":"h2","props":{"id":"模块类库"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"模块类库"}]}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"将声明文件放在相同的目录下"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在ts中引入"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"声明文件 module-lib.d.ts"}]},{"type":"element","tag":"pre","props":{"code":"declare function moduleLib(options: Options): void;\ninterface Options {\n   [key: string]: any,\n}\ndeclare namespace moduleLib{\n   const version: string;\n   function doSomething(): void;\n}\nexport = moduleLib; // 这样写兼容性更好\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"declare function moduleLib(options: Options): void;\ninterface Options {\n   [key: string]: any,\n}\ndeclare namespace moduleLib{\n   const version: string;\n   function doSomething(): void;\n}\nexport = moduleLib; // 这样写兼容性更好\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ts中使用类库"}]},{"type":"element","tag":"pre","props":{"code":"import moduleLib from './Libs/module-lib.js';\nmoduleLib.doSomething();\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"import moduleLib from './Libs/module-lib.js';\nmoduleLib.doSomething();\n"}]}]},{"type":"element","tag":"h2","props":{"id":"umd类库"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"UMD类库"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"UMD库有两种使用方式："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"引入全局类库的方式"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"模块类库引入的方式"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"其中，在使用全局类库的引入方式时，编译器会提示，不建议这样做，需要在tsconfig.json中打开allUmdGlobalAccess配置项可以消除提示。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"声明文件 umd-lib.d.ts"}]},{"type":"element","tag":"pre","props":{"code":"declare namespace umdLib {\n   const version: string;\n   function doSomething(): void;\n}\nexport as namespace umdLib // 专门为umd库准备的语句，不可缺少\nexport = umdLib\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"declare namespace umdLib {\n   const version: string;\n   function doSomething(): void;\n}\nexport as namespace umdLib // 专门为umd库准备的语句，不可缺少\nexport = umdLib\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ts中使用UMD库（不再演示全局使用方式）"}]},{"type":"element","tag":"pre","props":{"code":"import umdLib from './Libs/umd-lib'\numdLib.doSomething();\nconsole.log(umdLib.version);\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"import umdLib from './Libs/umd-lib'\numdLib.doSomething();\nconsole.log(umdLib.version);\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"例：在ts中使用jQuery（不演示全局引入方式）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"先安装jquery及其声明文件"}]},{"type":"element","tag":"pre","props":{"code":"npm install -D jquery @types/jquery\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"npm install -D jquery @types/jquery\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"使用："}]},{"type":"element","tag":"pre","props":{"code":"import $ from 'jquery';\n$(\".app\").css(\"color\",\"red\");\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"import $ from 'jquery';\n$(\".app\").css(\"color\",\"red\");\n"}]}]},{"type":"element","tag":"h2","props":{"id":"为类库添加插件"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"为类库添加插件"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"即为类库添加自定义的方法"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"其中UMD库和模块类库的添加插件方法一致。"}]},{"type":"element","tag":"pre","props":{"code":"// 为全局类库增添自定义方法\ndeclare global {\n   namespace globalLib {\n      function myFunction(): void\n   }\n}\nglobalLib.myFunction = () =>{console.log(\"global插件\")};\n\n// 为模块类库添加自定义方法\ndeclare module \"./Libs/module-lib.js\"{\n   export function myFunction(): void;\n} // 为module-lib类库声明myFunction方法\nmoduleLib.myFunction = () => {console.log(\"module插件\")}; // 定义自定义方法\n\n// 为UMD库添加自定义方法\ndeclare module \"./Libs/umd-lib.js\"{\n   export function myFunction(): void;\n} // 为umd-lib类库声明myFunction方法\numdLib.myFunction = () => {console.log(\"umd插件\")}; // 定义自定义方法\n\nglobalLib.myFunction();\nmoduleLib.myFunction();\numdLib.myFunction();\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 为全局类库增添自定义方法\ndeclare global {\n   namespace globalLib {\n      function myFunction(): void\n   }\n}\nglobalLib.myFunction = () =>{console.log(\"global插件\")};\n\n// 为模块类库添加自定义方法\ndeclare module \"./Libs/module-lib.js\"{\n   export function myFunction(): void;\n} // 为module-lib类库声明myFunction方法\nmoduleLib.myFunction = () => {console.log(\"module插件\")}; // 定义自定义方法\n\n// 为UMD库添加自定义方法\ndeclare module \"./Libs/umd-lib.js\"{\n   export function myFunction(): void;\n} // 为umd-lib类库声明myFunction方法\numdLib.myFunction = () => {console.log(\"umd插件\")}; // 定义自定义方法\n\nglobalLib.myFunction();\nmoduleLib.myFunction();\numdLib.myFunction();\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"例如，为类库moment增添自定义方法（jQuery不可以，需要使用官方提供的API）"}]},{"type":"element","tag":"pre","props":{"code":"npm install -D moment @types/moment\n\nimport m from 'moment';\ndeclare module 'moment'{\n   export function myFunction(): void;\n}\nm.myFunction = () => {console.log(\"moment插件\")};\n\nm.myFunction();\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"npm install -D moment @types/moment\n\nimport m from 'moment';\ndeclare module 'moment'{\n   export function myFunction(): void;\n}\nm.myFunction = () => {console.log(\"moment插件\")};\n\nm.myFunction();\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"使用流程","depth":2,"text":"使用流程","children":[{"id":"声明文件","depth":3,"text":"声明文件"}]},{"id":"全局类库","depth":2,"text":"全局类库"},{"id":"模块类库","depth":2,"text":"模块类库"},{"id":"umd类库","depth":2,"text":"UMD类库"},{"id":"为类库添加插件","depth":2,"text":"为类库添加插件"}]}},"_type":"markdown","_id":"content:js:2022-02-12-TypeScript-use-Js.md","_source":"content","_file":"js/2022-02-12-TypeScript-use-Js.md","_extension":"md","date":"2022-02-12"}