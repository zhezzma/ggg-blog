{"_path":"/unity/2021-08-01-ai-planner","_dir":"unity","_draft":false,"_partial":false,"_locale":"","title":"AI-PLANNER使用","description":"定义实体和组件SemanticObject  为gameobject添加各种componentTraits : 相当于component.可以定义各种属性定义处理系统Problem  依托 DecisionController运行计划StateTermination  为Problem  提供中止条件SemanticQuery   根据query为 DecisionController提供实体Action : 相当于一个特殊的system的基类.他定义了参数,和处理条件.以及effects和reward,但是没有实现具体的方法(executionInfo),executionInfo是需要手动","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"定义实体和组件"},"children":[{"type":"text","value":"定义实体和组件"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"SemanticObject  为gameobject添加各种component"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Traits : 相当于component.可以定义各种属性"}]}]},{"type":"element","tag":"h2","props":{"id":"定义处理系统"},"children":[{"type":"text","value":"定义处理系统"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Problem  依托 DecisionController运行计划"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"StateTermination  为Problem  提供中止条件"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"SemanticQuery   根据query为 DecisionController提供实体"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Action : 相当于一个特殊的system的基类.他定义了参数,和处理条件.以及effects和reward,但是没有实现具体的方法(executionInfo),executionInfo是需要手动定义的"},{"type":"element","tag":"pre","props":{"code":"    public abstract class PlannerActionSystem : SystemBase\n    {\n\n        List<ParameterDefinition> m_Parameters = new List<ParameterDefinition>();\n\n\n        List<Operation> m_Preconditions = new List<Operation>();\n\n\n\n        List<ParameterDefinition> m_CreatedObjects = new List<ParameterDefinition>();\n\n\n        List<string> m_RemovedObjects = new List<string>();\n\n\n        List<Operation> m_ObjectModifiers = new List<Operation>();\n\n\n        float m_Reward;\n\n        List<CustomRewardData> m_CustomRewards;\n\n\n        Unity.AI.Planner.Controller.ActionExecutionInfo executionInfo;\n\n\n        protected override void OnUpdate()\n        {\n            //检查条件\n\n            //将参数传给executionInfo\n\n            //然后执行方法\n            \n            \n            //处理effect.对object进行修改,创建,删除\n            \n            //然后处理reward\n            \n        }\n\n    }\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    public abstract class PlannerActionSystem : SystemBase\n    {\n\n        List<ParameterDefinition> m_Parameters = new List<ParameterDefinition>();\n\n\n        List<Operation> m_Preconditions = new List<Operation>();\n\n\n\n        List<ParameterDefinition> m_CreatedObjects = new List<ParameterDefinition>();\n\n\n        List<string> m_RemovedObjects = new List<string>();\n\n\n        List<Operation> m_ObjectModifiers = new List<Operation>();\n\n\n        float m_Reward;\n\n        List<CustomRewardData> m_CustomRewards;\n\n\n        Unity.AI.Planner.Controller.ActionExecutionInfo executionInfo;\n\n\n        protected override void OnUpdate()\n        {\n            //检查条件\n\n            //将参数传给executionInfo\n\n            //然后执行方法\n            \n            \n            //处理effect.对object进行修改,创建,删除\n            \n            //然后处理reward\n            \n        }\n\n    }\n"}]}]}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"actions"},"children":[{"type":"text","value":"actions"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"motives  相当于 preconditions   ..需要一些设定才会执行这个"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Requirements   也可以使用preconditions代替   ,"}]}]},{"type":"element","tag":"h2","props":{"id":"domain"},"children":[{"type":"text","value":"domain"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"维护了一个entities列表,当entity触发了OnTriggerEnter事件会增加到这个列表中."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"aiplanner倒是不需要这个..他们是通过entity和component进行目标查找的"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"定义实体和组件","depth":2,"text":"定义实体和组件"},{"id":"定义处理系统","depth":2,"text":"定义处理系统"},{"id":"actions","depth":2,"text":"actions"},{"id":"domain","depth":2,"text":"domain"}]}},"_type":"markdown","_id":"content:unity:2021-08-01-AI-Planner.md","_source":"content","_file":"unity/2021-08-01-AI-Planner.md","_extension":"md","date":"2021-08-01"}