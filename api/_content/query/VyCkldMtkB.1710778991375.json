{"_path":"/game/2022-08-03-ecs","_dir":"game","_draft":false,"_partial":false,"_locale":"","title":"ecs中实体创建方法","description":"代码中创建实体,然后绑定view在link的时候,创建相关实体SpaceWaterList.cs中,这种注意创建的实体和parent没有关系..如果是在land中,需要在销毁land的时候,同时销毁该实体.则不能使用该方法..public void Link(World world, Entity entity, params object[] list)\n{\n    for (int i = 0; i < this.Spawners.Count; i++)\n    {\n        var waterEntity = world.EntityManager.CreateEntity();\n","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"代码中创建实体然后绑定view"},"children":[{"type":"text","value":"代码中创建实体,然后绑定view"}]},{"type":"element","tag":"h2","props":{"id":"在link的时候创建相关实体"},"children":[{"type":"text","value":"在link的时候,创建相关实体"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"SpaceWaterList.cs中,这种注意创建的实体和parent没有关系..如果是在land中,需要在销毁land的时候,同时销毁该实体.则不能使用该方法.."}]}]},{"type":"element","tag":"pre","props":{"code":"public void Link(World world, Entity entity, params object[] list)\n{\n    for (int i = 0; i < this.Spawners.Count; i++)\n    {\n        var waterEntity = world.EntityManager.CreateEntity();\n\n        world.EntityManager.AddComponentObject(waterEntity,this.Spawners[i]); \n\n        this.Spawners[i].gameObject.Link(world, waterEntity, entity);\n    }\n}\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"public void Link(World world, Entity entity, params object[] list)\n{\n    for (int i = 0; i < this.Spawners.Count; i++)\n    {\n        var waterEntity = world.EntityManager.CreateEntity();\n\n        world.EntityManager.AddComponentObject(waterEntity,this.Spawners[i]); \n\n        this.Spawners[i].gameObject.Link(world, waterEntity, entity);\n    }\n}\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"SpaceNPCList.cs中,通过ConverEntitys.ConvertGameObejct对游戏对象进行转换..注意其上的"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ConvertToEntity"}]},{"type":"text","value":"组件转换目标设置为"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"none"}]},{"type":"text","value":" ,在这里"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"SpawnerAuthoring"}]},{"type":"text","value":" 可以继承"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"DeclareParentBehaviour"}]},{"type":"text","value":" 就可以设置parent."}]}]},{"type":"element","tag":"pre","props":{"code":"    public List<SpawnerAuthoring> Spawners = new List<SpawnerAuthoring>();\n    \n    public void Link(World world, Entity entity, params object[] list)\n    {\n        foreach (var item in this.Spawners)\n        {\n            ConverEntitys.ConvertGameObejct(world, item.gameObject, entity);\n        }\n    }\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    public List<SpawnerAuthoring> Spawners = new List<SpawnerAuthoring>();\n    \n    public void Link(World world, Entity entity, params object[] list)\n    {\n        foreach (var item in this.Spawners)\n        {\n            ConverEntitys.ConvertGameObejct(world, item.gameObject, entity);\n        }\n    }\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"代码中创建实体然后绑定view","depth":2,"text":"代码中创建实体,然后绑定view"},{"id":"在link的时候创建相关实体","depth":2,"text":"在link的时候,创建相关实体"}]}},"_type":"markdown","_id":"content:game:2022-08-03-ecs.md","_source":"content","_file":"game/2022-08-03-ecs.md","_extension":"md","date":"2022-08-03"}