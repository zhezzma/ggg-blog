[{"data":1,"prerenderedAt":1030},["Reactive",2],{"content-query-323JCemAU8":3,"content-navigation-8C37fagqQL":448},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":442,"_id":443,"_source":444,"_file":445,"_extension":446,"date":447},"/tool/2019-08-07-sourcetree-git-password","tool",false,"","scourcetree  总是需要输入密码","Git密钥存储相关幸运的是，Git 拥有一个凭证系统来处理这个事情。 下面有一些 Git 的选项：默认所有都不缓存。 每一次连接都会询问你的用户名和密码。“cache” 模式会将凭证存放在内存中一段时间。 密码永远不会被存储在磁盘中，并且在15分钟后从内存中清除。“store” 模式会将凭证用明文的形式存放在磁盘中，并且永不过期。 这意味着除非你修改了你在 Git 服务器上的密码，否则你永远不需要再次输入你的凭证信息。 这种方式的缺点是你的密码是用明文的方式存放在你的 home 目录下。如果你使用的是 Mac，Git 还有一种 “osxkeychain” 模式，它会将凭证缓存到你系统用户的钥匙",{"type":11,"children":12,"toc":429},"root",[13,22,28,69,75,86,96,102,110,116,124,134,140,148,157,189,195,204,225,231,236,244,249,256,261,270,275,283,289,293,302,306,314,319,327,332,340,345,352,357,362,367,378,383,388,393,398,411,416],{"type":14,"tag":15,"props":16,"children":18},"element","h2",{"id":17},"git密钥存储相关",[19],{"type":20,"value":21},"text","Git密钥存储相关",{"type":14,"tag":23,"props":24,"children":25},"p",{},[26],{"type":20,"value":27},"幸运的是，Git 拥有一个凭证系统来处理这个事情。 下面有一些 Git 的选项：",{"type":14,"tag":29,"props":30,"children":31},"ul",{},[32,38,43,48,53],{"type":14,"tag":33,"props":34,"children":35},"li",{},[36],{"type":20,"value":37},"默认所有都不缓存。 每一次连接都会询问你的用户名和密码。",{"type":14,"tag":33,"props":39,"children":40},{},[41],{"type":20,"value":42},"“cache” 模式会将凭证存放在内存中一段时间。 密码永远不会被存储在磁盘中，并且在15分钟后从内存中清除。",{"type":14,"tag":33,"props":44,"children":45},{},[46],{"type":20,"value":47},"“store” 模式会将凭证用明文的形式存放在磁盘中，并且永不过期。 这意味着除非你修改了你在 Git 服务器上的密码，否则你永远不需要再次输入你的凭证信息。 这种方式的缺点是你的密码是用明文的方式存放在你的 home 目录下。",{"type":14,"tag":33,"props":49,"children":50},{},[51],{"type":20,"value":52},"如果你使用的是 Mac，Git 还有一种 “osxkeychain” 模式，它会将凭证缓存到你系统用户的钥匙串中。 这种方式将凭证存放在磁盘中，并且永不过期，但是是被加密的，这种加密方式与存放 HTTPS 凭证以及 Safari 的自动填写是相同的。",{"type":14,"tag":33,"props":54,"children":55},{},[56,58,67],{"type":20,"value":57},"如果你使用的是 Windows，你可以安装一个叫做 “winstore” 的辅助工具。 这和上面说的 “osxkeychain” 十分类似，但是是使用 Windows Credential Store 来控制敏感信息。 可以在 ",{"type":14,"tag":59,"props":60,"children":64},"a",{"href":61,"rel":62},"https://gitcredentialstore.codeplex.com/",[63],"nofollow",[65],{"type":20,"value":66},"https://gitcredentialstore.codeplex.com",{"type":20,"value":68}," 下载。",{"type":14,"tag":15,"props":70,"children":72},{"id":71},"推荐使用凭证存储模式-manager",[73],{"type":20,"value":74},"推荐使用凭证存储模式 \"manager\"",{"type":14,"tag":29,"props":76,"children":77},{},[78,83],{"type":14,"tag":33,"props":79,"children":80},{},[81],{"type":20,"value":82},"在这里对比 \"wincred\" 和 \"manager\"的区别",{"type":14,"tag":33,"props":84,"children":85},{},[],{"type":14,"tag":87,"props":88,"children":90},"pre",{"code":89},"-   **相同点：**\n\n-\n\n    -   都会将用户信息存储到Windows凭据管理器中\n",[91],{"type":14,"tag":92,"props":93,"children":94},"code",{"__ignoreMap":7},[95],{"type":20,"value":89},{"type":14,"tag":29,"props":97,"children":98},{},[99],{"type":14,"tag":33,"props":100,"children":101},{},[],{"type":14,"tag":87,"props":103,"children":105},{"code":104},"-   **不同点：**\n\n-\n\n    -   Windows凭据管理器中**用户信息是否加密**\n",[106],{"type":14,"tag":92,"props":107,"children":108},{"__ignoreMap":7},[109],{"type":20,"value":104},{"type":14,"tag":29,"props":111,"children":112},{},[113],{"type":14,"tag":33,"props":114,"children":115},{},[],{"type":14,"tag":87,"props":117,"children":119},{"code":118},"-\n\n    -   \"wincred\" 模式下的用户信息展示如下\n",[120],{"type":14,"tag":92,"props":121,"children":122},{"__ignoreMap":7},[123],{"type":20,"value":118},{"type":14,"tag":87,"props":125,"children":129},{"code":126,"language":20,"meta":7,"className":127},"Internet 地址或网络地址：git:https://用户名@github.com； \n用户名：真实用户名 \n",[128],"language-text",[130],{"type":14,"tag":92,"props":131,"children":132},{"__ignoreMap":7},[133],{"type":20,"value":126},{"type":14,"tag":29,"props":135,"children":136},{},[137],{"type":14,"tag":33,"props":138,"children":139},{},[],{"type":14,"tag":87,"props":141,"children":143},{"code":142},"-\n\n    -   \"manager\" 模式下的用户信息展示如下\n",[144],{"type":14,"tag":92,"props":145,"children":146},{"__ignoreMap":7},[147],{"type":20,"value":142},{"type":14,"tag":87,"props":149,"children":152},{"code":150,"language":20,"meta":7,"className":151},"Internet 地址或网络地址：git:https://github.com； \n用户名：PersonalAccessToken\n",[128],[153],{"type":14,"tag":92,"props":154,"children":155},{"__ignoreMap":7},[156],{"type":20,"value":150},{"type":14,"tag":29,"props":158,"children":159},{},[160],{"type":14,"tag":33,"props":161,"children":162},{},[163,165,171,173,180,182,187],{"type":20,"value":164},"很明显，在",{"type":14,"tag":166,"props":167,"children":168},"strong",{},[169],{"type":20,"value":170},"用户信息暴露",{"type":20,"value":172},"的情况下，其他人很容易通过 ",{"type":14,"tag":59,"props":174,"children":177},{"href":175,"rel":176},"https://%E7%94%A8%E6%88%B7%E5%90%8D@%5Bhttp://github.com%5D(https://link.zhihu.com/?target=http%3A//github.com)",[63],[178],{"type":20,"value":179},"https://用户名@[http://github.com](https://link.zhihu.com/?target=http%3A//github.com)",{"type":20,"value":181}," 访问到路径对应的项目，为了避免这种",{"type":14,"tag":166,"props":183,"children":184},{},[185],{"type":20,"value":186},"风险",{"type":20,"value":188},"的存在，我们可以安装 “Git Credential Manager for Windows” 的辅助工具。",{"type":14,"tag":190,"props":191,"children":193},"h3",{"id":192},"store的使用",[194],{"type":20,"value":192},{"type":14,"tag":23,"props":196,"children":197},{},[198],{"type":14,"tag":92,"props":199,"children":201},{"className":200},[],[202],{"type":20,"value":203},"git config --global credential.helper store ",{"type":14,"tag":23,"props":205,"children":206},{},[207,209,215,217,223],{"type":20,"value":208},"“store” 模式可以接受一个 ",{"type":14,"tag":92,"props":210,"children":212},{"className":211},[],[213],{"type":20,"value":214},"--file \u003Cpath>",{"type":20,"value":216}," 参数，可以自定义存放密码的文件路径（默认是 ",{"type":14,"tag":92,"props":218,"children":220},{"className":219},[],[221],{"type":20,"value":222},"~/.git-credentials",{"type":20,"value":224}," ）",{"type":14,"tag":190,"props":226,"children":228},{"id":227},"微软特有的git-credential-manager",[229],{"type":20,"value":230},"微软特有的Git Credential Manager",{"type":14,"tag":23,"props":232,"children":233},{},[234],{"type":20,"value":235},"WINDOS部分版本的GIT会提示",{"type":14,"tag":87,"props":237,"children":239},{"code":238},"git: 'credential-cache' is not a git command. See 'get --help'.\n",[240],{"type":14,"tag":92,"props":241,"children":242},{"__ignoreMap":7},[243],{"type":20,"value":238},{"type":14,"tag":23,"props":245,"children":246},{},[247],{"type":20,"value":248},"实际上是缺少微软的 Git Credential Manager",{"type":14,"tag":250,"props":251,"children":253},"h4",{"id":252},"安裝-git-credential-manager-for-windows解决",[254],{"type":20,"value":255},"安裝 Git Credential Manager for Windows解决",{"type":14,"tag":23,"props":257,"children":258},{},[259],{"type":20,"value":260},"最新的下载地址为：",{"type":14,"tag":23,"props":262,"children":263},{},[264],{"type":14,"tag":59,"props":265,"children":268},{"href":266,"rel":267},"https://github.com/Microsoft/Git-Credential-Manager-for-Windows/releases/latest",[63],[269],{"type":20,"value":266},{"type":14,"tag":23,"props":271,"children":272},{},[273],{"type":20,"value":274},"下载安装完后可以通过命令进行查看是否生效",{"type":14,"tag":87,"props":276,"children":278},{"code":277},"git config --global credential.helper manager\n",[279],{"type":14,"tag":92,"props":280,"children":281},{"__ignoreMap":7},[282],{"type":20,"value":277},{"type":14,"tag":250,"props":284,"children":286},{"id":285},"安裝-git-credential-manager-core解决",[287],{"type":20,"value":288},"安裝 Git-Credential-Manager-Core解决",{"type":14,"tag":23,"props":290,"children":291},{},[292],{"type":20,"value":260},{"type":14,"tag":23,"props":294,"children":295},{},[296],{"type":14,"tag":59,"props":297,"children":300},{"href":298,"rel":299},"https://github.com/microsoft/Git-Credential-Manager-Core",[63],[301],{"type":20,"value":298},{"type":14,"tag":23,"props":303,"children":304},{},[305],{"type":20,"value":274},{"type":14,"tag":87,"props":307,"children":309},{"code":308},"git config --global credential.helper manager-core\n",[310],{"type":14,"tag":92,"props":311,"children":312},{"__ignoreMap":7},[313],{"type":20,"value":308},{"type":14,"tag":250,"props":315,"children":317},{"id":316},"检查验证工具是否在path中",[318],{"type":20,"value":316},{"type":14,"tag":87,"props":320,"children":322},{"code":321},"git config --system --list\n\ncore.symlinks=false\ncore.autocrlf=true\ncore.fscache=true\ncolor.diff=auto\ncolor.status=auto\ncolor.branch=auto\ncolor.interactive=true\nhelp.format=html\ndiff.astextplain.textconv=astextplain\nrebase.autosquash=true\nfilter.lfs.clean=git-lfs clean -- %f\nfilter.lfs.smudge=git-lfs smudge -- %f\nfilter.lfs.process=git-lfs filter-process\nfilter.lfs.required=true\ncredential.helper=!\"D:/Application/Scoop/apps/git/2.32.0.windows.1/mingw64/libexec/git-core/git-credential-manager-core.exe\"\n",[323],{"type":14,"tag":92,"props":324,"children":325},{"__ignoreMap":7},[326],{"type":20,"value":321},{"type":14,"tag":23,"props":328,"children":329},{},[330],{"type":20,"value":331},"如果提交的时候仍有问题,提示xxxxcommad不可用.查看下你现在使用的credential.helper是否在path中.如果不在则进行手动添加",{"type":14,"tag":87,"props":333,"children":335},{"code":334},"D:\\Application\\Scoop\\apps\\git\\2.32.0.windows.1\\mingw64\\libexec\\git-core\n",[336],{"type":14,"tag":92,"props":337,"children":338},{"__ignoreMap":7},[339],{"type":20,"value":334},{"type":14,"tag":23,"props":341,"children":342},{},[343],{"type":20,"value":344},"如果使用的是sourcetree 还得查看,他默认使用的git是不是全局的",{"type":14,"tag":346,"props":347,"children":349},"h1",{"id":348},"sourcetree删除git密码",[350],{"type":20,"value":351},"SourceTree删除GIT密码",{"type":14,"tag":15,"props":353,"children":355},{"id":354},"store",[356],{"type":20,"value":354},{"type":14,"tag":23,"props":358,"children":359},{},[360],{"type":20,"value":361},"删除~/.git-credentials",{"type":14,"tag":15,"props":363,"children":365},{"id":364},"manager",[366],{"type":20,"value":364},{"type":14,"tag":23,"props":368,"children":369},{},[370,372],{"type":20,"value":371},"windows存储的初始密码账号不对，导致每次请求远程url都会报错，我们要到控制面板\\用户帐户\\凭据管理器中手动更改我们的credential凭证;如下，是我的凭证配置；只需要编辑下即可，当然你也可以删除你要请求的远程的凭证,我没试过，当你git pull，GIT会让你输入一次用户明和密码，以后每次请求，GIT会从windows凭证中查找；",{"type":14,"tag":373,"props":374,"children":377},"img",{"alt":375,"src":376},"在这里插入图片描述","/images/2019-08-07-sourcetree-git-password/20190404111514753.png",[],{"type":14,"tag":15,"props":379,"children":381},{"id":380},"其他",[382],{"type":20,"value":380},{"type":14,"tag":23,"props":384,"children":385},{},[386],{"type":20,"value":387},"当GIT服务器修改密码后，sourcetree本地记住的密码，会导致提交代码失败。\n本地删除当前用户目录下保存密码的文件，文件路径：\nC:\\Users\\wuxiaoyuan\\AppData\\Local\\Atlassian\\SourceTree\\passwd\n清空文件内容即可",{"type":14,"tag":346,"props":389,"children":391},{"id":390},"同网站多账号的问题",[392],{"type":20,"value":390},{"type":14,"tag":23,"props":394,"children":395},{},[396],{"type":20,"value":397},"如果同一个网站有多个账号..查看->选项->验证",{"type":14,"tag":29,"props":399,"children":400},{},[401,406],{"type":14,"tag":33,"props":402,"children":403},{},[404],{"type":20,"value":405},"编辑那个网站的账号,就会新建一个用户名@xxx.com的账号",{"type":14,"tag":33,"props":407,"children":408},{},[409],{"type":20,"value":410},"然后把那个公用的删除",{"type":14,"tag":15,"props":412,"children":414},{"id":413},"相关链接",[415],{"type":20,"value":413},{"type":14,"tag":29,"props":417,"children":418},{},[419],{"type":14,"tag":33,"props":420,"children":421},{},[422],{"type":14,"tag":59,"props":423,"children":426},{"href":424,"rel":425},"https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%87%AD%E8%AF%81%E5%AD%98%E5%82%A8",[63],[427],{"type":20,"value":428},"https://git-scm.com/book/zh/v2/Git-工具-凭证存储",{"title":7,"searchDepth":430,"depth":430,"links":431},2,[432,433,438,439,440,441],{"id":17,"depth":430,"text":21},{"id":71,"depth":430,"text":74,"children":434},[435,437],{"id":192,"depth":436,"text":192},3,{"id":227,"depth":436,"text":230},{"id":354,"depth":430,"text":354},{"id":364,"depth":430,"text":364},{"id":380,"depth":430,"text":380},{"id":413,"depth":430,"text":413},"markdown","content:tool:2019-08-07-sourcetree-git-password.md","content","tool/2019-08-07-sourcetree-git-password.md","md","2019-08-07",[449,459,586,635,687,700,810],{"title":450,"_path":451,"children":452},"Art","/art",[453,456],{"title":454,"_path":455},"如何用蒙版将两个图过渡融合","/art/2020-09-03-ps-ronghe-pics",{"title":457,"_path":458},"像素画入门","/art/2022-02-02-xiangsuhuarumen",{"title":460,"_path":461,"children":462},"Dotnet","/dotnet",[463,466,469,472,475,478,481,484,487,490,493,496,499,502,505,508,511,514,517,520,523,526,529,532,535,538,541,544,547,550,553,556,559,562,565,568,571,574,577,580,583],{"title":464,"_path":465},"Linux部署dotnetcore记录","/dotnet/2019-06-05-linux-dotnet-daemon",{"title":467,"_path":468},"时间轮的引入","/dotnet/2019-10-29-time-wheel",{"title":470,"_path":471},"帧同步的相关问题","/dotnet/2019-11-01-lock-step",{"title":473,"_path":474},"状态同步的相关问题","/dotnet/2019-11-01-state-sync-npc",{"title":476,"_path":477},"状态同步--技能系统的同步机制分析","/dotnet/2019-11-02-state-sync-skill",{"title":479,"_path":480},"Creating a Quartz.NET hosted service with ASP.NET Core","/dotnet/2019-11-05-quartz",{"title":482,"_path":483},"DatetimeOffset和Datetime的区别","/dotnet/2019-12-01-datetimeoffset",{"title":485,"_path":486},"大小端字节序(Big Endian和Little Endian)","/dotnet/2020-01-05-big-little-endian",{"title":488,"_path":489},"dll文件的加载","/dotnet/2020-01-06-dll-load",{"title":491,"_path":492},"延迟补偿在C/S架构游戏协议设计和优化中的应用","/dotnet/2020-02-02-latency_compensating_methods_in_clientserver_in-game_protocol_design_and_optimization",{"title":494,"_path":495},"延迟补偿和对时的相关总结","/dotnet/2020-02-02-latency_compensating-rtt",{"title":497,"_path":498},"快节奏多人游戏同步(1)-ClientServer架构","/dotnet/2020-02-02-net-sync-client-server-game-architecture",{"title":500,"_path":501},"快节奏多人游戏同步(2)-客户端预测与服务器校对","/dotnet/2020-02-02-net-sync-client-side-prediction-and-server-reconciliation",{"title":503,"_path":504},"快节奏多人游戏同步(3)-Entity插值","/dotnet/2020-02-02-net-sync-entity-interpolation",{"title":506,"_path":507},"快节奏多人游戏同步(4)-延时补偿","/dotnet/2020-02-02-net-sync-lag-compensation",{"title":509,"_path":510},"守望先锋等FPS游戏的网络同步","/dotnet/2020-02-02-overwatch-a-guide-to-understanding-netcode",{"title":512,"_path":513},"起源引擎网络同步模型","/dotnet/2020-02-02-source_multiplayer_networking",{"title":515,"_path":516},"orleans的部署模式","/dotnet/2020-02-03-orleans-deployment",{"title":518,"_path":519},"一致性hash算法","/dotnet/2020-02-06-consistent_hash",{"title":521,"_path":522},"地图的aoi","/dotnet/2020-02-07-aoi",{"title":524,"_path":525},"游戏的匹配机制ELO","/dotnet/2020-02-09-room-elo",{"title":527,"_path":528},"C# 深浅复制","/dotnet/2020-02-10-icloneable",{"title":530,"_path":531},"C#引用类型对象在循环引用时会不会内存泄漏","/dotnet/2020-02-11-gc",{"title":533,"_path":534},"扒一扒.net、.net framework、mono和Unity","/dotnet/2020-02-12-netcore-mono-netframework",{"title":536,"_path":537},"c#编译和运行启动原理","/dotnet/2020-02-13-csharp-run",{"title":539,"_path":540},"abp新建项目指南","/dotnet/2020-05-29-abp-start",{"title":542,"_path":543},"2020 06 11 IdentityServer Use","/dotnet/2020-06-11-identityserver-use",{"title":545,"_path":546},"关于abp的用户的一些问题","/dotnet/2020-07-05-abp-database-user",{"title":548,"_path":549},"abp的dOC模块使用","/dotnet/2020-07-10-abp-doc",{"title":551,"_path":552},"abp默认语言规则","/dotnet/2020-07-15-abp-default-language",{"title":554,"_path":555},"Orleans 最佳实践","/dotnet/2020-08-09-orleans-best-practices",{"title":557,"_path":558},"c#特性参数","/dotnet/2020-08-10-param-attribute",{"title":560,"_path":561},".NET Core 获取 HttpContext.Current 以及 AsyncLocal 与 ThreadLocal","/dotnet/2020-08-11-httpcontextaccessor-asynclocal",{"title":563,"_path":564},"Kestrel源码分析","/dotnet/2020-08-15-kestrel-source-code",{"title":566,"_path":567},"ConcurrentDictionary并发字典","/dotnet/2020-08-16-concurrentdictionary",{"title":569,"_path":570},"IOptions、IOptionsMonitor以及IOptionsSnapshot","/dotnet/2020-08-17-netcore-options",{"title":572,"_path":573},".NET Core/Framework 创建委托以大幅度提高反射调用的性能","/dotnet/2020-11-13-reflection-method",{"title":575,"_path":576},"C＃枚举中使用Flags特性","/dotnet/2020-11-24-flags",{"title":578,"_path":579},"谷歌浏览器下netcore登录失败问题","/dotnet/2020-12-11-chrome-login-fail",{"title":581,"_path":582},"Converting between Structs and Byte Arrays","/dotnet/2021-05-01-converting-between-structs-and-byte-arrays",{"title":584,"_path":585},"c#在重写object中的Equal方法时需要对GetHashCode进行重写（Dictionary引用）","/dotnet/2022-08-15-equal-hashcode",{"title":587,"_path":588,"children":589},"Game","/game",[590,593,596,599,602,605,608,611,614,617,620,623,626,629,632],{"title":591,"_path":592},"使用柏林噪声算法生成地图","/game/2021-01-20-perlin-map",{"title":594,"_path":595},"波函数坍塌算法生成地图","/game/2021-01-21-wave-collapse-function",{"title":597,"_path":598},"文明6地图生成算法","/game/2021-01-22-civ-map",{"title":600,"_path":601},"roguelike地牢生成算法","/game/2021-01-23-roguelike-map",{"title":603,"_path":604},"Spelunky关卡生成","/game/2021-01-23-spelunky-map",{"title":606,"_path":607},"Edgar源代码解读","/game/2021-06-12-edgar-code-read",{"title":609,"_path":610},"rpgbuild的一些备注","/game/2021-06-15-rpgbuilder",{"title":612,"_path":613},"游戏人物设计","/game/2021-08-05-game-task-design",{"title":615,"_path":616},"unity gameplay ability源代码解析","/game/2021-12-14-untiy-gameplay-ablility-sourcecode",{"title":618,"_path":619},"苟与剑游戏技能分析","/game/2021-12-21-gyj-skill",{"title":621,"_path":622},"quest machine 使用相关","/game/2022-02-19-quest-machine",{"title":624,"_path":625},"苟与剑中的单位生成方式","/game/2022-03-16-gyj-map",{"title":627,"_path":628},"ecs中实体创建方法","/game/2022-08-03-ecs",{"title":630,"_path":631},"暗黑2怪物等级和掉落规则","/game/2022-08-05-dia2",{"title":633,"_path":634},"行为树源代码解析","/game/2022-08-21-behavior-tree-source-code",{"title":636,"_path":637,"children":638},"Gyj","/gyj",[639,642,645,648,651,654,657,660,663,666,669,672,675,678,681,684],{"title":640,"_path":641},"美术要求","/gyj/2022-06-11-meishuyaoqiu",{"title":643,"_path":644},"游戏基础知识","/gyj/2022-06-12-jichuzhishi",{"title":646,"_path":647},"2022 08 22 地图房间的种类","/gyj/2022-08-22-detufangjiandezhonglei",{"title":649,"_path":650},"2022 08 22 奇遇事件","/gyj/2022-08-22-qiyushijian",{"title":652,"_path":653},"游戏流程","/gyj/2022-08-22-youxiliucheng",{"title":655,"_path":656},"物品产出表","/gyj/2022-08-22-wupinchanchubiao",{"title":658,"_path":659},"玩法","/gyj/2022-08-22-wanfa",{"title":661,"_path":662},"初入江湖","/gyj/2022-08-22-diyizhang",{"title":664,"_path":665},"2022 08 22 职业与工作","/gyj/2022-08-22-zhiyeyugongzuo",{"title":667,"_path":668},"天下霸图研究","/gyj/2022-11-01-tianxiabatu",{"title":670,"_path":671},"流放之路关于伤害公式和技能的分析","/gyj/2022-11-17-liufangzhilu",{"title":673,"_path":674},"门派内容相关","/gyj/2022-11-17-sect",{"title":676,"_path":677},"2022 12 01 养殖","/gyj/2022-12-01-yangzhi",{"title":679,"_path":680},"种植","/gyj/2022-12-01-zhongzhi",{"title":682,"_path":683},"人物属性设计","/gyj/2022-12-15-renwushuxing",{"title":685,"_path":686},"跑商","/gyj/2023-11-01-paoshang",{"title":688,"_path":689,"children":690},"Js","/js",[691,694,697],{"title":692,"_path":693},"如何在TypeScript中使用JS类库","/js/2022-02-12-typescript-use-js",{"title":695,"_path":696},"nuxt3项目初始化失败","/js/2023-05-16-nuxt3-init-fail",{"title":698,"_path":699},"Flex 布局使用","/js/2024-03-17-flex-use",{"title":701,"_path":702,"children":703},"Tool","/tool",[704,707,710,711,714,717,720,723,726,729,732,735,738,741,744,747,750,753,756,759,762,765,768,771,774,777,780,783,786,789,792,795,798,801,804,807],{"title":705,"_path":706},"windows发送到手机Ftp","/tool/2019-06-20-windows-send-to-ftp",{"title":708,"_path":709},"windows特殊目录修复","/tool/2019-06-24-shell-folders-are-displayed-with-the-standard-folder-icon-in-windows",{"title":8,"_path":4},{"title":712,"_path":713},"powershell 常用命令","/tool/2019-08-10-powershell-command",{"title":715,"_path":716},"scoop的使用","/tool/2019-08-20-scoop-use",{"title":718,"_path":719},"使用配置文件来管理NuGet包版本F","/tool/2019-09-02-nuget-manager",{"title":721,"_path":722},"Redis的两种持久化RDB和AOF","/tool/2019-09-02-redis-aof-rdb",{"title":724,"_path":725},"使用 SSH 登陆谷歌云 root 或者 普通账户的方法","/tool/2020-01-02-google-clound-local-login",{"title":727,"_path":728},"CentOS 下安装Shadowsocks 搭建ss","/tool/2020-01-12-centosn-ss-install",{"title":730,"_path":731},"mac下brew 使用","/tool/2020-01-13-brew",{"title":733,"_path":734},"术语中英文对照","/tool/2020-02-05-game_en_zh",{"title":736,"_path":737},"Excel中以文本形式存储的数字","/tool/2020-02-06-excel-text-number",{"title":739,"_path":740},"protobuf序列化的一些问题","/tool/2020-03-25-protobuf-empty-collections",{"title":742,"_path":743},"为博客将 RSS 转为邮件订阅","/tool/2020-06-26-blog-mail-sub",{"title":745,"_path":746},"github下载代码的速度太慢","/tool/2020-06-27-linux-github-slow",{"title":748,"_path":749},"win10开始菜单添加软件以及备份和恢复","/tool/2020-07-02-win10-start-menu",{"title":751,"_path":752},"gitbook的使用","/tool/2020-07-06-gitbook-use",{"title":754,"_path":755},"github actions 简单使用","/tool/2020-07-11-github-actions",{"title":757,"_path":758},"使用hexo建立博客并部署到github","/tool/2020-07-12-hexo-github",{"title":760,"_path":761},"终端下设置代理","/tool/2020-07-13-terminal-proxy",{"title":763,"_path":764},"发现nuget包太占用C盘，怎么办？","/tool/2020-08-30-nuget-is-big",{"title":766,"_path":767},"unity商店下载资源迁移","/tool/2020-11-15-unity-is-big",{"title":769,"_path":770},"关于coding的pages介绍","/tool/2020-11-16-coding-pages",{"title":772,"_path":773},"一些常用的dns服务器","/tool/2021-05-06-dns",{"title":775,"_path":776},"UE4素材破解","/tool/2021-11-06-ue4-view",{"title":778,"_path":779},"安装cockpit通过nginx代理访问","/tool/2021-11-07-cockpit-linux",{"title":781,"_path":782},"Windows LTSC、LTSB、Server 安装 Windows Store 应用商店 ","/tool/2021-11-15-install-windowsstore",{"title":784,"_path":785},"我是如何把 VS Code 插件启动速度从 8 秒减少到 1 秒 ","/tool/2021-12-02-vscode-plugins-big",{"title":787,"_path":788},"云效部署hexo到自己的主机 ","/tool/2021-12-11-yunxiao-liushuixian-hexo",{"title":790,"_path":791},"github 怎么合并原始分支？ ","/tool/2021-12-12-github-sync",{"title":793,"_path":794},"code server安装制作online ide","/tool/2022-01-30-code-server",{"title":796,"_path":797},"rider的使用","/tool/2022-08-02-rider-use",{"title":799,"_path":800},"2022 08 09 Amd Over","/tool/2022-08-09-amd-over",{"title":802,"_path":803},"rider破解","/tool/2022-11-19-rider-po-jie",{"title":805,"_path":806},"stable diffusion install","/tool/2023-01-20-stable-diffusion-install",{"title":808,"_path":809},"CGI, FastCGI, WSGI, uWSGI, uwsgi一文搞懂","/tool/2023-02-15-cgi-fastcgi-wsgi-uswgi",{"title":811,"_path":812,"children":813},"Unity","/unity",[814,817,820,823,826,829,832,835,838,841,844,847,850,853,856,859,862,865,868,871,874,877,880,883,886,889,892,895,898,901,904,907,910,913,916,919,922,925,928,931,934,937,940,943,946,949,952,955,958,961,964,967,970,973,976,979,982,985,988,991,994,997,1000,1003,1006,1009,1012,1015,1018,1021,1024,1027],{"title":815,"_path":816},"Unity 导出 Android 64-bit 版本","/unity/2019-06-20-unity-android-x64",{"title":818,"_path":819},"Unity的il2cpp","/unity/2019-06-20-unity-il2cpp-debugger",{"title":821,"_path":822},"googlePlay 发布问题","/unity/2019-06-23-googlplay-pulish",{"title":824,"_path":825},"关于unity的适配问题","/unity/2019-08-09-unity2d-shipei",{"title":827,"_path":828},"一次精通 RectTransform","/unity/2019-08-10-ugui-recttransform",{"title":830,"_path":831},"一次精通 eventmanager","/unity/2019-08-11-ugui-eventmanager",{"title":833,"_path":834},"ugui的eventsystem源码解读","/unity/2019-08-12-ugui-eventsystem-sourcecode",{"title":836,"_path":837},"Unity Raycasters 剖析","/unity/2019-08-12-ugui-raycasters",{"title":839,"_path":840},"关于addressable那些事","/unity/2019-09-01-addressable",{"title":842,"_path":843},"关于spriteAtlas打包那些事","/unity/2019-09-01-spriteatlas",{"title":845,"_path":846},"ilruntime的研究","/unity/2019-09-02-ilruntime",{"title":848,"_path":849},"unity的宏以及添加net框架中未引用的dll","/unity/2019-09-02-unity-reference-dll",{"title":851,"_path":852},"xlua注入源码解读","/unity/2019-09-03-xlua-inject",{"title":854,"_path":855},"如何快速的注入汇编","/unity/2019-09-04-mono.cecil-inject",{"title":857,"_path":858},"2D游戏视差背景的实现","/unity/2019-09-13-parallax-2d",{"title":860,"_path":861},"unity使用代理","/unity/2019-11-15-unity-proxy",{"title":863,"_path":864},"一篇文章搞定Entitas","/unity/2020-01-01-unity-entitas",{"title":866,"_path":867},"unity攻击范围检测的方式区别","/unity/2020-01-11-unity-attack-range-detection-type",{"title":869,"_path":870},"常见的2D碰撞检测","/unity/2020-01-12-collision-detection",{"title":872,"_path":873},"unity攻击范围检测","/unity/2020-01-13-unity-attack-detection",{"title":875,"_path":876},"技能系统","/unity/2020-02-15-skill-system",{"title":878,"_path":879},"游戏buff系统设计","/unity/2020-02-16-buff-system",{"title":881,"_path":882},"角色状态设计","/unity/2020-02-17-character-states",{"title":884,"_path":885},"理解托管堆","/unity/2020-02-18-bestpracticeunderstandingperformanceinunity",{"title":887,"_path":888},"理解自动内存管理","/unity/2020-02-19-understandingautomaticmemorymanagement",{"title":890,"_path":891},"unity 移动平台打包丢失shader的问题","/unity/2020-02-20-shader-lost",{"title":893,"_path":894},"Unity的调试相关","/unity/2020-03-01-unity-debug",{"title":896,"_path":897},"unity启动运行脚本流程","/unity/2020-03-04-unity-startup",{"title":899,"_path":900},"unity的坐标体系","/unity/2020-07-01-unity-coordinate",{"title":902,"_path":903},"2020 07 03 Unity Mesh","/unity/2020-07-03-unity-mesh",{"title":905,"_path":906},"unity Render Pipeline","/unity/2020-07-04-unity-render-pipeline",{"title":908,"_path":909},"Notch Solution","/unity/2020-08-29-notch-solution",{"title":911,"_path":912},"unity 项目dll检查","/unity/2020-08-30-unity-dll-check",{"title":914,"_path":915},"UNITY的垂直同步和帧率","/unity/2020-09-05-unity-vsynccount",{"title":917,"_path":918},"UNITY性能优化流程","/unity/2020-09-10-optimizing-for-performance",{"title":920,"_path":921},"堆栈内存Stack和堆内存Heap","/unity/2020-09-11-stack-heap",{"title":923,"_path":924},"unity的addressables","/unity/2020-09-12-addressables",{"title":926,"_path":927},"游戏中的向量使用","/unity/2020-09-13-vector",{"title":929,"_path":930},"UNITY ECS 详解","/unity/2020-10-15-unity-ecs",{"title":932,"_path":933},"UNITY JOB SYSTEM详解","/unity/2020-10-16-unity-job",{"title":935,"_path":936},"运行时打包图集","/unity/2020-10-17-runtime-spriteatlas",{"title":938,"_path":939},"unity ecs component","/unity/2020-10-18-unity-ecs-component",{"title":941,"_path":942},"基于 Game Object Conversion 和 SubScene 的 DOTS 开发工作流","/unity/2020-10-19-game-object-conversion-and-subscene",{"title":944,"_path":945},"源代码分析world的创建","/unity/2020-10-20-ecs-world",{"title":947,"_path":948},"unity使用platforms构建","/unity/2020-10-21-platform",{"title":950,"_path":951},"Unity rendering order渲染顺序","/unity/2020-10-22-unity-render-order",{"title":953,"_path":954},"关于静态批处理/动态批处理/GPU Instancing /SRP Batcher的详细剖析","/unity/2020-10-23-unity-optimizing-gpu",{"title":956,"_path":957},"unity的ScreenToWorldPoint","/unity/2020-10-24-screentoworldpoint",{"title":959,"_path":960},"URP性能测试","/unity/2020-10-24-unity-urp-performance",{"title":962,"_path":963},"如何使用Unity ECS打造Reactive System？","/unity/2020-11-11-how-to-build-reactive-systems-with-unity-ecs",{"title":965,"_path":966},"Unity中Sprite和UI Image的区别","/unity/2020-11-12-sprite-image-diff",{"title":968,"_path":969},"简单保存工具","/unity/2020-11-13-simple-save",{"title":971,"_path":972},"2020 11 14 Netcode","/unity/2020-11-14-netcode",{"title":974,"_path":975},"ecs中的parent","/unity/2020-11-15-ecs-parent",{"title":977,"_path":978},"ability","/unity/2020-11-16-dotssample",{"title":980,"_path":981},"unity world time system","/unity/2020-11-17-unity-ecs-worldtime",{"title":983,"_path":984},"netcode源代码解读","/unity/2020-11-18-netcode-sourcecode",{"title":986,"_path":987},"pitch yaw roll是什么","/unity/2020-11-29-pitch-yaw-roll",{"title":989,"_path":990},"A Native Collection has not been disposed, resulting in a memory leak. Allocated from:","/unity/2020-12-20-collection-has-not-been-disposed",{"title":992,"_path":993},"解决Unity鼠标坐标点转成世界坐标系坐标点","/unity/2021-01-24-screentoworld",{"title":995,"_path":996},"2021 01 25 Tilemap","/unity/2021-01-25-tilemap",{"title":998,"_path":999},"Unity RenderTexture的应用","/unity/2021-04-11-render-texture",{"title":1001,"_path":1002},"commandbuff的一些问题","/unity/2021-05-20-ecs-commandbuff-question",{"title":1004,"_path":1005},"How to Make One Way Platform in unity","/unity/2021-06-13-how-to-make-one-way-platform",{"title":1007,"_path":1008},"UNITY的渲染顺序","/unity/2021-06-14-unity-render-order",{"title":1010,"_path":1011},"防止变量引用丢失 FormerlySerializedAs","/unity/2021-07-20-formerlyserializedas",{"title":1013,"_path":1014},"AI-PLANNER使用","/unity/2021-08-01-ai-planner",{"title":1016,"_path":1017},"Increased script assembly reload time","/unity/2021-10-01-increased-script-assembly-reload-time",{"title":1019,"_path":1020},"关于unity的热重载的研究","/unity/2022-01-02-unity-hot-reload",{"title":1022,"_path":1023},"Editor Iteration Profiler的使用","/unity/2022-01-28-unity-editor-iteration-profiler",{"title":1025,"_path":1026},"CircleCast和Overlapple的区别是什么","/unity/2022-04-02-circlecast-overlapple-diff",{"title":1028,"_path":1029},"unity ecs的备忘录","/unity/2022-09-10-ecs-beiwang",1710779042155]