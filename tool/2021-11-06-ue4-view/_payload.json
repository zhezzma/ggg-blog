[{"data":1,"prerenderedAt":867},["Reactive",2],{"content-query-hp08ktkTCX":3,"content-navigation-8C37fagqQL":285},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":279,"_id":280,"_source":281,"_file":282,"_extension":283,"date":284},"/tool/2021-11-06-ue4-view","tool",false,"","UE4素材破解","Pak解包和打包Pak文件就是UE4游戏生成的数据包文件，PC游戏一般放在游戏路径下的Content\\Paks，安卓则在obb解包后游戏路径下的Content\\Paks中，一般汉化所需的文本都放在pakchunk0-WindowsNoEditor.pak（PC端）或者pakchunk0-Android_ASTC.pak(移动端)中，如果不确定可以全部解包一下。目前主流的解包和打包工具有两种，一种是quickbms，另一种是UnrealPakSwitch。使用quickbms解包首先介绍一下quickbms(开发者论坛网站:https://zenhax.com/)的使用方法，quickbms并非",{"type":11,"children":12,"toc":276},"root",[13,25,30,35,43,59,67,72,79,84,91,96,103,111,116,123,128,136,158,165,170,184,192,197,204,209,216,221,226],{"type":14,"tag":15,"props":16,"children":17},"element","p",{},[18],{"type":14,"tag":19,"props":20,"children":21},"strong",{},[22],{"type":23,"value":24},"text","Pak解包和打包",{"type":14,"tag":15,"props":26,"children":27},{},[28],{"type":23,"value":29},"Pak文件就是UE4游戏生成的数据包文件，PC游戏一般放在游戏路径下的Content\\Paks，安卓则在obb解包后游戏路径下的Content\\Paks中，一般汉化所需的文本都放在pakchunk0-WindowsNoEditor.pak（PC端）或者pakchunk0-Android_ASTC.pak(移动端)中，如果不确定可以全部解包一下。",{"type":14,"tag":15,"props":31,"children":32},{},[33],{"type":23,"value":34},"目前主流的解包和打包工具有两种，一种是quickbms，另一种是UnrealPakSwitch。",{"type":14,"tag":15,"props":36,"children":37},{},[38],{"type":14,"tag":19,"props":39,"children":40},{},[41],{"type":23,"value":42},"使用quickbms解包",{"type":14,"tag":15,"props":44,"children":45},{},[46,48,57],{"type":23,"value":47},"首先介绍一下quickbms(开发者论坛网站:",{"type":14,"tag":49,"props":50,"children":54},"a",{"href":51,"rel":52},"https://zenhax.com/",[53],"nofollow",[55],{"type":23,"value":56},"https://zenhax.com/)的使用方法，quickbms并非UE4专用的解包打包工具，而是一个可以根据相应脚本插件来解包的工具，打开quickbms的目录，会看到这些文件，解包主要使用quickbms.exe和quickbms_4gb_files.exe，顾名思义quickbms_4gb_files.exe就是给超过4g的大文件解包使用的，没有超过的使用quickbms.exe解包即可。",{"type":23,"value":58},"%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%EF%BC%8Cquickbms%E5%B9%B6%E9%9D%9EUE4%E4%B8%93%E7%94%A8%E7%9A%84%E8%A7%A3%E5%8C%85%E6%89%93%E5%8C%85%E5%B7%A5%E5%85%B7%EF%BC%8C%E8%80%8C%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8F%AF%E4%BB%A5%E6%A0%B9%E6%8D%AE%E7%9B%B8%E5%BA%94%E8%84%9A%E6%9C%AC%E6%8F%92%E4%BB%B6%E6%9D%A5%E8%A7%A3%E5%8C%85%E7%9A%84%E5%B7%A5%E5%85%B7%EF%BC%8C%E6%89%93%E5%BC%80quickbms%E7%9A%84%E7%9B%AE%E5%BD%95%EF%BC%8C%E4%BC%9A%E7%9C%8B%E5%88%B0%E8%BF%99%E4%BA%9B%E6%96%87%E4%BB%B6%EF%BC%8C%E8%A7%A3%E5%8C%85%E4%B8%BB%E8%A6%81%E4%BD%BF%E7%94%A8quickbms.exe%E5%92%8Cquickbms_4gb_files.exe%EF%BC%8C%E9%A1%BE%E5%90%8D%E6%80%9D%E4%B9%89quickbms_4gb_files.exe%E5%B0%B1%E6%98%AF%E7%BB%99%E8%B6%85%E8%BF%874g%E7%9A%84%E5%A4%A7%E6%96%87%E4%BB%B6%E8%A7%A3%E5%8C%85%E4%BD%BF%E7%94%A8%E7%9A%84%EF%BC%8C%E6%B2%A1%E6%9C%89%E8%B6%85%E8%BF%87%E7%9A%84%E4%BD%BF%E7%94%A8quickbms.exe%E8%A7%A3%E5%8C%85%E5%8D%B3%E5%8F%AF%E3%80%82)",{"type":14,"tag":15,"props":60,"children":61},{},[62],{"type":14,"tag":63,"props":64,"children":66},"img",{"alt":63,"src":65},"/images/2021-11-06-ue4-view/1607844816-d70f13e360aab32.png",[],{"type":14,"tag":15,"props":68,"children":69},{},[70],{"type":23,"value":71},"使用过程很简单，打开quickbms.exe会提示选择选择解包脚本，我们选择unreal_tournament_4.bms这个脚本",{"type":14,"tag":15,"props":73,"children":74},{},[75],{"type":14,"tag":63,"props":76,"children":78},{"alt":63,"src":77},"/images/2021-11-06-ue4-view/1607844817-dba7c407119b5ba.png",[],{"type":14,"tag":15,"props":80,"children":81},{},[82],{"type":23,"value":83},"然后会再次提示选择pak，我们选择对应的pak包即可",{"type":14,"tag":15,"props":85,"children":86},{},[87],{"type":14,"tag":63,"props":88,"children":90},{"alt":63,"src":89},"/images/2021-11-06-ue4-view/1607844818-69c6a966ef586fc.png",[],{"type":14,"tag":15,"props":92,"children":93},{},[94],{"type":23,"value":95},"如果是没有加密的pak此时就会正常解包，如果是加密的pak，则需要输入密钥(密钥获取方式后面教程会提到)，后面就等待解包完成即可",{"type":14,"tag":15,"props":97,"children":98},{},[99],{"type":14,"tag":63,"props":100,"children":102},{"alt":63,"src":101},"/images/2021-11-06-ue4-view/1607844818-e6616f823a65b43.png",[],{"type":14,"tag":15,"props":104,"children":105},{},[106],{"type":14,"tag":19,"props":107,"children":108},{},[109],{"type":23,"value":110},"使用quickbms打包",{"type":14,"tag":15,"props":112,"children":113},{},[114],{"type":23,"value":115},"quickbms打包实际上就是解包的反过程，这里不能再直接使用quickbms.exe打包，而是要用打包脚本，如下图的三个脚本，使用reimport.bat打包有个条件，修改后的文件不能比源文件大。reimport2.bat和reimport3.bat按作者说法已经解决了这个限制，但是在实际使用中仍有问题，所以如果修改后的文件变大了就不建议使用了；",{"type":14,"tag":15,"props":117,"children":118},{},[119],{"type":14,"tag":63,"props":120,"children":122},{"alt":63,"src":121},"/images/2021-11-06-ue4-view/1607844819-43d08de99d1ba79.png",[],{"type":14,"tag":15,"props":124,"children":125},{},[126],{"type":23,"value":127},"quickbms打包有一个优点，就是不需要提供全部的文件，只需要将修改后的文件按pak包中的目录放置好就行(注: 一定要是完整目录)，比如修改了Pak包中TWD\\Content\\Localization\\Game\\en中的Game.locres文件，那么就要建立TWD\\Content\\Localization\\Game\\en这个路径将修改的Game.locres文件放入其中，然后双击reimport.bat脚本，同样的选择unreal_tournament_4.bms这个脚本，选择pak包，最后选择刚刚修改文件的目录即可",{"type":14,"tag":15,"props":129,"children":130},{},[131],{"type":14,"tag":19,"props":132,"children":133},{},[134],{"type":23,"value":135},"使用UnrealPakSwitch解包和打包",{"type":14,"tag":15,"props":137,"children":138},{},[139,141,147,149,156],{"type":23,"value":140},"UnrealPakSwitch工具(作者详细教程链接:",{"type":14,"tag":49,"props":142,"children":145},{"href":143,"rel":144},"https://gbatemp.net/threads/how-to-unpack-and-repack-unreal-engine-4-files.531784/",[53],[146],{"type":23,"value":143},{"type":23,"value":148}," )实际使用的是虚幻4引擎中的UnrealPak.exe工具来进行解包和打包的，所以相对更加可靠，由于依赖的是u4pak.py脚本，所以需要先安装Python环境(可到官网下载，链接: ",{"type":14,"tag":49,"props":150,"children":153},{"href":151,"rel":152},"https://www.python.org/ftp/python/3.9.0/python-3.9.0-amd64.exe",[53],[154],{"type":23,"value":155},"https://www.python.org/ftp/python/3.9.0/python-3.9.0-amd64.exe)。安装过程不在赘述注意建立Path环境变量。安装好后，首先需要使用1.check这个脚本检测版本，将pak包放入UnrealPakSwitch工具目录下，然后拖动到1.check.cmd上即可弹出版本，Unreal",{"type":23,"value":157},"%E3%80%82%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E4%B8%8D%E5%9C%A8%E8%B5%98%E8%BF%B0%E6%B3%A8%E6%84%8F%E5%BB%BA%E7%AB%8BPath%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E3%80%82%E5%AE%89%E8%A3%85%E5%A5%BD%E5%90%8E%EF%BC%8C%E9%A6%96%E5%85%88%E9%9C%80%E8%A6%81%E4%BD%BF%E7%94%A81.check%E8%BF%99%E4%B8%AA%E8%84%9A%E6%9C%AC%E6%A3%80%E6%B5%8B%E7%89%88%E6%9C%AC%EF%BC%8C%E5%B0%86pak%E5%8C%85%E6%94%BE%E5%85%A5UnrealPakSwitch%E5%B7%A5%E5%85%B7%E7%9B%AE%E5%BD%95%E4%B8%8B%EF%BC%8C%E7%84%B6%E5%90%8E%E6%8B%96%E5%8A%A8%E5%88%B01.check.cmd%E4%B8%8A%E5%8D%B3%E5%8F%AF%E5%BC%B9%E5%87%BA%E7%89%88%E6%9C%AC%EF%BC%8CUnreal) Engine 4.19.2 (for v4 *.pak), Unreal Engine 4.20.3 (for v5 *.pak), Unreal Engine 4.21.2 (for v7 *.pak), Unreal Engine 4.22.3 (for v8 *.pak), Unreal Engine 4.24.1 (for v8.23 *.pak), Unreal Engine 4.25.4 (for v9 *.pak).，检测版本后根据对应的版本放入相应版本的UnrealPak.exe工具，作者教程中写的很详细，不在赘述。",{"type":14,"tag":15,"props":159,"children":160},{},[161],{"type":14,"tag":63,"props":162,"children":164},{"alt":63,"src":163},"/images/2021-11-06-ue4-view/1607844820-2b83cb865fd7122.png",[],{"type":14,"tag":15,"props":166,"children":167},{},[168],{"type":23,"value":169},"然后就是解包，过程很简单，将pak包拖动到相应版本的unpack-vxx.cmd上，如果是加密包则拖动到unpack-encrypted-vxx.cmd上，即可自动进行解包，解包后目录会输出在UnrealPakSwitch工具目录下。同时会生成一个lista.txt文件，这个文件包含pak包中所有文件信息，后面打包需要用到。",{"type":14,"tag":15,"props":171,"children":172},{},[173,175,182],{"type":23,"value":174},"当修改好后需要打包的时候，就要对lista.txt文件进行修改，详细修改方法见作者教程",{"type":14,"tag":49,"props":176,"children":179},{"href":177,"rel":178},"https://gbatemp.net/threads/how-to-unpack-and-repack-unreal-engine-4-files.531784/%E4%B8%AD%E7%9A%84Pack",[53],[180],{"type":23,"value":181},"https://gbatemp.net/threads/how-to-unpack-and-repack-unreal-engine-4-files.531784/中的Pack",{"type":23,"value":183}," files部分，修改好后拖动到pack-vxx.cmd上即可。",{"type":14,"tag":15,"props":185,"children":186},{},[187],{"type":14,"tag":19,"props":188,"children":189},{},[190],{"type":23,"value":191},"简单导出并汉化文本文件",{"type":14,"tag":15,"props":193,"children":194},{},[195],{"type":23,"value":196},"对于多语言的游戏，游戏文本基本都是放在Content\\Localization\\下的，如果目录下的文件是文本文件，那么直接用记事本打开修改即可，如果是locres文件，则需要使用工具来导出文本",{"type":14,"tag":15,"props":198,"children":199},{},[200],{"type":14,"tag":63,"props":201,"children":203},{"alt":63,"src":202},"/images/2021-11-06-ue4-view/1607844821-7744d389d53038c.png",[],{"type":14,"tag":15,"props":205,"children":206},{},[207],{"type":23,"value":208},"使用unreal_locres_export.exe是导出，unreal_locres_import.exe是导入，导出后的文本就是下面这样",{"type":14,"tag":15,"props":210,"children":211},{},[212],{"type":14,"tag":63,"props":213,"children":215},{"alt":63,"src":214},"/images/2021-11-06-ue4-view/1607844822-881c9b8a8029f4e.png",[],{"type":14,"tag":15,"props":217,"children":218},{},[219],{"type":23,"value":220},"将其修改成中文后(不要有任何换行动作，文件不要重命名)，使用导入工具生成locres文件即可。",{"type":14,"tag":15,"props":222,"children":223},{},[224],{"type":23,"value":225},"必备工具：",{"type":14,"tag":227,"props":228,"children":229},"ol",{},[230,261,266,271],{"type":14,"tag":231,"props":232,"children":233},"li",{},[234,236,242,244,248,250,256,259],{"type":23,"value":235},"Umodel 下载网址：",{"type":14,"tag":49,"props":237,"children":240},{"href":238,"rel":239},"http://www.gildor.org/en/projects/umodel",[53],[241],{"type":23,"value":238},{"type":23,"value":243},"   国外大神作品，英文网站，有点英语基础就行。",{"type":14,"tag":245,"props":246,"children":247},"br",{},[],{"type":23,"value":249},"不想点开网站的下载链接：",{"type":14,"tag":49,"props":251,"children":254},{"href":252,"rel":253},"http://www.gildor.org/down/43/umodel/umodel_win32.zip",[53],[255],{"type":23,"value":252},{"type":14,"tag":245,"props":257,"children":258},{},[],{"type":23,"value":260},"之前只有32位系统可以用，现在更新后64位也可以用了（我的就是）",{"type":14,"tag":231,"props":262,"children":263},{},[264],{"type":23,"value":265},"ActorX Import 也是上个网站上的插件，用于3ds max导入pskx文件用。下载解压后把文件放到3ds max 安装路径里的stdplugs文件夹里面。",{"type":14,"tag":231,"props":267,"children":268},{},[269],{"type":23,"value":270},"3ds max 版本不限，但最好不要太低，我用的2019最新版，可以用。注意3ds max最好破解一下，不然30天用的不舒服。",{"type":14,"tag":231,"props":272,"children":273},{},[274],{"type":23,"value":275},"UE4",{"title":7,"searchDepth":277,"depth":277,"links":278},2,[],"markdown","content:tool:2021-11-06-ue4-view.md","content","tool/2021-11-06-ue4-view.md","md","2021-11-06",[286,296,423,472,524,537,647],{"title":287,"_path":288,"children":289},"Art","/art",[290,293],{"title":291,"_path":292},"如何用蒙版将两个图过渡融合","/art/2020-09-03-ps-ronghe-pics",{"title":294,"_path":295},"像素画入门","/art/2022-02-02-xiangsuhuarumen",{"title":297,"_path":298,"children":299},"Dotnet","/dotnet",[300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,396,399,402,405,408,411,414,417,420],{"title":301,"_path":302},"Linux部署dotnetcore记录","/dotnet/2019-06-05-linux-dotnet-daemon",{"title":304,"_path":305},"时间轮的引入","/dotnet/2019-10-29-time-wheel",{"title":307,"_path":308},"帧同步的相关问题","/dotnet/2019-11-01-lock-step",{"title":310,"_path":311},"状态同步的相关问题","/dotnet/2019-11-01-state-sync-npc",{"title":313,"_path":314},"状态同步--技能系统的同步机制分析","/dotnet/2019-11-02-state-sync-skill",{"title":316,"_path":317},"Creating a Quartz.NET hosted service with ASP.NET Core","/dotnet/2019-11-05-quartz",{"title":319,"_path":320},"DatetimeOffset和Datetime的区别","/dotnet/2019-12-01-datetimeoffset",{"title":322,"_path":323},"大小端字节序(Big Endian和Little Endian)","/dotnet/2020-01-05-big-little-endian",{"title":325,"_path":326},"dll文件的加载","/dotnet/2020-01-06-dll-load",{"title":328,"_path":329},"延迟补偿在C/S架构游戏协议设计和优化中的应用","/dotnet/2020-02-02-latency_compensating_methods_in_clientserver_in-game_protocol_design_and_optimization",{"title":331,"_path":332},"延迟补偿和对时的相关总结","/dotnet/2020-02-02-latency_compensating-rtt",{"title":334,"_path":335},"快节奏多人游戏同步(1)-ClientServer架构","/dotnet/2020-02-02-net-sync-client-server-game-architecture",{"title":337,"_path":338},"快节奏多人游戏同步(2)-客户端预测与服务器校对","/dotnet/2020-02-02-net-sync-client-side-prediction-and-server-reconciliation",{"title":340,"_path":341},"快节奏多人游戏同步(3)-Entity插值","/dotnet/2020-02-02-net-sync-entity-interpolation",{"title":343,"_path":344},"快节奏多人游戏同步(4)-延时补偿","/dotnet/2020-02-02-net-sync-lag-compensation",{"title":346,"_path":347},"守望先锋等FPS游戏的网络同步","/dotnet/2020-02-02-overwatch-a-guide-to-understanding-netcode",{"title":349,"_path":350},"起源引擎网络同步模型","/dotnet/2020-02-02-source_multiplayer_networking",{"title":352,"_path":353},"orleans的部署模式","/dotnet/2020-02-03-orleans-deployment",{"title":355,"_path":356},"一致性hash算法","/dotnet/2020-02-06-consistent_hash",{"title":358,"_path":359},"地图的aoi","/dotnet/2020-02-07-aoi",{"title":361,"_path":362},"游戏的匹配机制ELO","/dotnet/2020-02-09-room-elo",{"title":364,"_path":365},"C# 深浅复制","/dotnet/2020-02-10-icloneable",{"title":367,"_path":368},"C#引用类型对象在循环引用时会不会内存泄漏","/dotnet/2020-02-11-gc",{"title":370,"_path":371},"扒一扒.net、.net framework、mono和Unity","/dotnet/2020-02-12-netcore-mono-netframework",{"title":373,"_path":374},"c#编译和运行启动原理","/dotnet/2020-02-13-csharp-run",{"title":376,"_path":377},"abp新建项目指南","/dotnet/2020-05-29-abp-start",{"title":379,"_path":380},"2020 06 11 IdentityServer Use","/dotnet/2020-06-11-identityserver-use",{"title":382,"_path":383},"关于abp的用户的一些问题","/dotnet/2020-07-05-abp-database-user",{"title":385,"_path":386},"abp的dOC模块使用","/dotnet/2020-07-10-abp-doc",{"title":388,"_path":389},"abp默认语言规则","/dotnet/2020-07-15-abp-default-language",{"title":391,"_path":392},"Orleans 最佳实践","/dotnet/2020-08-09-orleans-best-practices",{"title":394,"_path":395},"c#特性参数","/dotnet/2020-08-10-param-attribute",{"title":397,"_path":398},".NET Core 获取 HttpContext.Current 以及 AsyncLocal 与 ThreadLocal","/dotnet/2020-08-11-httpcontextaccessor-asynclocal",{"title":400,"_path":401},"Kestrel源码分析","/dotnet/2020-08-15-kestrel-source-code",{"title":403,"_path":404},"ConcurrentDictionary并发字典","/dotnet/2020-08-16-concurrentdictionary",{"title":406,"_path":407},"IOptions、IOptionsMonitor以及IOptionsSnapshot","/dotnet/2020-08-17-netcore-options",{"title":409,"_path":410},".NET Core/Framework 创建委托以大幅度提高反射调用的性能","/dotnet/2020-11-13-reflection-method",{"title":412,"_path":413},"C＃枚举中使用Flags特性","/dotnet/2020-11-24-flags",{"title":415,"_path":416},"谷歌浏览器下netcore登录失败问题","/dotnet/2020-12-11-chrome-login-fail",{"title":418,"_path":419},"Converting between Structs and Byte Arrays","/dotnet/2021-05-01-converting-between-structs-and-byte-arrays",{"title":421,"_path":422},"c#在重写object中的Equal方法时需要对GetHashCode进行重写（Dictionary引用）","/dotnet/2022-08-15-equal-hashcode",{"title":424,"_path":425,"children":426},"Game","/game",[427,430,433,436,439,442,445,448,451,454,457,460,463,466,469],{"title":428,"_path":429},"使用柏林噪声算法生成地图","/game/2021-01-20-perlin-map",{"title":431,"_path":432},"波函数坍塌算法生成地图","/game/2021-01-21-wave-collapse-function",{"title":434,"_path":435},"文明6地图生成算法","/game/2021-01-22-civ-map",{"title":437,"_path":438},"roguelike地牢生成算法","/game/2021-01-23-roguelike-map",{"title":440,"_path":441},"Spelunky关卡生成","/game/2021-01-23-spelunky-map",{"title":443,"_path":444},"Edgar源代码解读","/game/2021-06-12-edgar-code-read",{"title":446,"_path":447},"rpgbuild的一些备注","/game/2021-06-15-rpgbuilder",{"title":449,"_path":450},"游戏人物设计","/game/2021-08-05-game-task-design",{"title":452,"_path":453},"unity gameplay ability源代码解析","/game/2021-12-14-untiy-gameplay-ablility-sourcecode",{"title":455,"_path":456},"苟与剑游戏技能分析","/game/2021-12-21-gyj-skill",{"title":458,"_path":459},"quest machine 使用相关","/game/2022-02-19-quest-machine",{"title":461,"_path":462},"苟与剑中的单位生成方式","/game/2022-03-16-gyj-map",{"title":464,"_path":465},"ecs中实体创建方法","/game/2022-08-03-ecs",{"title":467,"_path":468},"暗黑2怪物等级和掉落规则","/game/2022-08-05-dia2",{"title":470,"_path":471},"行为树源代码解析","/game/2022-08-21-behavior-tree-source-code",{"title":473,"_path":474,"children":475},"Gyj","/gyj",[476,479,482,485,488,491,494,497,500,503,506,509,512,515,518,521],{"title":477,"_path":478},"美术要求","/gyj/2022-06-11-meishuyaoqiu",{"title":480,"_path":481},"游戏基础知识","/gyj/2022-06-12-jichuzhishi",{"title":483,"_path":484},"2022 08 22 地图房间的种类","/gyj/2022-08-22-detufangjiandezhonglei",{"title":486,"_path":487},"2022 08 22 奇遇事件","/gyj/2022-08-22-qiyushijian",{"title":489,"_path":490},"游戏流程","/gyj/2022-08-22-youxiliucheng",{"title":492,"_path":493},"物品产出表","/gyj/2022-08-22-wupinchanchubiao",{"title":495,"_path":496},"玩法","/gyj/2022-08-22-wanfa",{"title":498,"_path":499},"初入江湖","/gyj/2022-08-22-diyizhang",{"title":501,"_path":502},"2022 08 22 职业与工作","/gyj/2022-08-22-zhiyeyugongzuo",{"title":504,"_path":505},"天下霸图研究","/gyj/2022-11-01-tianxiabatu",{"title":507,"_path":508},"流放之路关于伤害公式和技能的分析","/gyj/2022-11-17-liufangzhilu",{"title":510,"_path":511},"门派内容相关","/gyj/2022-11-17-sect",{"title":513,"_path":514},"2022 12 01 养殖","/gyj/2022-12-01-yangzhi",{"title":516,"_path":517},"种植","/gyj/2022-12-01-zhongzhi",{"title":519,"_path":520},"人物属性设计","/gyj/2022-12-15-renwushuxing",{"title":522,"_path":523},"跑商","/gyj/2023-11-01-paoshang",{"title":525,"_path":526,"children":527},"Js","/js",[528,531,534],{"title":529,"_path":530},"如何在TypeScript中使用JS类库","/js/2022-02-12-typescript-use-js",{"title":532,"_path":533},"nuxt3项目初始化失败","/js/2023-05-16-nuxt3-init-fail",{"title":535,"_path":536},"Flex 布局使用","/js/2024-03-17-flex-use",{"title":538,"_path":539,"children":540},"Tool","/tool",[541,544,547,550,553,556,559,562,565,568,571,574,577,580,583,586,589,592,595,598,601,604,607,610,613,614,617,620,623,626,629,632,635,638,641,644],{"title":542,"_path":543},"windows发送到手机Ftp","/tool/2019-06-20-windows-send-to-ftp",{"title":545,"_path":546},"windows特殊目录修复","/tool/2019-06-24-shell-folders-are-displayed-with-the-standard-folder-icon-in-windows",{"title":548,"_path":549},"scourcetree  总是需要输入密码","/tool/2019-08-07-sourcetree-git-password",{"title":551,"_path":552},"powershell 常用命令","/tool/2019-08-10-powershell-command",{"title":554,"_path":555},"scoop的使用","/tool/2019-08-20-scoop-use",{"title":557,"_path":558},"使用配置文件来管理NuGet包版本F","/tool/2019-09-02-nuget-manager",{"title":560,"_path":561},"Redis的两种持久化RDB和AOF","/tool/2019-09-02-redis-aof-rdb",{"title":563,"_path":564},"使用 SSH 登陆谷歌云 root 或者 普通账户的方法","/tool/2020-01-02-google-clound-local-login",{"title":566,"_path":567},"CentOS 下安装Shadowsocks 搭建ss","/tool/2020-01-12-centosn-ss-install",{"title":569,"_path":570},"mac下brew 使用","/tool/2020-01-13-brew",{"title":572,"_path":573},"术语中英文对照","/tool/2020-02-05-game_en_zh",{"title":575,"_path":576},"Excel中以文本形式存储的数字","/tool/2020-02-06-excel-text-number",{"title":578,"_path":579},"protobuf序列化的一些问题","/tool/2020-03-25-protobuf-empty-collections",{"title":581,"_path":582},"为博客将 RSS 转为邮件订阅","/tool/2020-06-26-blog-mail-sub",{"title":584,"_path":585},"github下载代码的速度太慢","/tool/2020-06-27-linux-github-slow",{"title":587,"_path":588},"win10开始菜单添加软件以及备份和恢复","/tool/2020-07-02-win10-start-menu",{"title":590,"_path":591},"gitbook的使用","/tool/2020-07-06-gitbook-use",{"title":593,"_path":594},"github actions 简单使用","/tool/2020-07-11-github-actions",{"title":596,"_path":597},"使用hexo建立博客并部署到github","/tool/2020-07-12-hexo-github",{"title":599,"_path":600},"终端下设置代理","/tool/2020-07-13-terminal-proxy",{"title":602,"_path":603},"发现nuget包太占用C盘，怎么办？","/tool/2020-08-30-nuget-is-big",{"title":605,"_path":606},"unity商店下载资源迁移","/tool/2020-11-15-unity-is-big",{"title":608,"_path":609},"关于coding的pages介绍","/tool/2020-11-16-coding-pages",{"title":611,"_path":612},"一些常用的dns服务器","/tool/2021-05-06-dns",{"title":8,"_path":4},{"title":615,"_path":616},"安装cockpit通过nginx代理访问","/tool/2021-11-07-cockpit-linux",{"title":618,"_path":619},"Windows LTSC、LTSB、Server 安装 Windows Store 应用商店 ","/tool/2021-11-15-install-windowsstore",{"title":621,"_path":622},"我是如何把 VS Code 插件启动速度从 8 秒减少到 1 秒 ","/tool/2021-12-02-vscode-plugins-big",{"title":624,"_path":625},"云效部署hexo到自己的主机 ","/tool/2021-12-11-yunxiao-liushuixian-hexo",{"title":627,"_path":628},"github 怎么合并原始分支？ ","/tool/2021-12-12-github-sync",{"title":630,"_path":631},"code server安装制作online ide","/tool/2022-01-30-code-server",{"title":633,"_path":634},"rider的使用","/tool/2022-08-02-rider-use",{"title":636,"_path":637},"2022 08 09 Amd Over","/tool/2022-08-09-amd-over",{"title":639,"_path":640},"rider破解","/tool/2022-11-19-rider-po-jie",{"title":642,"_path":643},"stable diffusion install","/tool/2023-01-20-stable-diffusion-install",{"title":645,"_path":646},"CGI, FastCGI, WSGI, uWSGI, uwsgi一文搞懂","/tool/2023-02-15-cgi-fastcgi-wsgi-uswgi",{"title":648,"_path":649,"children":650},"Unity","/unity",[651,654,657,660,663,666,669,672,675,678,681,684,687,690,693,696,699,702,705,708,711,714,717,720,723,726,729,732,735,738,741,744,747,750,753,756,759,762,765,768,771,774,777,780,783,786,789,792,795,798,801,804,807,810,813,816,819,822,825,828,831,834,837,840,843,846,849,852,855,858,861,864],{"title":652,"_path":653},"Unity 导出 Android 64-bit 版本","/unity/2019-06-20-unity-android-x64",{"title":655,"_path":656},"Unity的il2cpp","/unity/2019-06-20-unity-il2cpp-debugger",{"title":658,"_path":659},"googlePlay 发布问题","/unity/2019-06-23-googlplay-pulish",{"title":661,"_path":662},"关于unity的适配问题","/unity/2019-08-09-unity2d-shipei",{"title":664,"_path":665},"一次精通 RectTransform","/unity/2019-08-10-ugui-recttransform",{"title":667,"_path":668},"一次精通 eventmanager","/unity/2019-08-11-ugui-eventmanager",{"title":670,"_path":671},"ugui的eventsystem源码解读","/unity/2019-08-12-ugui-eventsystem-sourcecode",{"title":673,"_path":674},"Unity Raycasters 剖析","/unity/2019-08-12-ugui-raycasters",{"title":676,"_path":677},"关于addressable那些事","/unity/2019-09-01-addressable",{"title":679,"_path":680},"关于spriteAtlas打包那些事","/unity/2019-09-01-spriteatlas",{"title":682,"_path":683},"ilruntime的研究","/unity/2019-09-02-ilruntime",{"title":685,"_path":686},"unity的宏以及添加net框架中未引用的dll","/unity/2019-09-02-unity-reference-dll",{"title":688,"_path":689},"xlua注入源码解读","/unity/2019-09-03-xlua-inject",{"title":691,"_path":692},"如何快速的注入汇编","/unity/2019-09-04-mono.cecil-inject",{"title":694,"_path":695},"2D游戏视差背景的实现","/unity/2019-09-13-parallax-2d",{"title":697,"_path":698},"unity使用代理","/unity/2019-11-15-unity-proxy",{"title":700,"_path":701},"一篇文章搞定Entitas","/unity/2020-01-01-unity-entitas",{"title":703,"_path":704},"unity攻击范围检测的方式区别","/unity/2020-01-11-unity-attack-range-detection-type",{"title":706,"_path":707},"常见的2D碰撞检测","/unity/2020-01-12-collision-detection",{"title":709,"_path":710},"unity攻击范围检测","/unity/2020-01-13-unity-attack-detection",{"title":712,"_path":713},"技能系统","/unity/2020-02-15-skill-system",{"title":715,"_path":716},"游戏buff系统设计","/unity/2020-02-16-buff-system",{"title":718,"_path":719},"角色状态设计","/unity/2020-02-17-character-states",{"title":721,"_path":722},"理解托管堆","/unity/2020-02-18-bestpracticeunderstandingperformanceinunity",{"title":724,"_path":725},"理解自动内存管理","/unity/2020-02-19-understandingautomaticmemorymanagement",{"title":727,"_path":728},"unity 移动平台打包丢失shader的问题","/unity/2020-02-20-shader-lost",{"title":730,"_path":731},"Unity的调试相关","/unity/2020-03-01-unity-debug",{"title":733,"_path":734},"unity启动运行脚本流程","/unity/2020-03-04-unity-startup",{"title":736,"_path":737},"unity的坐标体系","/unity/2020-07-01-unity-coordinate",{"title":739,"_path":740},"2020 07 03 Unity Mesh","/unity/2020-07-03-unity-mesh",{"title":742,"_path":743},"unity Render Pipeline","/unity/2020-07-04-unity-render-pipeline",{"title":745,"_path":746},"Notch Solution","/unity/2020-08-29-notch-solution",{"title":748,"_path":749},"unity 项目dll检查","/unity/2020-08-30-unity-dll-check",{"title":751,"_path":752},"UNITY的垂直同步和帧率","/unity/2020-09-05-unity-vsynccount",{"title":754,"_path":755},"UNITY性能优化流程","/unity/2020-09-10-optimizing-for-performance",{"title":757,"_path":758},"堆栈内存Stack和堆内存Heap","/unity/2020-09-11-stack-heap",{"title":760,"_path":761},"unity的addressables","/unity/2020-09-12-addressables",{"title":763,"_path":764},"游戏中的向量使用","/unity/2020-09-13-vector",{"title":766,"_path":767},"UNITY ECS 详解","/unity/2020-10-15-unity-ecs",{"title":769,"_path":770},"UNITY JOB SYSTEM详解","/unity/2020-10-16-unity-job",{"title":772,"_path":773},"运行时打包图集","/unity/2020-10-17-runtime-spriteatlas",{"title":775,"_path":776},"unity ecs component","/unity/2020-10-18-unity-ecs-component",{"title":778,"_path":779},"基于 Game Object Conversion 和 SubScene 的 DOTS 开发工作流","/unity/2020-10-19-game-object-conversion-and-subscene",{"title":781,"_path":782},"源代码分析world的创建","/unity/2020-10-20-ecs-world",{"title":784,"_path":785},"unity使用platforms构建","/unity/2020-10-21-platform",{"title":787,"_path":788},"Unity rendering order渲染顺序","/unity/2020-10-22-unity-render-order",{"title":790,"_path":791},"关于静态批处理/动态批处理/GPU Instancing /SRP Batcher的详细剖析","/unity/2020-10-23-unity-optimizing-gpu",{"title":793,"_path":794},"unity的ScreenToWorldPoint","/unity/2020-10-24-screentoworldpoint",{"title":796,"_path":797},"URP性能测试","/unity/2020-10-24-unity-urp-performance",{"title":799,"_path":800},"如何使用Unity ECS打造Reactive System？","/unity/2020-11-11-how-to-build-reactive-systems-with-unity-ecs",{"title":802,"_path":803},"Unity中Sprite和UI Image的区别","/unity/2020-11-12-sprite-image-diff",{"title":805,"_path":806},"简单保存工具","/unity/2020-11-13-simple-save",{"title":808,"_path":809},"2020 11 14 Netcode","/unity/2020-11-14-netcode",{"title":811,"_path":812},"ecs中的parent","/unity/2020-11-15-ecs-parent",{"title":814,"_path":815},"ability","/unity/2020-11-16-dotssample",{"title":817,"_path":818},"unity world time system","/unity/2020-11-17-unity-ecs-worldtime",{"title":820,"_path":821},"netcode源代码解读","/unity/2020-11-18-netcode-sourcecode",{"title":823,"_path":824},"pitch yaw roll是什么","/unity/2020-11-29-pitch-yaw-roll",{"title":826,"_path":827},"A Native Collection has not been disposed, resulting in a memory leak. Allocated from:","/unity/2020-12-20-collection-has-not-been-disposed",{"title":829,"_path":830},"解决Unity鼠标坐标点转成世界坐标系坐标点","/unity/2021-01-24-screentoworld",{"title":832,"_path":833},"2021 01 25 Tilemap","/unity/2021-01-25-tilemap",{"title":835,"_path":836},"Unity RenderTexture的应用","/unity/2021-04-11-render-texture",{"title":838,"_path":839},"commandbuff的一些问题","/unity/2021-05-20-ecs-commandbuff-question",{"title":841,"_path":842},"How to Make One Way Platform in unity","/unity/2021-06-13-how-to-make-one-way-platform",{"title":844,"_path":845},"UNITY的渲染顺序","/unity/2021-06-14-unity-render-order",{"title":847,"_path":848},"防止变量引用丢失 FormerlySerializedAs","/unity/2021-07-20-formerlyserializedas",{"title":850,"_path":851},"AI-PLANNER使用","/unity/2021-08-01-ai-planner",{"title":853,"_path":854},"Increased script assembly reload time","/unity/2021-10-01-increased-script-assembly-reload-time",{"title":856,"_path":857},"关于unity的热重载的研究","/unity/2022-01-02-unity-hot-reload",{"title":859,"_path":860},"Editor Iteration Profiler的使用","/unity/2022-01-28-unity-editor-iteration-profiler",{"title":862,"_path":863},"CircleCast和Overlapple的区别是什么","/unity/2022-04-02-circlecast-overlapple-diff",{"title":865,"_path":866},"unity ecs的备忘录","/unity/2022-09-10-ecs-beiwang",1710779037541]