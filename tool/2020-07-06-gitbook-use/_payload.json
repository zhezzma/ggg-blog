[{"data":1,"prerenderedAt":1028},["Reactive",2],{"content-query-3YH2Jzp5DO":3,"content-navigation-8C37fagqQL":446},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":440,"_id":441,"_source":442,"_file":443,"_extension":444,"date":445},"/tool/2020-07-06-gitbook-use","tool",false,"","gitbook的使用","使用npm安装gitbook现在安装 Node.js 都会默认安装 npm（node 包管理工具），所以我们不用单独安装 npm，打开命令行，执行以下命令安装 GitBook：npm install -g gitbook-cli\n使用Git Bash操作如下图：好了，准备好了三件套工具之后，就是来看看怎么编写GitBook了。编写GitBook创建电子书的文件夹目录想象一下，现在你准备构建一本书籍，你在硬盘上新建了一个叫 mybook 的文件夹，按照以前的做法，你会新建一个 Word 文档，写上标题，然后开始巴滋巴滋地笔耕。初始化Gitbook但是现在有了 GitBook，你首先要做的是在 m",{"type":11,"children":12,"toc":427},"root",[13,21,27,40,53,61,73,80,85,94,101,107,115,127,134,139,154,160,165,172,177,188,193,200,206,218,225,230,237,243,267,274,281,287,292,297,308,313,355,362,382,393,404,413,418],{"type":14,"tag":15,"props":16,"children":18},"element","h3",{"id":17},"使用npm安装gitbook",[19],{"type":20,"value":17},"text",{"type":14,"tag":22,"props":23,"children":24},"p",{},[25],{"type":20,"value":26},"现在安装 Node.js 都会默认安装 npm（node 包管理工具），所以我们不用单独安装 npm，打开命令行，执行以下命令安装 GitBook：",{"type":14,"tag":28,"props":29,"children":34},"pre",{"className":30,"code":32,"language":33,"meta":7},[31],"language-undefined","npm install -g gitbook-cli\n","undefined",[35],{"type":14,"tag":36,"props":37,"children":38},"code",{"__ignoreMap":7},[39],{"type":20,"value":32},{"type":14,"tag":22,"props":41,"children":42},{},[43,45,51],{"type":20,"value":44},"使用",{"type":14,"tag":46,"props":47,"children":48},"strong",{},[49],{"type":20,"value":50},"Git Bash",{"type":20,"value":52},"操作如下图：",{"type":14,"tag":22,"props":54,"children":55},{},[56],{"type":14,"tag":57,"props":58,"children":60},"img",{"alt":57,"src":59},"/images/2020-07-06-gitbook-use/13423234-3ef32e72168040b1.png",[],{"type":14,"tag":22,"props":62,"children":63},{},[64,66,71],{"type":20,"value":65},"好了，准备好了三件套工具之后，就是来看看怎么编写",{"type":14,"tag":46,"props":67,"children":68},{},[69],{"type":20,"value":70},"GitBook",{"type":20,"value":72},"了。",{"type":14,"tag":74,"props":75,"children":77},"h2",{"id":76},"编写gitbook",[78],{"type":20,"value":79},"编写GitBook",{"type":14,"tag":15,"props":81,"children":83},{"id":82},"创建电子书的文件夹目录",[84],{"type":20,"value":82},{"type":14,"tag":86,"props":87,"children":88},"blockquote",{},[89],{"type":14,"tag":22,"props":90,"children":91},{},[92],{"type":20,"value":93},"想象一下，现在你准备构建一本书籍，你在硬盘上新建了一个叫 mybook 的文件夹，按照以前的做法，你会新建一个 Word 文档，写上标题，然后开始巴滋巴滋地笔耕。",{"type":14,"tag":22,"props":95,"children":96},{},[97],{"type":14,"tag":57,"props":98,"children":100},{"alt":57,"src":99},"/images/2020-07-06-gitbook-use/13423234-4c42d4ea26ffe4d4.png",[],{"type":14,"tag":15,"props":102,"children":104},{"id":103},"初始化gitbook",[105],{"type":20,"value":106},"初始化Gitbook",{"type":14,"tag":86,"props":108,"children":109},{},[110],{"type":14,"tag":22,"props":111,"children":112},{},[113],{"type":20,"value":114},"但是现在有了 GitBook，你首先要做的是在 mybook 文件夹下执行以下命令：",{"type":14,"tag":22,"props":116,"children":117},{},[118,119,125],{"type":20,"value":44},{"type":14,"tag":36,"props":120,"children":122},{"className":121},[],[123],{"type":20,"value":124},"gitbook init",{"type":20,"value":126},"初始化gitbook，操作如下：",{"type":14,"tag":22,"props":128,"children":129},{},[130],{"type":14,"tag":57,"props":131,"children":133},{"alt":57,"src":132},"/images/2020-07-06-gitbook-use/13423234-325fdbbe1bad6026.png",[],{"type":14,"tag":22,"props":135,"children":136},{},[137],{"type":20,"value":138},"执行完后，你会看到多了两个文件 —— README.md 和 SUMMARY.md，它们的作用如下：",{"type":14,"tag":140,"props":141,"children":142},"ul",{},[143,149],{"type":14,"tag":144,"props":145,"children":146},"li",{},[147],{"type":20,"value":148},"README.md —— 书籍的介绍写在这个文件里",{"type":14,"tag":144,"props":150,"children":151},{},[152],{"type":20,"value":153},"SUMMARY.md —— 书籍的目录结构在这里配置",{"type":14,"tag":15,"props":155,"children":157},{"id":156},"使用typora来编写框架内容",[158],{"type":20,"value":159},"使用Typora来编写框架内容",{"type":14,"tag":22,"props":161,"children":162},{},[163],{"type":20,"value":164},"这时候，我们启动恭候多时的 Typora 来编辑这两个文件了：",{"type":14,"tag":22,"props":166,"children":167},{},[168],{"type":14,"tag":57,"props":169,"children":171},{"alt":57,"src":170},"/images/2020-07-06-gitbook-use/13423234-637f36f709e63f81.png",[],{"type":14,"tag":22,"props":173,"children":174},{},[175],{"type":20,"value":176},"编辑 SUMMARY.md 文件，内容修改为：",{"type":14,"tag":28,"props":178,"children":183},{"className":179,"code":181,"language":182,"meta":7},[180],"language-bash","# 目录\n\n* [前言](README.md)\n* [第一章](Chapter1/README.md)\n  * [第1节：衣](Chapter1/衣.md)\n  * [第2节：食](Chapter1/食.md)\n  * [第3节：住](Chapter1/住.md)\n  * [第4节：行](Chapter1/行.md)\n* [第二章](Chapter2/README.md)\n* [第三章](Chapter3/README.md)\n* [第四章](Chapter4/README.md)\n","bash",[184],{"type":14,"tag":36,"props":185,"children":186},{"__ignoreMap":7},[187],{"type":20,"value":181},{"type":14,"tag":22,"props":189,"children":190},{},[191],{"type":20,"value":192},"显示如下：",{"type":14,"tag":22,"props":194,"children":195},{},[196],{"type":14,"tag":57,"props":197,"children":199},{"alt":57,"src":198},"/images/2020-07-06-gitbook-use/13423234-a0e40da1d8ae2f1a.png",[],{"type":14,"tag":15,"props":201,"children":203},{"id":202},"重新使用gitbook根据目录初始化篇章",[204],{"type":20,"value":205},"重新使用gitbook根据目录，初始化篇章",{"type":14,"tag":22,"props":207,"children":208},{},[209,211,216],{"type":20,"value":210},"然后我们回到命令行，在 mybook 文件夹中再次执行 ",{"type":14,"tag":36,"props":212,"children":214},{"className":213},[],[215],{"type":20,"value":124},{"type":20,"value":217}," 命令。GitBook 会查找 SUMMARY.md 文件中描述的目录和文件，如果没有则会将其创建。",{"type":14,"tag":22,"props":219,"children":220},{},[221],{"type":14,"tag":57,"props":222,"children":224},{"alt":57,"src":223},"/images/2020-07-06-gitbook-use/13423234-92aaec1127fbe9c8.png",[],{"type":14,"tag":22,"props":226,"children":227},{},[228],{"type":20,"value":229},"Typora 是所见即所得（实时渲染）的 Markdown 编辑器，这时候它是这样的：",{"type":14,"tag":22,"props":231,"children":232},{},[233],{"type":14,"tag":57,"props":234,"children":236},{"alt":57,"src":235},"/images/2020-07-06-gitbook-use/13423234-e1fb9ef8f3b32226.png",[],{"type":14,"tag":15,"props":238,"children":240},{"id":239},"启动服务预览书籍",[241],{"type":20,"value":242},"启动服务，预览书籍",{"type":14,"tag":22,"props":244,"children":245},{},[246,248,254,256,265],{"type":20,"value":247},"接着我们执行 ",{"type":14,"tag":36,"props":249,"children":251},{"className":250},[],[252],{"type":20,"value":253},"gitbook serve",{"type":20,"value":255}," 来预览这本书籍，执行命令后会对 Markdown 格式的文档进行转换，默认转换为 html 格式，最后提示 “Serving book on ",{"type":14,"tag":257,"props":258,"children":262},"a",{"href":259,"rel":260},"https://links.jianshu.com/go?to=http%3A%2F%2Flocalhost%3A4000%2F",[261],"nofollow",[263],{"type":20,"value":264},"http://localhost:4000",{"type":20,"value":266},"”。嗯，打开浏览器看一下吧：",{"type":14,"tag":22,"props":268,"children":269},{},[270],{"type":14,"tag":57,"props":271,"children":273},{"alt":57,"src":272},"/images/2020-07-06-gitbook-use/13423234-a49ea1d4e0bdeb98.png",[],{"type":14,"tag":22,"props":275,"children":276},{},[277],{"type":14,"tag":57,"props":278,"children":280},{"alt":57,"src":279},"/images/2020-07-06-gitbook-use/13423234-ca03c52cfdc1ac64.png",[],{"type":14,"tag":74,"props":282,"children":284},{"id":283},"结合-github-pages",[285],{"type":20,"value":286},"结合 GitHub Pages",{"type":14,"tag":22,"props":288,"children":289},{},[290],{"type":20,"value":291},"GitHub Pages 是 GitHub 提供的静态网站托管服务。",{"type":14,"tag":22,"props":293,"children":294},{},[295],{"type":20,"value":296},"GitHub 上的每个仓库都可以拥有一个 GitHub Pages，对应的 URL 如下：",{"type":14,"tag":28,"props":298,"children":303},{"className":299,"code":301,"language":302,"meta":7},[300],"language-xml","https://\u003Cusername>.github.io/\u003Crepository>/\n","xml",[304],{"type":14,"tag":36,"props":305,"children":306},{"__ignoreMap":7},[307],{"type":20,"value":301},{"type":14,"tag":22,"props":309,"children":310},{},[311],{"type":20,"value":312},"GitHub Pages 的静态资源支持下面 3 个来源：",{"type":14,"tag":140,"props":314,"children":315},{},[316,327,345],{"type":14,"tag":144,"props":317,"children":318},{},[319,325],{"type":14,"tag":36,"props":320,"children":322},{"className":321},[],[323],{"type":20,"value":324},"master",{"type":20,"value":326}," 分支",{"type":14,"tag":144,"props":328,"children":329},{},[330,335,337,343],{"type":14,"tag":36,"props":331,"children":333},{"className":332},[],[334],{"type":20,"value":324},{"type":20,"value":336}," 分支的 ",{"type":14,"tag":36,"props":338,"children":340},{"className":339},[],[341],{"type":20,"value":342},"/docs",{"type":20,"value":344}," 目录",{"type":14,"tag":144,"props":346,"children":347},{},[348,354],{"type":14,"tag":36,"props":349,"children":351},{"className":350},[],[352],{"type":20,"value":353},"gh-pages",{"type":20,"value":326},{"type":14,"tag":22,"props":356,"children":357},{},[358],{"type":14,"tag":57,"props":359,"children":361},{"alt":57,"src":360},"/images/2020-07-06-gitbook-use/1624919-00837dbbb587799c.jpg",[],{"type":14,"tag":22,"props":363,"children":364},{},[365,367,373,375,380],{"type":20,"value":366},"执行下面命令，将 ",{"type":14,"tag":36,"props":368,"children":370},{"className":369},[],[371],{"type":20,"value":372},"_book",{"type":20,"value":374}," 目录推送到 GitHub 仓库的 ",{"type":14,"tag":36,"props":376,"children":378},{"className":377},[],[379],{"type":20,"value":353},{"type":20,"value":381}," 分支。",{"type":14,"tag":28,"props":383,"children":388},{"className":384,"code":386,"language":387,"meta":7},[385],"language-shell","$ git checkout --orphan gh-pages\n$ code .nojekyll\n","shell",[389],{"type":14,"tag":36,"props":390,"children":391},{"__ignoreMap":7},[392],{"type":20,"value":386},{"type":14,"tag":22,"props":394,"children":395},{},[396,398],{"type":20,"value":397},"或者在生成静态网页时，将保存的目录指定为 ",{"type":14,"tag":36,"props":399,"children":401},{"className":400},[],[402],{"type":20,"value":403},"./docs",{"type":14,"tag":28,"props":405,"children":408},{"className":406,"code":407,"language":387,"meta":7},[385],"$ gitbook build ./ ./docs\n",[409],{"type":14,"tag":36,"props":410,"children":411},{"__ignoreMap":7},[412],{"type":20,"value":407},{"type":14,"tag":22,"props":414,"children":415},{},[416],{"type":20,"value":417},"然后直接推送到 GitHub 仓库的。",{"type":14,"tag":28,"props":419,"children":422},{"className":420,"code":421,"language":387,"meta":7},[385],"$ git push origin master\n",[423],{"type":14,"tag":36,"props":424,"children":425},{"__ignoreMap":7},[426],{"type":20,"value":421},{"title":7,"searchDepth":428,"depth":428,"links":429},2,[430,432,439],{"id":17,"depth":431,"text":17},3,{"id":76,"depth":428,"text":79,"children":433},[434,435,436,437,438],{"id":82,"depth":431,"text":82},{"id":103,"depth":431,"text":106},{"id":156,"depth":431,"text":159},{"id":202,"depth":431,"text":205},{"id":239,"depth":431,"text":242},{"id":283,"depth":428,"text":286},"markdown","content:tool:2020-07-06-gitbook-use.md","content","tool/2020-07-06-gitbook-use.md","md","2020-07-06",[447,457,584,633,685,698,808],{"title":448,"_path":449,"children":450},"Art","/art",[451,454],{"title":452,"_path":453},"如何用蒙版将两个图过渡融合","/art/2020-09-03-ps-ronghe-pics",{"title":455,"_path":456},"像素画入门","/art/2022-02-02-xiangsuhuarumen",{"title":458,"_path":459,"children":460},"Dotnet","/dotnet",[461,464,467,470,473,476,479,482,485,488,491,494,497,500,503,506,509,512,515,518,521,524,527,530,533,536,539,542,545,548,551,554,557,560,563,566,569,572,575,578,581],{"title":462,"_path":463},"Linux部署dotnetcore记录","/dotnet/2019-06-05-linux-dotnet-daemon",{"title":465,"_path":466},"时间轮的引入","/dotnet/2019-10-29-time-wheel",{"title":468,"_path":469},"帧同步的相关问题","/dotnet/2019-11-01-lock-step",{"title":471,"_path":472},"状态同步的相关问题","/dotnet/2019-11-01-state-sync-npc",{"title":474,"_path":475},"状态同步--技能系统的同步机制分析","/dotnet/2019-11-02-state-sync-skill",{"title":477,"_path":478},"Creating a Quartz.NET hosted service with ASP.NET Core","/dotnet/2019-11-05-quartz",{"title":480,"_path":481},"DatetimeOffset和Datetime的区别","/dotnet/2019-12-01-datetimeoffset",{"title":483,"_path":484},"大小端字节序(Big Endian和Little Endian)","/dotnet/2020-01-05-big-little-endian",{"title":486,"_path":487},"dll文件的加载","/dotnet/2020-01-06-dll-load",{"title":489,"_path":490},"延迟补偿在C/S架构游戏协议设计和优化中的应用","/dotnet/2020-02-02-latency_compensating_methods_in_clientserver_in-game_protocol_design_and_optimization",{"title":492,"_path":493},"延迟补偿和对时的相关总结","/dotnet/2020-02-02-latency_compensating-rtt",{"title":495,"_path":496},"快节奏多人游戏同步(1)-ClientServer架构","/dotnet/2020-02-02-net-sync-client-server-game-architecture",{"title":498,"_path":499},"快节奏多人游戏同步(2)-客户端预测与服务器校对","/dotnet/2020-02-02-net-sync-client-side-prediction-and-server-reconciliation",{"title":501,"_path":502},"快节奏多人游戏同步(3)-Entity插值","/dotnet/2020-02-02-net-sync-entity-interpolation",{"title":504,"_path":505},"快节奏多人游戏同步(4)-延时补偿","/dotnet/2020-02-02-net-sync-lag-compensation",{"title":507,"_path":508},"守望先锋等FPS游戏的网络同步","/dotnet/2020-02-02-overwatch-a-guide-to-understanding-netcode",{"title":510,"_path":511},"起源引擎网络同步模型","/dotnet/2020-02-02-source_multiplayer_networking",{"title":513,"_path":514},"orleans的部署模式","/dotnet/2020-02-03-orleans-deployment",{"title":516,"_path":517},"一致性hash算法","/dotnet/2020-02-06-consistent_hash",{"title":519,"_path":520},"地图的aoi","/dotnet/2020-02-07-aoi",{"title":522,"_path":523},"游戏的匹配机制ELO","/dotnet/2020-02-09-room-elo",{"title":525,"_path":526},"C# 深浅复制","/dotnet/2020-02-10-icloneable",{"title":528,"_path":529},"C#引用类型对象在循环引用时会不会内存泄漏","/dotnet/2020-02-11-gc",{"title":531,"_path":532},"扒一扒.net、.net framework、mono和Unity","/dotnet/2020-02-12-netcore-mono-netframework",{"title":534,"_path":535},"c#编译和运行启动原理","/dotnet/2020-02-13-csharp-run",{"title":537,"_path":538},"abp新建项目指南","/dotnet/2020-05-29-abp-start",{"title":540,"_path":541},"2020 06 11 IdentityServer Use","/dotnet/2020-06-11-identityserver-use",{"title":543,"_path":544},"关于abp的用户的一些问题","/dotnet/2020-07-05-abp-database-user",{"title":546,"_path":547},"abp的dOC模块使用","/dotnet/2020-07-10-abp-doc",{"title":549,"_path":550},"abp默认语言规则","/dotnet/2020-07-15-abp-default-language",{"title":552,"_path":553},"Orleans 最佳实践","/dotnet/2020-08-09-orleans-best-practices",{"title":555,"_path":556},"c#特性参数","/dotnet/2020-08-10-param-attribute",{"title":558,"_path":559},".NET Core 获取 HttpContext.Current 以及 AsyncLocal 与 ThreadLocal","/dotnet/2020-08-11-httpcontextaccessor-asynclocal",{"title":561,"_path":562},"Kestrel源码分析","/dotnet/2020-08-15-kestrel-source-code",{"title":564,"_path":565},"ConcurrentDictionary并发字典","/dotnet/2020-08-16-concurrentdictionary",{"title":567,"_path":568},"IOptions、IOptionsMonitor以及IOptionsSnapshot","/dotnet/2020-08-17-netcore-options",{"title":570,"_path":571},".NET Core/Framework 创建委托以大幅度提高反射调用的性能","/dotnet/2020-11-13-reflection-method",{"title":573,"_path":574},"C＃枚举中使用Flags特性","/dotnet/2020-11-24-flags",{"title":576,"_path":577},"谷歌浏览器下netcore登录失败问题","/dotnet/2020-12-11-chrome-login-fail",{"title":579,"_path":580},"Converting between Structs and Byte Arrays","/dotnet/2021-05-01-converting-between-structs-and-byte-arrays",{"title":582,"_path":583},"c#在重写object中的Equal方法时需要对GetHashCode进行重写（Dictionary引用）","/dotnet/2022-08-15-equal-hashcode",{"title":585,"_path":586,"children":587},"Game","/game",[588,591,594,597,600,603,606,609,612,615,618,621,624,627,630],{"title":589,"_path":590},"使用柏林噪声算法生成地图","/game/2021-01-20-perlin-map",{"title":592,"_path":593},"波函数坍塌算法生成地图","/game/2021-01-21-wave-collapse-function",{"title":595,"_path":596},"文明6地图生成算法","/game/2021-01-22-civ-map",{"title":598,"_path":599},"roguelike地牢生成算法","/game/2021-01-23-roguelike-map",{"title":601,"_path":602},"Spelunky关卡生成","/game/2021-01-23-spelunky-map",{"title":604,"_path":605},"Edgar源代码解读","/game/2021-06-12-edgar-code-read",{"title":607,"_path":608},"rpgbuild的一些备注","/game/2021-06-15-rpgbuilder",{"title":610,"_path":611},"游戏人物设计","/game/2021-08-05-game-task-design",{"title":613,"_path":614},"unity gameplay ability源代码解析","/game/2021-12-14-untiy-gameplay-ablility-sourcecode",{"title":616,"_path":617},"苟与剑游戏技能分析","/game/2021-12-21-gyj-skill",{"title":619,"_path":620},"quest machine 使用相关","/game/2022-02-19-quest-machine",{"title":622,"_path":623},"苟与剑中的单位生成方式","/game/2022-03-16-gyj-map",{"title":625,"_path":626},"ecs中实体创建方法","/game/2022-08-03-ecs",{"title":628,"_path":629},"暗黑2怪物等级和掉落规则","/game/2022-08-05-dia2",{"title":631,"_path":632},"行为树源代码解析","/game/2022-08-21-behavior-tree-source-code",{"title":634,"_path":635,"children":636},"Gyj","/gyj",[637,640,643,646,649,652,655,658,661,664,667,670,673,676,679,682],{"title":638,"_path":639},"美术要求","/gyj/2022-06-11-meishuyaoqiu",{"title":641,"_path":642},"游戏基础知识","/gyj/2022-06-12-jichuzhishi",{"title":644,"_path":645},"2022 08 22 地图房间的种类","/gyj/2022-08-22-detufangjiandezhonglei",{"title":647,"_path":648},"2022 08 22 奇遇事件","/gyj/2022-08-22-qiyushijian",{"title":650,"_path":651},"游戏流程","/gyj/2022-08-22-youxiliucheng",{"title":653,"_path":654},"物品产出表","/gyj/2022-08-22-wupinchanchubiao",{"title":656,"_path":657},"玩法","/gyj/2022-08-22-wanfa",{"title":659,"_path":660},"初入江湖","/gyj/2022-08-22-diyizhang",{"title":662,"_path":663},"2022 08 22 职业与工作","/gyj/2022-08-22-zhiyeyugongzuo",{"title":665,"_path":666},"天下霸图研究","/gyj/2022-11-01-tianxiabatu",{"title":668,"_path":669},"流放之路关于伤害公式和技能的分析","/gyj/2022-11-17-liufangzhilu",{"title":671,"_path":672},"门派内容相关","/gyj/2022-11-17-sect",{"title":674,"_path":675},"2022 12 01 养殖","/gyj/2022-12-01-yangzhi",{"title":677,"_path":678},"种植","/gyj/2022-12-01-zhongzhi",{"title":680,"_path":681},"人物属性设计","/gyj/2022-12-15-renwushuxing",{"title":683,"_path":684},"跑商","/gyj/2023-11-01-paoshang",{"title":686,"_path":687,"children":688},"Js","/js",[689,692,695],{"title":690,"_path":691},"如何在TypeScript中使用JS类库","/js/2022-02-12-typescript-use-js",{"title":693,"_path":694},"nuxt3项目初始化失败","/js/2023-05-16-nuxt3-init-fail",{"title":696,"_path":697},"Flex 布局使用","/js/2024-03-17-flex-use",{"title":699,"_path":700,"children":701},"Tool","/tool",[702,705,708,711,714,717,720,723,726,729,732,735,738,741,744,747,750,751,754,757,760,763,766,769,772,775,778,781,784,787,790,793,796,799,802,805],{"title":703,"_path":704},"windows发送到手机Ftp","/tool/2019-06-20-windows-send-to-ftp",{"title":706,"_path":707},"windows特殊目录修复","/tool/2019-06-24-shell-folders-are-displayed-with-the-standard-folder-icon-in-windows",{"title":709,"_path":710},"scourcetree  总是需要输入密码","/tool/2019-08-07-sourcetree-git-password",{"title":712,"_path":713},"powershell 常用命令","/tool/2019-08-10-powershell-command",{"title":715,"_path":716},"scoop的使用","/tool/2019-08-20-scoop-use",{"title":718,"_path":719},"使用配置文件来管理NuGet包版本F","/tool/2019-09-02-nuget-manager",{"title":721,"_path":722},"Redis的两种持久化RDB和AOF","/tool/2019-09-02-redis-aof-rdb",{"title":724,"_path":725},"使用 SSH 登陆谷歌云 root 或者 普通账户的方法","/tool/2020-01-02-google-clound-local-login",{"title":727,"_path":728},"CentOS 下安装Shadowsocks 搭建ss","/tool/2020-01-12-centosn-ss-install",{"title":730,"_path":731},"mac下brew 使用","/tool/2020-01-13-brew",{"title":733,"_path":734},"术语中英文对照","/tool/2020-02-05-game_en_zh",{"title":736,"_path":737},"Excel中以文本形式存储的数字","/tool/2020-02-06-excel-text-number",{"title":739,"_path":740},"protobuf序列化的一些问题","/tool/2020-03-25-protobuf-empty-collections",{"title":742,"_path":743},"为博客将 RSS 转为邮件订阅","/tool/2020-06-26-blog-mail-sub",{"title":745,"_path":746},"github下载代码的速度太慢","/tool/2020-06-27-linux-github-slow",{"title":748,"_path":749},"win10开始菜单添加软件以及备份和恢复","/tool/2020-07-02-win10-start-menu",{"title":8,"_path":4},{"title":752,"_path":753},"github actions 简单使用","/tool/2020-07-11-github-actions",{"title":755,"_path":756},"使用hexo建立博客并部署到github","/tool/2020-07-12-hexo-github",{"title":758,"_path":759},"终端下设置代理","/tool/2020-07-13-terminal-proxy",{"title":761,"_path":762},"发现nuget包太占用C盘，怎么办？","/tool/2020-08-30-nuget-is-big",{"title":764,"_path":765},"unity商店下载资源迁移","/tool/2020-11-15-unity-is-big",{"title":767,"_path":768},"关于coding的pages介绍","/tool/2020-11-16-coding-pages",{"title":770,"_path":771},"一些常用的dns服务器","/tool/2021-05-06-dns",{"title":773,"_path":774},"UE4素材破解","/tool/2021-11-06-ue4-view",{"title":776,"_path":777},"安装cockpit通过nginx代理访问","/tool/2021-11-07-cockpit-linux",{"title":779,"_path":780},"Windows LTSC、LTSB、Server 安装 Windows Store 应用商店 ","/tool/2021-11-15-install-windowsstore",{"title":782,"_path":783},"我是如何把 VS Code 插件启动速度从 8 秒减少到 1 秒 ","/tool/2021-12-02-vscode-plugins-big",{"title":785,"_path":786},"云效部署hexo到自己的主机 ","/tool/2021-12-11-yunxiao-liushuixian-hexo",{"title":788,"_path":789},"github 怎么合并原始分支？ ","/tool/2021-12-12-github-sync",{"title":791,"_path":792},"code server安装制作online ide","/tool/2022-01-30-code-server",{"title":794,"_path":795},"rider的使用","/tool/2022-08-02-rider-use",{"title":797,"_path":798},"2022 08 09 Amd Over","/tool/2022-08-09-amd-over",{"title":800,"_path":801},"rider破解","/tool/2022-11-19-rider-po-jie",{"title":803,"_path":804},"stable diffusion install","/tool/2023-01-20-stable-diffusion-install",{"title":806,"_path":807},"CGI, FastCGI, WSGI, uWSGI, uwsgi一文搞懂","/tool/2023-02-15-cgi-fastcgi-wsgi-uswgi",{"title":809,"_path":810,"children":811},"Unity","/unity",[812,815,818,821,824,827,830,833,836,839,842,845,848,851,854,857,860,863,866,869,872,875,878,881,884,887,890,893,896,899,902,905,908,911,914,917,920,923,926,929,932,935,938,941,944,947,950,953,956,959,962,965,968,971,974,977,980,983,986,989,992,995,998,1001,1004,1007,1010,1013,1016,1019,1022,1025],{"title":813,"_path":814},"Unity 导出 Android 64-bit 版本","/unity/2019-06-20-unity-android-x64",{"title":816,"_path":817},"Unity的il2cpp","/unity/2019-06-20-unity-il2cpp-debugger",{"title":819,"_path":820},"googlePlay 发布问题","/unity/2019-06-23-googlplay-pulish",{"title":822,"_path":823},"关于unity的适配问题","/unity/2019-08-09-unity2d-shipei",{"title":825,"_path":826},"一次精通 RectTransform","/unity/2019-08-10-ugui-recttransform",{"title":828,"_path":829},"一次精通 eventmanager","/unity/2019-08-11-ugui-eventmanager",{"title":831,"_path":832},"ugui的eventsystem源码解读","/unity/2019-08-12-ugui-eventsystem-sourcecode",{"title":834,"_path":835},"Unity Raycasters 剖析","/unity/2019-08-12-ugui-raycasters",{"title":837,"_path":838},"关于addressable那些事","/unity/2019-09-01-addressable",{"title":840,"_path":841},"关于spriteAtlas打包那些事","/unity/2019-09-01-spriteatlas",{"title":843,"_path":844},"ilruntime的研究","/unity/2019-09-02-ilruntime",{"title":846,"_path":847},"unity的宏以及添加net框架中未引用的dll","/unity/2019-09-02-unity-reference-dll",{"title":849,"_path":850},"xlua注入源码解读","/unity/2019-09-03-xlua-inject",{"title":852,"_path":853},"如何快速的注入汇编","/unity/2019-09-04-mono.cecil-inject",{"title":855,"_path":856},"2D游戏视差背景的实现","/unity/2019-09-13-parallax-2d",{"title":858,"_path":859},"unity使用代理","/unity/2019-11-15-unity-proxy",{"title":861,"_path":862},"一篇文章搞定Entitas","/unity/2020-01-01-unity-entitas",{"title":864,"_path":865},"unity攻击范围检测的方式区别","/unity/2020-01-11-unity-attack-range-detection-type",{"title":867,"_path":868},"常见的2D碰撞检测","/unity/2020-01-12-collision-detection",{"title":870,"_path":871},"unity攻击范围检测","/unity/2020-01-13-unity-attack-detection",{"title":873,"_path":874},"技能系统","/unity/2020-02-15-skill-system",{"title":876,"_path":877},"游戏buff系统设计","/unity/2020-02-16-buff-system",{"title":879,"_path":880},"角色状态设计","/unity/2020-02-17-character-states",{"title":882,"_path":883},"理解托管堆","/unity/2020-02-18-bestpracticeunderstandingperformanceinunity",{"title":885,"_path":886},"理解自动内存管理","/unity/2020-02-19-understandingautomaticmemorymanagement",{"title":888,"_path":889},"unity 移动平台打包丢失shader的问题","/unity/2020-02-20-shader-lost",{"title":891,"_path":892},"Unity的调试相关","/unity/2020-03-01-unity-debug",{"title":894,"_path":895},"unity启动运行脚本流程","/unity/2020-03-04-unity-startup",{"title":897,"_path":898},"unity的坐标体系","/unity/2020-07-01-unity-coordinate",{"title":900,"_path":901},"2020 07 03 Unity Mesh","/unity/2020-07-03-unity-mesh",{"title":903,"_path":904},"unity Render Pipeline","/unity/2020-07-04-unity-render-pipeline",{"title":906,"_path":907},"Notch Solution","/unity/2020-08-29-notch-solution",{"title":909,"_path":910},"unity 项目dll检查","/unity/2020-08-30-unity-dll-check",{"title":912,"_path":913},"UNITY的垂直同步和帧率","/unity/2020-09-05-unity-vsynccount",{"title":915,"_path":916},"UNITY性能优化流程","/unity/2020-09-10-optimizing-for-performance",{"title":918,"_path":919},"堆栈内存Stack和堆内存Heap","/unity/2020-09-11-stack-heap",{"title":921,"_path":922},"unity的addressables","/unity/2020-09-12-addressables",{"title":924,"_path":925},"游戏中的向量使用","/unity/2020-09-13-vector",{"title":927,"_path":928},"UNITY ECS 详解","/unity/2020-10-15-unity-ecs",{"title":930,"_path":931},"UNITY JOB SYSTEM详解","/unity/2020-10-16-unity-job",{"title":933,"_path":934},"运行时打包图集","/unity/2020-10-17-runtime-spriteatlas",{"title":936,"_path":937},"unity ecs component","/unity/2020-10-18-unity-ecs-component",{"title":939,"_path":940},"基于 Game Object Conversion 和 SubScene 的 DOTS 开发工作流","/unity/2020-10-19-game-object-conversion-and-subscene",{"title":942,"_path":943},"源代码分析world的创建","/unity/2020-10-20-ecs-world",{"title":945,"_path":946},"unity使用platforms构建","/unity/2020-10-21-platform",{"title":948,"_path":949},"Unity rendering order渲染顺序","/unity/2020-10-22-unity-render-order",{"title":951,"_path":952},"关于静态批处理/动态批处理/GPU Instancing /SRP Batcher的详细剖析","/unity/2020-10-23-unity-optimizing-gpu",{"title":954,"_path":955},"unity的ScreenToWorldPoint","/unity/2020-10-24-screentoworldpoint",{"title":957,"_path":958},"URP性能测试","/unity/2020-10-24-unity-urp-performance",{"title":960,"_path":961},"如何使用Unity ECS打造Reactive System？","/unity/2020-11-11-how-to-build-reactive-systems-with-unity-ecs",{"title":963,"_path":964},"Unity中Sprite和UI Image的区别","/unity/2020-11-12-sprite-image-diff",{"title":966,"_path":967},"简单保存工具","/unity/2020-11-13-simple-save",{"title":969,"_path":970},"2020 11 14 Netcode","/unity/2020-11-14-netcode",{"title":972,"_path":973},"ecs中的parent","/unity/2020-11-15-ecs-parent",{"title":975,"_path":976},"ability","/unity/2020-11-16-dotssample",{"title":978,"_path":979},"unity world time system","/unity/2020-11-17-unity-ecs-worldtime",{"title":981,"_path":982},"netcode源代码解读","/unity/2020-11-18-netcode-sourcecode",{"title":984,"_path":985},"pitch yaw roll是什么","/unity/2020-11-29-pitch-yaw-roll",{"title":987,"_path":988},"A Native Collection has not been disposed, resulting in a memory leak. Allocated from:","/unity/2020-12-20-collection-has-not-been-disposed",{"title":990,"_path":991},"解决Unity鼠标坐标点转成世界坐标系坐标点","/unity/2021-01-24-screentoworld",{"title":993,"_path":994},"2021 01 25 Tilemap","/unity/2021-01-25-tilemap",{"title":996,"_path":997},"Unity RenderTexture的应用","/unity/2021-04-11-render-texture",{"title":999,"_path":1000},"commandbuff的一些问题","/unity/2021-05-20-ecs-commandbuff-question",{"title":1002,"_path":1003},"How to Make One Way Platform in unity","/unity/2021-06-13-how-to-make-one-way-platform",{"title":1005,"_path":1006},"UNITY的渲染顺序","/unity/2021-06-14-unity-render-order",{"title":1008,"_path":1009},"防止变量引用丢失 FormerlySerializedAs","/unity/2021-07-20-formerlyserializedas",{"title":1011,"_path":1012},"AI-PLANNER使用","/unity/2021-08-01-ai-planner",{"title":1014,"_path":1015},"Increased script assembly reload time","/unity/2021-10-01-increased-script-assembly-reload-time",{"title":1017,"_path":1018},"关于unity的热重载的研究","/unity/2022-01-02-unity-hot-reload",{"title":1020,"_path":1021},"Editor Iteration Profiler的使用","/unity/2022-01-28-unity-editor-iteration-profiler",{"title":1023,"_path":1024},"CircleCast和Overlapple的区别是什么","/unity/2022-04-02-circlecast-overlapple-diff",{"title":1026,"_path":1027},"unity ecs的备忘录","/unity/2022-09-10-ecs-beiwang",1710779040043]